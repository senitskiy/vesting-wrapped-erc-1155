{
	"id": "276b133170a111681ff5ca2e4d2158f2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor() { //string memory name_, string memory symbol_\n        _name = \"wrapVesting1155\";\n        _symbol = \"WV1155\";\n        // _totalSupply = 1000000000000;\n        \n        _mint(_msgSender(), 1000000000000); \n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 6;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/ERC20/ERC20.sol\":1106:10995  contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token/ERC20/ERC20.sol\":1592:1816  constructor() { //string memory name_, string memory symbol_... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":1661:1686  _name = \"wrapVesting1155\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x7772617056657374696e67313135350000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":1661:1666  _name */\n  0x03\n    /* \"contracts/token/ERC20/ERC20.sol\":1661:1686  _name = \"wrapVesting1155\" */\n  swap1\n  dup2\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":1696:1714  _symbol = \"WV1155\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x5756313135350000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":1696:1703  _symbol */\n  0x04\n    /* \"contracts/token/ERC20/ERC20.sol\":1696:1714  _symbol = \"WV1155\" */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":1774:1808  _mint(_msgSender(), 1000000000000) */\n  tag_7\n    /* \"contracts/token/ERC20/ERC20.sol\":1780:1792  _msgSender() */\n  tag_8\n    /* \"contracts/token/ERC20/ERC20.sol\":1780:1790  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/token/ERC20/ERC20.sol\":1780:1792  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/token/ERC20/ERC20.sol\":1794:1807  1000000000000 */\n  0xe8d4a51000\n    /* \"contracts/token/ERC20/ERC20.sol\":1774:1779  _mint */\n  shl(0x20, tag_10)\n    /* \"contracts/token/ERC20/ERC20.sol\":1774:1808  _mint(_msgSender(), 1000000000000) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/token/ERC20/ERC20.sol\":1106:10995  contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {... */\n  jump(tag_11)\n    /* \"contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/token/ERC20/ERC20.sol\":7559:7767  function _mint(address account, uint256 value) internal {... */\ntag_10:\n    /* \"contracts/token/ERC20/ERC20.sol\":7648:7649  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":7629:7650  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":7629:7636  account */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":7629:7650  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":7625:7716  if (account == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":7702:7703  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":7673:7705  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/token/ERC20/ERC20.sol\":7625:7716  if (account == address(0)) {... */\ntag_14:\n    /* \"contracts/token/ERC20/ERC20.sol\":7725:7760  _update(address(0), account, value) */\n  tag_17\n    /* \"contracts/token/ERC20/ERC20.sol\":7741:7742  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":7745:7752  account */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":7754:7759  value */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":7725:7732  _update */\n  shl(0x20, tag_18)\n    /* \"contracts/token/ERC20/ERC20.sol\":7725:7760  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/token/ERC20/ERC20.sol\":7559:7767  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC20/ERC20.sol\":6109:7216  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_18:\n    /* \"contracts/token/ERC20/ERC20.sol\":6214:6215  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6198:6216  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":6198:6202  from */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6198:6216  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":6194:6734  if (from == address(0)) {... */\n  tag_20\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":6350:6355  value */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6334:6346  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6334:6355  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":6194:6734  if (from == address(0)) {... */\n  jump(tag_23)\ntag_20:\n    /* \"contracts/token/ERC20/ERC20.sol\":6386:6405  uint256 fromBalance */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6408:6417  _balances */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6408:6423  _balances[from] */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6418:6422  from */\n  dup6\n    /* \"contracts/token/ERC20/ERC20.sol\":6408:6423  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/token/ERC20/ERC20.sol\":6386:6423  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":6455:6460  value */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":6441:6452  fromBalance */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":6441:6460  fromBalance < value */\n  lt\n    /* \"contracts/token/ERC20/ERC20.sol\":6437:6552  if (fromBalance < value) {... */\n  iszero\n  tag_24\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":6512:6516  from */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6518:6529  fromBalance */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":6531:6536  value */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":6487:6537  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/token/ERC20/ERC20.sol\":6437:6552  if (fromBalance < value) {... */\ntag_24:\n    /* \"contracts/token/ERC20/ERC20.sol\":6704:6709  value */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":6690:6701  fromBalance */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":6690:6709  fromBalance - value */\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":6672:6681  _balances */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6672:6687  _balances[from] */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6682:6686  from */\n  dup7\n    /* \"contracts/token/ERC20/ERC20.sol\":6672:6687  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/token/ERC20/ERC20.sol\":6672:6709  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":6372:6734  {... */\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":6194:6734  if (from == address(0)) {... */\ntag_23:\n    /* \"contracts/token/ERC20/ERC20.sol\":6762:6763  0 */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6748:6764  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":6748:6750  to */\n  dup3\n    /* \"contracts/token/ERC20/ERC20.sol\":6748:6764  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/token/ERC20/ERC20.sol\":6744:7169  if (to == address(0)) {... */\n  tag_27\n  jumpi\n    /* \"contracts/token/ERC20/ERC20.sol\":6927:6932  value */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":6911:6923  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":6911:6932  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":6744:7169  if (to == address(0)) {... */\n  jump(tag_28)\ntag_27:\n    /* \"contracts/token/ERC20/ERC20.sol\":7139:7144  value */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":7122:7131  _balances */\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":7122:7135  _balances[to] */\n  dup1\n    /* \"contracts/token/ERC20/ERC20.sol\":7132:7134  to */\n  dup5\n    /* \"contracts/token/ERC20/ERC20.sol\":7122:7135  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/token/ERC20/ERC20.sol\":7122:7144  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":6744:7169  if (to == address(0)) {... */\ntag_28:\n    /* \"contracts/token/ERC20/ERC20.sol\":7199:7201  to */\n  dup2\n    /* \"contracts/token/ERC20/ERC20.sol\":7184:7209  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/token/ERC20/ERC20.sol\":7193:7197  from */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":7184:7209  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/token/ERC20/ERC20.sol\":7203:7208  value */\n  dup4\n    /* \"contracts/token/ERC20/ERC20.sol\":7184:7209  Transfer(from, to, value) */\n  mload(0x40)\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/token/ERC20/ERC20.sol\":6109:7216  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_31:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_32:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_33:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_34:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_61:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_63\n  tag_33\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":714:798   */\ntag_62:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_35:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_36:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_37:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_38:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_68\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_37\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1429:1468   */\n  tag_69\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_37\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_39:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_40:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_41:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_73\n    /* \"#utility.yul\":1818:1852   */\n  tag_74\n    /* \"#utility.yul\":1827:1851   */\n  tag_75\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_39\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1818:1852   */\n  tag_40\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1800:1853   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_42:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_43:\n    /* \"#utility.yul\":2056:2095   */\n  tag_78\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_41\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2117:2208   */\n  tag_79\n    /* \"#utility.yul\":2166:2207   */\n  tag_80\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_42\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_38\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_44:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_45:\n    /* \"#utility.yul\":2377:2409   */\n  tag_83\n  tag_44\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2418:2483   */\n  tag_84\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_43\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_46:\n    /* \"#utility.yul\":2555:2675   */\ntag_86:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_89\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_45\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_47:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_92\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_35\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2906:2935   */\n  tag_93\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_36\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_94:\n    /* \"#utility.yul\":3133:3213   */\n  tag_95\n    /* \"#utility.yul\":3189:3211   */\n  tag_96\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_36\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_46\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_91:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_48:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_49:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_99\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_48\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_50:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_101\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_49\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_5:\n    /* \"#utility.yul\":3950:3987   */\n  tag_103\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_31\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_105\n  tag_32\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4038:4094   */\ntag_104:\n    /* \"#utility.yul\":4118:4156   */\n  tag_106\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4203:4270   */\n  tag_107\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_47\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_109\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_110:\n    /* \"#utility.yul\":5144:5211   */\n  tag_111\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_50\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_108)\n    /* \"#utility.yul\":4365:4983   */\ntag_109:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_112\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_35\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_113:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_113)\ntag_115:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_117\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_49\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_116:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_108:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_51:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_52:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_120\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_51\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_53:\n    /* \"#utility.yul\":5555:5579   */\n  tag_122\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_52\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_16:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_124\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_53\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_54:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_22:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_127\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_39\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_128\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_39\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_130\n  tag_54\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6154:6190   */\ntag_129:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_55:\n    /* \"#utility.yul\":6290:6314   */\n  tag_132\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_39\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_26:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_134\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_53\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6608:6680   */\n  tag_135\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_55\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6690:6762   */\n  tag_136\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_55\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_30:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_138\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_55\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token/ERC20/ERC20.sol\":1106:10995  contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/ERC20/ERC20.sol\":1106:10995  contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":1881:1970  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":4099:4285  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":2950:3047  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":4877:5121  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":2809:2890  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":3105:3221  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":2083:2176  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":3416:3594  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":3652:3792  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":1881:1970  function name() public view virtual returns (string memory) {... */\n    tag_14:\n        /* \"contracts/token/ERC20/ERC20.sol\":1926:1939  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":1958:1963  _name */\n      0x03\n        /* \"contracts/token/ERC20/ERC20.sol\":1951:1963  return _name */\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":1881:1970  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":4099:4285  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_20:\n        /* \"contracts/token/ERC20/ERC20.sol\":4172:4176  bool */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4188:4201  address owner */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":4204:4216  _msgSender() */\n      tag_61\n        /* \"contracts/token/ERC20/ERC20.sol\":4204:4214  _msgSender */\n      tag_62\n        /* \"contracts/token/ERC20/ERC20.sol\":4204:4216  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/token/ERC20/ERC20.sol\":4188:4216  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":4226:4257  _approve(owner, spender, value) */\n      tag_63\n        /* \"contracts/token/ERC20/ERC20.sol\":4235:4240  owner */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":4242:4249  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4251:4256  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4226:4234  _approve */\n      tag_64\n        /* \"contracts/token/ERC20/ERC20.sol\":4226:4257  _approve(owner, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/token/ERC20/ERC20.sol\":4274:4278  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":4267:4278  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":4099:4285  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2950:3047  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n        /* \"contracts/token/ERC20/ERC20.sol\":3002:3009  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3028:3040  _totalSupply */\n      sload(0x02)\n        /* \"contracts/token/ERC20/ERC20.sol\":3021:3040  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2950:3047  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":4877:5121  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"contracts/token/ERC20/ERC20.sol\":4964:4968  bool */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4980:4995  address spender */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":4998:5010  _msgSender() */\n      tag_67\n        /* \"contracts/token/ERC20/ERC20.sol\":4998:5008  _msgSender */\n      tag_62\n        /* \"contracts/token/ERC20/ERC20.sol\":4998:5010  _msgSender() */\n      jump\t// in\n    tag_67:\n        /* \"contracts/token/ERC20/ERC20.sol\":4980:5010  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5020:5057  _spendAllowance(from, spender, value) */\n      tag_68\n        /* \"contracts/token/ERC20/ERC20.sol\":5036:5040  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5042:5049  spender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":5051:5056  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5020:5035  _spendAllowance */\n      tag_69\n        /* \"contracts/token/ERC20/ERC20.sol\":5020:5057  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"contracts/token/ERC20/ERC20.sol\":5067:5093  _transfer(from, to, value) */\n      tag_70\n        /* \"contracts/token/ERC20/ERC20.sol\":5077:5081  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5083:5085  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5087:5092  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5067:5076  _transfer */\n      tag_71\n        /* \"contracts/token/ERC20/ERC20.sol\":5067:5093  _transfer(from, to, value) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/token/ERC20/ERC20.sol\":5110:5114  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":5103:5114  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":4877:5121  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2809:2890  function decimals() public view virtual returns (uint8) {... */\n    tag_33:\n        /* \"contracts/token/ERC20/ERC20.sol\":2858:2863  uint8 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":2882:2883  6 */\n      0x06\n        /* \"contracts/token/ERC20/ERC20.sol\":2875:2883  return 6 */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2809:2890  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":3105:3221  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_39:\n        /* \"contracts/token/ERC20/ERC20.sol\":3170:3177  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3196:3205  _balances */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":3196:3214  _balances[account] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3206:3213  account */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":3196:3214  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":3189:3214  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3105:3221  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":2083:2176  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"contracts/token/ERC20/ERC20.sol\":2130:2143  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":2162:2169  _symbol */\n      0x04\n        /* \"contracts/token/ERC20/ERC20.sol\":2155:2169  return _symbol */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_55\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_76\n      swap1\n      tag_55\n      jump\t// in\n    tag_76:\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_78\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_77)\n    tag_78:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_79:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_79\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2083:2176  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":3416:3594  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"contracts/token/ERC20/ERC20.sol\":3485:3489  bool */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3501:3514  address owner */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":3517:3529  _msgSender() */\n      tag_81\n        /* \"contracts/token/ERC20/ERC20.sol\":3517:3527  _msgSender */\n      tag_62\n        /* \"contracts/token/ERC20/ERC20.sol\":3517:3529  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/token/ERC20/ERC20.sol\":3501:3529  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3539:3566  _transfer(owner, to, value) */\n      tag_82\n        /* \"contracts/token/ERC20/ERC20.sol\":3549:3554  owner */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":3556:3558  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3560:3565  value */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3539:3548  _transfer */\n      tag_71\n        /* \"contracts/token/ERC20/ERC20.sol\":3539:3566  _transfer(owner, to, value) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/token/ERC20/ERC20.sol\":3583:3587  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":3576:3587  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3416:3594  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":3652:3792  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"contracts/token/ERC20/ERC20.sol\":3732:3739  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3758:3769  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":3758:3776  _allowances[owner] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3770:3775  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":3758:3776  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":3758:3785  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3777:3784  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":3758:3785  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":3751:3785  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":3652:3792  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_62:\n        /* \"contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":8827:8955  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"contracts/token/ERC20/ERC20.sol\":8911:8948  _approve(owner, spender, value, true) */\n      tag_86\n        /* \"contracts/token/ERC20/ERC20.sol\":8920:8925  owner */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8927:8934  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8936:8941  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":8943:8947  true */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":8911:8919  _approve */\n      tag_87\n        /* \"contracts/token/ERC20/ERC20.sol\":8911:8948  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/token/ERC20/ERC20.sol\":8827:8955  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":10516:10993  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_69:\n        /* \"contracts/token/ERC20/ERC20.sol\":10615:10639  uint256 currentAllowance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10642:10667  allowance(owner, spender) */\n      tag_89\n        /* \"contracts/token/ERC20/ERC20.sol\":10652:10657  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10659:10666  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10642:10651  allowance */\n      tag_51\n        /* \"contracts/token/ERC20/ERC20.sol\":10642:10667  allowance(owner, spender) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/token/ERC20/ERC20.sol\":10615:10667  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":10701:10718  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/token/ERC20/ERC20.sol\":10681:10697  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10681:10718  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/token/ERC20/ERC20.sol\":10677:10987  if (currentAllowance != type(uint256).max) {... */\n      tag_90\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10757:10762  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10738:10754  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10738:10762  currentAllowance < value */\n      lt\n        /* \"contracts/token/ERC20/ERC20.sol\":10734:10864  if (currentAllowance < value) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10816:10823  spender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":10825:10841  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10843:10848  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":10789:10849  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":10734:10864  if (currentAllowance < value) {... */\n    tag_91:\n        /* \"contracts/token/ERC20/ERC20.sol\":10905:10962  _approve(owner, spender, currentAllowance - value, false) */\n      tag_94\n        /* \"contracts/token/ERC20/ERC20.sol\":10914:10919  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10921:10928  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10949:10954  value */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10930:10946  currentAllowance */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10930:10954  currentAllowance - value */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":10956:10961  false */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10905:10913  _approve */\n      tag_87\n        /* \"contracts/token/ERC20/ERC20.sol\":10905:10962  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/token/ERC20/ERC20.sol\":10677:10987  if (currentAllowance != type(uint256).max) {... */\n    tag_90:\n        /* \"contracts/token/ERC20/ERC20.sol\":10605:10993  {... */\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":10516:10993  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":5494:5794  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"contracts/token/ERC20/ERC20.sol\":5593:5594  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5577:5595  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":5577:5581  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5577:5595  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5573:5659  if (from == address(0)) {... */\n      tag_96\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":5645:5646  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5618:5648  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":5573:5659  if (from == address(0)) {... */\n    tag_96:\n        /* \"contracts/token/ERC20/ERC20.sol\":5686:5687  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5672:5688  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":5672:5674  to */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":5672:5688  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":5668:5754  if (to == address(0)) {... */\n      tag_99\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":5740:5741  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":5711:5743  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":5668:5754  if (to == address(0)) {... */\n    tag_99:\n        /* \"contracts/token/ERC20/ERC20.sol\":5763:5787  _update(from, to, value) */\n      tag_101\n        /* \"contracts/token/ERC20/ERC20.sol\":5771:5775  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5777:5779  to */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5781:5786  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":5763:5770  _update */\n      tag_102\n        /* \"contracts/token/ERC20/ERC20.sol\":5763:5787  _update(from, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/token/ERC20/ERC20.sol\":5494:5794  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":9802:10234  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_87:\n        /* \"contracts/token/ERC20/ERC20.sol\":9931:9932  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9914:9933  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":9914:9919  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":9914:9933  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":9910:9999  if (owner == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":9985:9986  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":9956:9988  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":9910:9999  if (owner == address(0)) {... */\n    tag_104:\n        /* \"contracts/token/ERC20/ERC20.sol\":10031:10032  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10012:10033  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":10012:10019  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":10012:10033  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":10008:10098  if (spender == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10084:10085  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10056:10087  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":10008:10098  if (spender == address(0)) {... */\n    tag_106:\n        /* \"contracts/token/ERC20/ERC20.sol\":10137:10142  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10107:10118  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":10107:10125  _allowances[owner] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10119:10124  owner */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":10107:10125  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":10107:10134  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10126:10133  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":10107:10134  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":10107:10142  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":10156:10165  emitEvent */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":10152:10228  if (emitEvent) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":10202:10209  spender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":10186:10217  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":10195:10200  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10186:10217  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/token/ERC20/ERC20.sol\":10211:10216  value */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10186:10217  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":10152:10228  if (emitEvent) {... */\n    tag_108:\n        /* \"contracts/token/ERC20/ERC20.sol\":9802:10234  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":6109:7216  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_102:\n        /* \"contracts/token/ERC20/ERC20.sol\":6214:6215  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6198:6216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6198:6202  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6198:6216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":6194:6734  if (from == address(0)) {... */\n      tag_111\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":6350:6355  value */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6334:6346  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6334:6355  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":6194:6734  if (from == address(0)) {... */\n      jump(tag_114)\n    tag_111:\n        /* \"contracts/token/ERC20/ERC20.sol\":6386:6405  uint256 fromBalance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6408:6417  _balances */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6408:6423  _balances[from] */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6418:6422  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":6408:6423  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":6386:6423  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":6455:6460  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6441:6452  fromBalance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6441:6460  fromBalance < value */\n      lt\n        /* \"contracts/token/ERC20/ERC20.sol\":6437:6552  if (fromBalance < value) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":6512:6516  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6518:6529  fromBalance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6531:6536  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6487:6537  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":6437:6552  if (fromBalance < value) {... */\n    tag_115:\n        /* \"contracts/token/ERC20/ERC20.sol\":6704:6709  value */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6690:6701  fromBalance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6690:6709  fromBalance - value */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":6672:6681  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6672:6687  _balances[from] */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6682:6686  from */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":6672:6687  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":6672:6709  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":6372:6734  {... */\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":6194:6734  if (from == address(0)) {... */\n    tag_114:\n        /* \"contracts/token/ERC20/ERC20.sol\":6762:6763  0 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6748:6764  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":6748:6750  to */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":6748:6764  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":6744:7169  if (to == address(0)) {... */\n      tag_117\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":6927:6932  value */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":6911:6923  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":6911:6932  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":6744:7169  if (to == address(0)) {... */\n      jump(tag_118)\n    tag_117:\n        /* \"contracts/token/ERC20/ERC20.sol\":7139:7144  value */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":7122:7131  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7122:7135  _balances[to] */\n      dup1\n        /* \"contracts/token/ERC20/ERC20.sol\":7132:7134  to */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":7122:7135  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7122:7144  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":6744:7169  if (to == address(0)) {... */\n    tag_118:\n        /* \"contracts/token/ERC20/ERC20.sol\":7199:7201  to */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":7184:7209  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":7193:7197  from */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":7184:7209  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/token/ERC20/ERC20.sol\":7203:7208  value */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":7184:7209  Transfer(from, to, value) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":6109:7216  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_120:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_121:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_122:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_123:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_124:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_149\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_120\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":711:782   */\n      tag_150\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_121\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_151\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_122\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":881:910   */\n      tag_152\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_123\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_16:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_154\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_124\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_126:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_128:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_129:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_160\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_128\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_130:\n        /* \"#utility.yul\":1876:1900   */\n      tag_162\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_129\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_163:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_131:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_165\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_130\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_132:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_133:\n        /* \"#utility.yul\":2232:2256   */\n      tag_168\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_132\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_169:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_134:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_171\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_133\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_19:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_174\n      tag_126\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2525:2644   */\n    tag_173:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_175\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_131\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_176\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_134\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_135:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_136:\n        /* \"#utility.yul\":3089:3110   */\n      tag_179\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_135\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_22:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_181\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_136\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_137:\n        /* \"#utility.yul\":3426:3450   */\n      tag_183\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_132\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_26:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_185\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_137\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_29:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_188\n      tag_126\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3801:3920   */\n    tag_187:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_189\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_131\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_190\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_131\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_191\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_134\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_138:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_139:\n        /* \"#utility.yul\":4491:4513   */\n      tag_194\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_138\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_35:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_196\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_139\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_38:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_199\n      tag_126\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4822:4941   */\n    tag_198:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_200\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_131\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5555   */\n    tag_50:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      dup1\n        /* \"#utility.yul\":5206:5208   */\n      0x40\n        /* \"#utility.yul\":5194:5203   */\n      dup4\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_203\n      tag_126\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5174:5293   */\n    tag_202:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_204\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup7\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_131\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5347:5410   */\n      swap3\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5485:5538   */\n      tag_205\n        /* \"#utility.yul\":5530:5537   */\n      dup6\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup7\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_131\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5548   */\n      pop\n        /* \"#utility.yul\":5081:5555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5741   */\n    tag_140:\n        /* \"#utility.yul\":5609:5686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5599:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x22\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":5747:6067   */\n    tag_55:\n        /* \"#utility.yul\":5791:5797   */\n      0x00\n        /* \"#utility.yul\":5828:5829   */\n      0x02\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5818:5830   */\n      div\n        /* \"#utility.yul\":5808:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5876   */\n      0x01\n        /* \"#utility.yul\":5869:5873   */\n      dup3\n        /* \"#utility.yul\":5865:5877   */\n      and\n        /* \"#utility.yul\":5896:5914   */\n      dup1\n        /* \"#utility.yul\":5886:5967   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":5952:5956   */\n      0x7f\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5957   */\n      and\n        /* \"#utility.yul\":5930:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5967   */\n    tag_208:\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      lt\n        /* \"#utility.yul\":5983:6001   */\n      dup2\n        /* \"#utility.yul\":5980:6018   */\n      sub\n        /* \"#utility.yul\":5977:6061   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6033:6051   */\n      tag_210\n      tag_140\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5977:6061   */\n    tag_209:\n        /* \"#utility.yul\":5798:6067   */\n      pop\n        /* \"#utility.yul\":5747:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6191   */\n    tag_141:\n        /* \"#utility.yul\":6160:6184   */\n      tag_212\n        /* \"#utility.yul\":6178:6183   */\n      dup2\n        /* \"#utility.yul\":6160:6184   */\n      tag_129\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6155:6158   */\n      dup3\n        /* \"#utility.yul\":6148:6185   */\n      mstore\n        /* \"#utility.yul\":6073:6191   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6197:6639   */\n    tag_93:\n        /* \"#utility.yul\":6346:6350   */\n      0x00\n        /* \"#utility.yul\":6384:6386   */\n      0x60\n        /* \"#utility.yul\":6373:6382   */\n      dup3\n        /* \"#utility.yul\":6369:6387   */\n      add\n        /* \"#utility.yul\":6361:6387   */\n      swap1\n      pop\n        /* \"#utility.yul\":6397:6468   */\n      tag_214\n        /* \"#utility.yul\":6465:6466   */\n      0x00\n        /* \"#utility.yul\":6454:6463   */\n      dup4\n        /* \"#utility.yul\":6450:6467   */\n      add\n        /* \"#utility.yul\":6441:6447   */\n      dup7\n        /* \"#utility.yul\":6397:6468   */\n      tag_141\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6478:6550   */\n      tag_215\n        /* \"#utility.yul\":6546:6548   */\n      0x20\n        /* \"#utility.yul\":6535:6544   */\n      dup4\n        /* \"#utility.yul\":6531:6549   */\n      add\n        /* \"#utility.yul\":6522:6528   */\n      dup6\n        /* \"#utility.yul\":6478:6550   */\n      tag_137\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6560:6632   */\n      tag_216\n        /* \"#utility.yul\":6628:6630   */\n      0x40\n        /* \"#utility.yul\":6617:6626   */\n      dup4\n        /* \"#utility.yul\":6613:6631   */\n      add\n        /* \"#utility.yul\":6604:6610   */\n      dup5\n        /* \"#utility.yul\":6560:6632   */\n      tag_137\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6197:6639   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6645:6867   */\n    tag_98:\n        /* \"#utility.yul\":6738:6742   */\n      0x00\n        /* \"#utility.yul\":6776:6778   */\n      0x20\n        /* \"#utility.yul\":6765:6774   */\n      dup3\n        /* \"#utility.yul\":6761:6779   */\n      add\n        /* \"#utility.yul\":6753:6779   */\n      swap1\n      pop\n        /* \"#utility.yul\":6789:6860   */\n      tag_218\n        /* \"#utility.yul\":6857:6858   */\n      0x00\n        /* \"#utility.yul\":6846:6855   */\n      dup4\n        /* \"#utility.yul\":6842:6859   */\n      add\n        /* \"#utility.yul\":6833:6839   */\n      dup5\n        /* \"#utility.yul\":6789:6860   */\n      tag_141\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":6645:6867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:7053   */\n    tag_142:\n        /* \"#utility.yul\":6921:6998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6918:6919   */\n      0x00\n        /* \"#utility.yul\":6911:6999   */\n      mstore\n        /* \"#utility.yul\":7018:7022   */\n      0x11\n        /* \"#utility.yul\":7015:7016   */\n      0x04\n        /* \"#utility.yul\":7008:7023   */\n      mstore\n        /* \"#utility.yul\":7042:7046   */\n      0x24\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7032:7047   */\n      revert\n        /* \"#utility.yul\":7059:7250   */\n    tag_113:\n        /* \"#utility.yul\":7099:7102   */\n      0x00\n        /* \"#utility.yul\":7118:7138   */\n      tag_221\n        /* \"#utility.yul\":7136:7137   */\n      dup3\n        /* \"#utility.yul\":7118:7138   */\n      tag_132\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7113:7138   */\n      swap2\n      pop\n        /* \"#utility.yul\":7152:7172   */\n      tag_222\n        /* \"#utility.yul\":7170:7171   */\n      dup4\n        /* \"#utility.yul\":7152:7172   */\n      tag_132\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7147:7172   */\n      swap3\n      pop\n        /* \"#utility.yul\":7195:7196   */\n      dup3\n        /* \"#utility.yul\":7192:7193   */\n      dup3\n        /* \"#utility.yul\":7188:7197   */\n      add\n        /* \"#utility.yul\":7181:7197   */\n      swap1\n      pop\n        /* \"#utility.yul\":7216:7219   */\n      dup1\n        /* \"#utility.yul\":7213:7214   */\n      dup3\n        /* \"#utility.yul\":7210:7220   */\n      gt\n        /* \"#utility.yul\":7207:7243   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":7223:7241   */\n      tag_224\n      tag_142\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7207:7243   */\n    tag_223:\n        /* \"#utility.yul\":7059:7250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ab07f09659176918b4352351864b373b7ae6b7d553d4037412f2cdb08c20161d64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_190": {
									"entryPoint": null,
									"id": 190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_493": {
									"entryPoint": 200,
									"id": 493,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_769": {
									"entryPoint": 193,
									"id": 769,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_460": {
									"entryPoint": 333,
									"id": 460,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1204,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1241,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:5",
										"nodeType": "YulBlock",
										"src": "0:7000:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:5",
													"nodeType": "YulBlock",
													"src": "66:40:5",
													"statements": [
														{
															"nativeSrc": "77:22:5",
															"nodeType": "YulAssignment",
															"src": "77:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:5"
																},
																"nativeSrc": "87:12:5",
																"nodeType": "YulFunctionCall",
																"src": "87:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:5",
														"nodeType": "YulTypedName",
														"src": "49:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:5",
														"nodeType": "YulTypedName",
														"src": "59:6:5",
														"type": ""
													}
												],
												"src": "7:99:5"
											},
											{
												"body": {
													"nativeSrc": "140:152:5",
													"nodeType": "YulBlock",
													"src": "140:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:5",
																		"nodeType": "YulLiteral",
																		"src": "157:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:5",
																		"nodeType": "YulLiteral",
																		"src": "160:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:5"
																},
																"nativeSrc": "150:88:5",
																"nodeType": "YulFunctionCall",
																"src": "150:88:5"
															},
															"nativeSrc": "150:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:5",
																		"nodeType": "YulLiteral",
																		"src": "254:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:5",
																		"nodeType": "YulLiteral",
																		"src": "257:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:5"
																},
																"nativeSrc": "247:15:5",
																"nodeType": "YulFunctionCall",
																"src": "247:15:5"
															},
															"nativeSrc": "247:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:5",
																		"nodeType": "YulLiteral",
																		"src": "278:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:5",
																		"nodeType": "YulLiteral",
																		"src": "281:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:5"
																},
																"nativeSrc": "271:15:5",
																"nodeType": "YulFunctionCall",
																"src": "271:15:5"
															},
															"nativeSrc": "271:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:5"
											},
											{
												"body": {
													"nativeSrc": "326:152:5",
													"nodeType": "YulBlock",
													"src": "326:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:5",
																		"nodeType": "YulLiteral",
																		"src": "343:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:5",
																		"nodeType": "YulLiteral",
																		"src": "346:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:5"
																},
																"nativeSrc": "336:88:5",
																"nodeType": "YulFunctionCall",
																"src": "336:88:5"
															},
															"nativeSrc": "336:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:5",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:5",
																		"nodeType": "YulLiteral",
																		"src": "443:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nativeSrc": "433:15:5",
																"nodeType": "YulFunctionCall",
																"src": "433:15:5"
															},
															"nativeSrc": "433:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:5",
																		"nodeType": "YulLiteral",
																		"src": "464:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:5",
																		"nodeType": "YulLiteral",
																		"src": "467:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:5"
																},
																"nativeSrc": "457:15:5",
																"nodeType": "YulFunctionCall",
																"src": "457:15:5"
															},
															"nativeSrc": "457:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:5"
											},
											{
												"body": {
													"nativeSrc": "535:269:5",
													"nodeType": "YulBlock",
													"src": "535:269:5",
													"statements": [
														{
															"nativeSrc": "545:22:5",
															"nodeType": "YulAssignment",
															"src": "545:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:5",
																		"nodeType": "YulLiteral",
																		"src": "565:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:5"
																},
																"nativeSrc": "555:12:5",
																"nodeType": "YulFunctionCall",
																"src": "555:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:5"
																}
															]
														},
														{
															"nativeSrc": "576:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:5",
																		"nodeType": "YulLiteral",
																		"src": "612:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:5"
																},
																"nativeSrc": "602:12:5",
																"nodeType": "YulFunctionCall",
																"src": "602:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:5",
																	"nodeType": "YulTypedName",
																	"src": "580:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:5",
																"nodeType": "YulBlock",
																"src": "653:51:5",
																"statements": [
																	{
																		"nativeSrc": "667:27:5",
																		"nodeType": "YulAssignment",
																		"src": "667:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:5",
																					"nodeType": "YulLiteral",
																					"src": "689:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:5"
																			},
																			"nativeSrc": "677:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:5"
																},
																"nativeSrc": "626:26:5",
																"nodeType": "YulFunctionCall",
																"src": "626:26:5"
															},
															"nativeSrc": "623:81:5",
															"nodeType": "YulIf",
															"src": "623:81:5"
														},
														{
															"body": {
																"nativeSrc": "756:42:5",
																"nodeType": "YulBlock",
																"src": "756:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:5"
																			},
																			"nativeSrc": "770:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:5"
																		},
																		"nativeSrc": "770:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:5",
																				"nodeType": "YulLiteral",
																				"src": "751:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:5"
																		},
																		"nativeSrc": "740:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:5"
																},
																"nativeSrc": "717:38:5",
																"nodeType": "YulFunctionCall",
																"src": "717:38:5"
															},
															"nativeSrc": "714:84:5",
															"nodeType": "YulIf",
															"src": "714:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:5",
														"nodeType": "YulTypedName",
														"src": "519:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:5",
														"nodeType": "YulTypedName",
														"src": "528:6:5",
														"type": ""
													}
												],
												"src": "484:320:5"
											},
											{
												"body": {
													"nativeSrc": "864:87:5",
													"nodeType": "YulBlock",
													"src": "864:87:5",
													"statements": [
														{
															"nativeSrc": "874:11:5",
															"nodeType": "YulAssignment",
															"src": "874:11:5",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:5",
																"nodeType": "YulIdentifier",
																"src": "882:3:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:5",
																		"nodeType": "YulLiteral",
																		"src": "902:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:5"
																},
																"nativeSrc": "895:14:5",
																"nodeType": "YulFunctionCall",
																"src": "895:14:5"
															},
															"nativeSrc": "895:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:5"
														},
														{
															"nativeSrc": "918:26:5",
															"nodeType": "YulAssignment",
															"src": "918:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:5",
																		"nodeType": "YulLiteral",
																		"src": "936:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:5",
																		"nodeType": "YulLiteral",
																		"src": "939:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:5"
																},
																"nativeSrc": "926:18:5",
																"nodeType": "YulFunctionCall",
																"src": "926:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:5",
														"nodeType": "YulTypedName",
														"src": "851:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:5",
														"nodeType": "YulTypedName",
														"src": "859:4:5",
														"type": ""
													}
												],
												"src": "810:141:5"
											},
											{
												"body": {
													"nativeSrc": "1001:49:5",
													"nodeType": "YulBlock",
													"src": "1001:49:5",
													"statements": [
														{
															"nativeSrc": "1011:33:5",
															"nodeType": "YulAssignment",
															"src": "1011:33:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:5"
																		},
																		"nativeSrc": "1025:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:5"
																},
																"nativeSrc": "1021:23:5",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:5"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:5",
														"nodeType": "YulTypedName",
														"src": "984:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:5",
														"nodeType": "YulTypedName",
														"src": "994:6:5",
														"type": ""
													}
												],
												"src": "957:93:5"
											},
											{
												"body": {
													"nativeSrc": "1109:54:5",
													"nodeType": "YulBlock",
													"src": "1109:54:5",
													"statements": [
														{
															"nativeSrc": "1119:37:5",
															"nodeType": "YulAssignment",
															"src": "1119:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:5"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:5"
																},
																"nativeSrc": "1140:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:5",
														"nodeType": "YulTypedName",
														"src": "1084:4:5",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:5",
														"nodeType": "YulTypedName",
														"src": "1090:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:5",
														"nodeType": "YulTypedName",
														"src": "1100:8:5",
														"type": ""
													}
												],
												"src": "1056:107:5"
											},
											{
												"body": {
													"nativeSrc": "1245:317:5",
													"nodeType": "YulBlock",
													"src": "1245:317:5",
													"statements": [
														{
															"nativeSrc": "1255:35:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:5",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:5"
																},
																"nativeSrc": "1272:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:5"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:5",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:5",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:5"
																},
																"nativeSrc": "1311:97:5",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:5"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:5",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:5",
															"nodeType": "YulAssignment",
															"src": "1417:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:5"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:5"
																},
																"nativeSrc": "1429:39:5",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:5"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:5"
																}
															]
														},
														{
															"nativeSrc": "1477:30:5",
															"nodeType": "YulAssignment",
															"src": "1477:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:5"
																		},
																		"nativeSrc": "1497:9:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:5"
																},
																"nativeSrc": "1486:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:5"
																}
															]
														},
														{
															"nativeSrc": "1516:40:5",
															"nodeType": "YulAssignment",
															"src": "1516:40:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:5"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:5"
																		},
																		"nativeSrc": "1536:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:5"
																},
																"nativeSrc": "1526:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:5"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:5",
														"nodeType": "YulTypedName",
														"src": "1206:5:5",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:5",
														"nodeType": "YulTypedName",
														"src": "1213:10:5",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:5",
														"nodeType": "YulTypedName",
														"src": "1225:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:5",
														"nodeType": "YulTypedName",
														"src": "1238:6:5",
														"type": ""
													}
												],
												"src": "1169:393:5"
											},
											{
												"body": {
													"nativeSrc": "1613:32:5",
													"nodeType": "YulBlock",
													"src": "1613:32:5",
													"statements": [
														{
															"nativeSrc": "1623:16:5",
															"nodeType": "YulAssignment",
															"src": "1623:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:5",
																"nodeType": "YulIdentifier",
																"src": "1634:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:5",
														"nodeType": "YulTypedName",
														"src": "1595:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:5",
														"nodeType": "YulTypedName",
														"src": "1605:7:5",
														"type": ""
													}
												],
												"src": "1568:77:5"
											},
											{
												"body": {
													"nativeSrc": "1683:28:5",
													"nodeType": "YulBlock",
													"src": "1683:28:5",
													"statements": [
														{
															"nativeSrc": "1693:12:5",
															"nodeType": "YulAssignment",
															"src": "1693:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:5",
																"nodeType": "YulIdentifier",
																"src": "1700:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:5",
														"nodeType": "YulTypedName",
														"src": "1669:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:5",
														"nodeType": "YulTypedName",
														"src": "1679:3:5",
														"type": ""
													}
												],
												"src": "1651:60:5"
											},
											{
												"body": {
													"nativeSrc": "1777:82:5",
													"nodeType": "YulBlock",
													"src": "1777:82:5",
													"statements": [
														{
															"nativeSrc": "1787:66:5",
															"nodeType": "YulAssignment",
															"src": "1787:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:5"
																				},
																				"nativeSrc": "1827:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:5"
																		},
																		"nativeSrc": "1818:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:5"
																},
																"nativeSrc": "1800:53:5",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:5",
														"nodeType": "YulTypedName",
														"src": "1757:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:5",
														"nodeType": "YulTypedName",
														"src": "1767:9:5",
														"type": ""
													}
												],
												"src": "1717:142:5"
											},
											{
												"body": {
													"nativeSrc": "1912:28:5",
													"nodeType": "YulBlock",
													"src": "1912:28:5",
													"statements": [
														{
															"nativeSrc": "1922:12:5",
															"nodeType": "YulAssignment",
															"src": "1922:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:5",
																"nodeType": "YulIdentifier",
																"src": "1929:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:5"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:5",
														"nodeType": "YulTypedName",
														"src": "1898:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:5",
														"nodeType": "YulTypedName",
														"src": "1908:3:5",
														"type": ""
													}
												],
												"src": "1865:75:5"
											},
											{
												"body": {
													"nativeSrc": "2022:193:5",
													"nodeType": "YulBlock",
													"src": "2022:193:5",
													"statements": [
														{
															"nativeSrc": "2032:63:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:5",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:5"
																},
																"nativeSrc": "2056:39:5",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:5"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:5",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:5"
																				},
																				"nativeSrc": "2145:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:5",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:5"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:5",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:5"
																				},
																				"nativeSrc": "2166:41:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:5"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:5",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:5"
																		},
																		"nativeSrc": "2117:91:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:5"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:5"
																},
																"nativeSrc": "2104:105:5",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:5"
															},
															"nativeSrc": "2104:105:5",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:5"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:5",
														"nodeType": "YulTypedName",
														"src": "1999:4:5",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:5",
														"nodeType": "YulTypedName",
														"src": "2005:6:5",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:5",
														"nodeType": "YulTypedName",
														"src": "2013:7:5",
														"type": ""
													}
												],
												"src": "1946:269:5"
											},
											{
												"body": {
													"nativeSrc": "2270:24:5",
													"nodeType": "YulBlock",
													"src": "2270:24:5",
													"statements": [
														{
															"nativeSrc": "2280:8:5",
															"nodeType": "YulAssignment",
															"src": "2280:8:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:5",
																"nodeType": "YulLiteral",
																"src": "2287:1:5",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:5"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:5",
														"nodeType": "YulTypedName",
														"src": "2266:3:5",
														"type": ""
													}
												],
												"src": "2221:73:5"
											},
											{
												"body": {
													"nativeSrc": "2353:136:5",
													"nodeType": "YulBlock",
													"src": "2353:136:5",
													"statements": [
														{
															"nativeSrc": "2363:46:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:5"
																},
																"nativeSrc": "2377:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:5"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:5"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:5"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:5"
																},
																"nativeSrc": "2418:65:5",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:5"
															},
															"nativeSrc": "2418:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:5"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:5",
														"nodeType": "YulTypedName",
														"src": "2339:4:5",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:5",
														"nodeType": "YulTypedName",
														"src": "2345:6:5",
														"type": ""
													}
												],
												"src": "2300:189:5"
											},
											{
												"body": {
													"nativeSrc": "2545:136:5",
													"nodeType": "YulBlock",
													"src": "2545:136:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:5",
																"nodeType": "YulBlock",
																"src": "2612:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:5",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:5"
																			},
																			"nativeSrc": "2626:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:5"
																		},
																		"nativeSrc": "2626:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:5"
																},
																"nativeSrc": "2562:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:5"
															},
															"nativeSrc": "2555:120:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:5",
																"nodeType": "YulBlock",
																"src": "2577:26:5",
																"statements": [
																	{
																		"nativeSrc": "2579:22:5",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:5"
																			},
																			"nativeSrc": "2588:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:5"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:5",
																"nodeType": "YulBlock",
																"src": "2559:2:5",
																"statements": []
															},
															"src": "2555:120:5"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:5",
														"nodeType": "YulTypedName",
														"src": "2533:5:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:5",
														"nodeType": "YulTypedName",
														"src": "2540:3:5",
														"type": ""
													}
												],
												"src": "2495:186:5"
											},
											{
												"body": {
													"nativeSrc": "2766:464:5",
													"nodeType": "YulBlock",
													"src": "2766:464:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:5",
																"nodeType": "YulBlock",
																"src": "2792:431:5",
																"statements": [
																	{
																		"nativeSrc": "2806:54:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:5"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:5",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:5"
																			},
																			"nativeSrc": "2822:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:5"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:5",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:5"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:5",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:5"
																					},
																					"nativeSrc": "2906:29:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:5"
																			},
																			"nativeSrc": "2892:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:5",
																			"nodeType": "YulBlock",
																			"src": "3093:27:5",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:5",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:5",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:5",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:5"
																			},
																			"nativeSrc": "3074:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:5"
																		},
																		"nativeSrc": "3071:49:5",
																		"nodeType": "YulIf",
																		"src": "3071:49:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:5",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:5"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:5",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:5"
																							},
																							"nativeSrc": "3189:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:5"
																					},
																					"nativeSrc": "3175:37:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:5"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:5",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:5"
																			},
																			"nativeSrc": "3133:80:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:5"
																		},
																		"nativeSrc": "3133:80:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:5"
																},
																"nativeSrc": "2780:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:5"
															},
															"nativeSrc": "2777:446:5",
															"nodeType": "YulIf",
															"src": "2777:446:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:5",
														"nodeType": "YulTypedName",
														"src": "2742:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:5",
														"nodeType": "YulTypedName",
														"src": "2749:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:5",
														"nodeType": "YulTypedName",
														"src": "2754:10:5",
														"type": ""
													}
												],
												"src": "2687:543:5"
											},
											{
												"body": {
													"nativeSrc": "3299:54:5",
													"nodeType": "YulBlock",
													"src": "3299:54:5",
													"statements": [
														{
															"nativeSrc": "3309:37:5",
															"nodeType": "YulAssignment",
															"src": "3309:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:5"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:5"
																},
																"nativeSrc": "3330:16:5",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:5"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:5",
														"nodeType": "YulTypedName",
														"src": "3274:4:5",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:5",
														"nodeType": "YulTypedName",
														"src": "3280:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:5",
														"nodeType": "YulTypedName",
														"src": "3290:8:5",
														"type": ""
													}
												],
												"src": "3236:117:5"
											},
											{
												"body": {
													"nativeSrc": "3410:118:5",
													"nodeType": "YulBlock",
													"src": "3410:118:5",
													"statements": [
														{
															"nativeSrc": "3420:68:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:5",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:5"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:5"
																				},
																				"nativeSrc": "3465:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:5"
																				},
																				"nativeSrc": "3480:6:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:5"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:5"
																		},
																		"nativeSrc": "3436:51:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:5"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:5"
																},
																"nativeSrc": "3432:56:5",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:5"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:5",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:5",
															"nodeType": "YulAssignment",
															"src": "3497:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:5"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:5"
																},
																"nativeSrc": "3507:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:5"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:5",
														"nodeType": "YulTypedName",
														"src": "3387:4:5",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:5",
														"nodeType": "YulTypedName",
														"src": "3393:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:5",
														"nodeType": "YulTypedName",
														"src": "3403:6:5",
														"type": ""
													}
												],
												"src": "3359:169:5"
											},
											{
												"body": {
													"nativeSrc": "3614:214:5",
													"nodeType": "YulBlock",
													"src": "3614:214:5",
													"statements": [
														{
															"nativeSrc": "3747:37:5",
															"nodeType": "YulAssignment",
															"src": "3747:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:5"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:5"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:5"
																},
																"nativeSrc": "3755:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:5"
																}
															]
														},
														{
															"nativeSrc": "3793:29:5",
															"nodeType": "YulAssignment",
															"src": "3793:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:5",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:5"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:5"
																		},
																		"nativeSrc": "3810:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:5"
																},
																"nativeSrc": "3801:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:5",
														"nodeType": "YulTypedName",
														"src": "3595:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:5",
														"nodeType": "YulTypedName",
														"src": "3601:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:5",
														"nodeType": "YulTypedName",
														"src": "3609:4:5",
														"type": ""
													}
												],
												"src": "3533:295:5"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:5",
													"nodeType": "YulBlock",
													"src": "3925:1303:5",
													"statements": [
														{
															"nativeSrc": "3936:51:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:5",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:5"
																},
																"nativeSrc": "3950:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:5",
																"nodeType": "YulBlock",
																"src": "4072:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:5"
																			},
																			"nativeSrc": "4074:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:5"
																		},
																		"nativeSrc": "4074:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:5",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:5"
																},
																"nativeSrc": "4041:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:5"
															},
															"nativeSrc": "4038:56:5",
															"nodeType": "YulIf",
															"src": "4038:56:5"
														},
														{
															"nativeSrc": "4104:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:5"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:5"
																		},
																		"nativeSrc": "4144:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:5"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:5"
																},
																"nativeSrc": "4118:38:5",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:5"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:5"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:5",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:5"
																},
																"nativeSrc": "4203:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:5"
															},
															"nativeSrc": "4203:67:5",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:5"
														},
														{
															"nativeSrc": "4280:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:5",
																"nodeType": "YulLiteral",
																"src": "4297:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:5",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:5",
															"nodeType": "YulAssignment",
															"src": "4308:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:5",
																"nodeType": "YulLiteral",
																"src": "4321:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:5",
																		"nodeType": "YulBlock",
																		"src": "4372:611:5",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:5",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:5",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:5"
																							},
																							"nativeSrc": "4413:9:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:5"
																					},
																					"nativeSrc": "4401:22:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:5",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:5",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:5"
																					},
																					"nativeSrc": "4451:37:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:5",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:5",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:5",
																					"nodeType": "YulBlock",
																					"src": "4569:163:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:5"
																												},
																												"nativeSrc": "4608:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:5"
																										},
																										"nativeSrc": "4602:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:5"
																								},
																								"nativeSrc": "4587:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:5"
																							},
																							"nativeSrc": "4587:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:5"
																						},
																						{
																							"nativeSrc": "4646:24:5",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:5",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:5"
																								},
																								"nativeSrc": "4656:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:5",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:5",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:5",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:5"
																								},
																								"nativeSrc": "4700:18:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:5"
																					},
																					"nativeSrc": "4532:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:5"
																				},
																				"nativeSrc": "4524:208:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:5",
																					"nodeType": "YulBlock",
																					"src": "4547:21:5",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:5",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:5",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:5"
																								},
																								"nativeSrc": "4554:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:5",
																					"nodeType": "YulBlock",
																					"src": "4528:3:5",
																					"statements": []
																				},
																				"src": "4524:208:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:5",
																					"nodeType": "YulBlock",
																					"src": "4768:156:5",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:5"
																										},
																										"nativeSrc": "4809:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:5"
																								},
																								"nativeSrc": "4803:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:5",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:5",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:5"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:5",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:5",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:5"
																												},
																												"nativeSrc": "4891:17:5",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:5"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:5",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:5"
																										},
																										"nativeSrc": "4861:48:5",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:5"
																								},
																								"nativeSrc": "4846:64:5",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:5"
																							},
																							"nativeSrc": "4846:64:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:5"
																					},
																					"nativeSrc": "4748:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:5"
																				},
																				"nativeSrc": "4745:179:5",
																				"nodeType": "YulIf",
																				"src": "4745:179:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:5",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:5",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:5"
																									},
																									"nativeSrc": "4954:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:5",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:5"
																							},
																							"nativeSrc": "4950:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:5"
																					},
																					"nativeSrc": "4937:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:5"
																				},
																				"nativeSrc": "4937:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:5"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:5",
																	"nodeType": "YulCase",
																	"src": "4365:618:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:5",
																		"nodeType": "YulBlock",
																		"src": "5000:222:5",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:5",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:5",
																					"nodeType": "YulBlock",
																					"src": "5051:67:5",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:5",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:5"
																										},
																										"nativeSrc": "5084:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:5"
																								},
																								"nativeSrc": "5078:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:5"
																				},
																				"nativeSrc": "5041:77:5",
																				"nodeType": "YulIf",
																				"src": "5041:77:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:5"
																							},
																							"nativeSrc": "5144:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:5"
																					},
																					"nativeSrc": "5131:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:5"
																				},
																				"nativeSrc": "5131:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:5"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:5",
																	"nodeType": "YulCase",
																	"src": "4992:230:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:5"
																},
																"nativeSrc": "4342:14:5",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:5"
															},
															"nativeSrc": "4335:887:5",
															"nodeType": "YulSwitch",
															"src": "4335:887:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:5",
														"nodeType": "YulTypedName",
														"src": "3914:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:5",
														"nodeType": "YulTypedName",
														"src": "3920:3:5",
														"type": ""
													}
												],
												"src": "3833:1395:5"
											},
											{
												"body": {
													"nativeSrc": "5279:81:5",
													"nodeType": "YulBlock",
													"src": "5279:81:5",
													"statements": [
														{
															"nativeSrc": "5289:65:5",
															"nodeType": "YulAssignment",
															"src": "5289:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:5",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:5"
																},
																"nativeSrc": "5300:54:5",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:5",
														"nodeType": "YulTypedName",
														"src": "5261:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:5",
														"nodeType": "YulTypedName",
														"src": "5271:7:5",
														"type": ""
													}
												],
												"src": "5234:126:5"
											},
											{
												"body": {
													"nativeSrc": "5411:51:5",
													"nodeType": "YulBlock",
													"src": "5411:51:5",
													"statements": [
														{
															"nativeSrc": "5421:35:5",
															"nodeType": "YulAssignment",
															"src": "5421:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:5"
																},
																"nativeSrc": "5432:24:5",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:5",
														"nodeType": "YulTypedName",
														"src": "5393:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:5",
														"nodeType": "YulTypedName",
														"src": "5403:7:5",
														"type": ""
													}
												],
												"src": "5366:96:5"
											},
											{
												"body": {
													"nativeSrc": "5533:53:5",
													"nodeType": "YulBlock",
													"src": "5533:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:5"
																		},
																		"nativeSrc": "5555:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:5"
																},
																"nativeSrc": "5543:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:5"
															},
															"nativeSrc": "5543:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:5",
														"nodeType": "YulTypedName",
														"src": "5521:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:5",
														"nodeType": "YulTypedName",
														"src": "5528:3:5",
														"type": ""
													}
												],
												"src": "5468:118:5"
											},
											{
												"body": {
													"nativeSrc": "5690:124:5",
													"nodeType": "YulBlock",
													"src": "5690:124:5",
													"statements": [
														{
															"nativeSrc": "5700:26:5",
															"nodeType": "YulAssignment",
															"src": "5700:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:5"
																},
																"nativeSrc": "5708:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:5"
																		},
																		"nativeSrc": "5789:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:5"
																},
																"nativeSrc": "5736:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:5"
															},
															"nativeSrc": "5736:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:5",
														"nodeType": "YulTypedName",
														"src": "5662:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:5",
														"nodeType": "YulTypedName",
														"src": "5674:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:5",
														"nodeType": "YulTypedName",
														"src": "5685:4:5",
														"type": ""
													}
												],
												"src": "5592:222:5"
											},
											{
												"body": {
													"nativeSrc": "5848:152:5",
													"nodeType": "YulBlock",
													"src": "5848:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:5",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:5"
																},
																"nativeSrc": "5858:88:5",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:5"
															},
															"nativeSrc": "5858:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:5"
																},
																"nativeSrc": "5955:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:5"
															},
															"nativeSrc": "5955:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:5"
																},
																"nativeSrc": "5979:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:5"
															},
															"nativeSrc": "5979:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:5"
											},
											{
												"body": {
													"nativeSrc": "6050:147:5",
													"nodeType": "YulBlock",
													"src": "6050:147:5",
													"statements": [
														{
															"nativeSrc": "6060:25:5",
															"nodeType": "YulAssignment",
															"src": "6060:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:5"
																},
																"nativeSrc": "6065:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:5"
																}
															]
														},
														{
															"nativeSrc": "6094:25:5",
															"nodeType": "YulAssignment",
															"src": "6094:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:5"
																},
																"nativeSrc": "6099:20:5",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:5"
																}
															]
														},
														{
															"nativeSrc": "6128:16:5",
															"nodeType": "YulAssignment",
															"src": "6128:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:5"
																},
																"nativeSrc": "6135:9:5",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:5",
																"nodeType": "YulBlock",
																"src": "6168:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:5"
																			},
																			"nativeSrc": "6170:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:5"
																		},
																		"nativeSrc": "6170:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:5"
																},
																"nativeSrc": "6157:10:5",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:5"
															},
															"nativeSrc": "6154:36:5",
															"nodeType": "YulIf",
															"src": "6154:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:5",
														"nodeType": "YulTypedName",
														"src": "6037:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:5",
														"nodeType": "YulTypedName",
														"src": "6040:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:5",
														"nodeType": "YulTypedName",
														"src": "6046:3:5",
														"type": ""
													}
												],
												"src": "6006:191:5"
											},
											{
												"body": {
													"nativeSrc": "6268:53:5",
													"nodeType": "YulBlock",
													"src": "6268:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:5"
																		},
																		"nativeSrc": "6290:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:5"
																},
																"nativeSrc": "6278:37:5",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:5"
															},
															"nativeSrc": "6278:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:5",
														"nodeType": "YulTypedName",
														"src": "6256:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:5",
														"nodeType": "YulTypedName",
														"src": "6263:3:5",
														"type": ""
													}
												],
												"src": "6203:118:5"
											},
											{
												"body": {
													"nativeSrc": "6481:288:5",
													"nodeType": "YulBlock",
													"src": "6481:288:5",
													"statements": [
														{
															"nativeSrc": "6491:26:5",
															"nodeType": "YulAssignment",
															"src": "6491:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:5"
																},
																"nativeSrc": "6499:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:5"
																		},
																		"nativeSrc": "6580:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:5"
																},
																"nativeSrc": "6527:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:5"
															},
															"nativeSrc": "6527:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:5"
																		},
																		"nativeSrc": "6661:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:5"
																},
																"nativeSrc": "6608:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:5"
															},
															"nativeSrc": "6608:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:5"
																		},
																		"nativeSrc": "6743:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:5"
																},
																"nativeSrc": "6690:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:5"
															},
															"nativeSrc": "6690:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:5",
														"nodeType": "YulTypedName",
														"src": "6437:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:5",
														"nodeType": "YulTypedName",
														"src": "6449:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:5",
														"nodeType": "YulTypedName",
														"src": "6457:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:5",
														"nodeType": "YulTypedName",
														"src": "6465:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:5",
														"nodeType": "YulTypedName",
														"src": "6476:4:5",
														"type": ""
													}
												],
												"src": "6327:442:5"
											},
											{
												"body": {
													"nativeSrc": "6873:124:5",
													"nodeType": "YulBlock",
													"src": "6873:124:5",
													"statements": [
														{
															"nativeSrc": "6883:26:5",
															"nodeType": "YulAssignment",
															"src": "6883:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:5"
																},
																"nativeSrc": "6891:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:5"
																		},
																		"nativeSrc": "6972:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:5"
																},
																"nativeSrc": "6919:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:5"
															},
															"nativeSrc": "6919:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:5",
														"nodeType": "YulTypedName",
														"src": "6845:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:5",
														"nodeType": "YulTypedName",
														"src": "6857:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:5",
														"nodeType": "YulTypedName",
														"src": "6868:4:5",
														"type": ""
													}
												],
												"src": "6775:222:5"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600f81526020017f7772617056657374696e673131353500000000000000000000000000000000008152506003908161005491906105a0565b506040518060400160405280600681526020017f57563131353500000000000000000000000000000000000000000000000000008152506004908161009991906105a0565b506100bc6100ab6100c160201b60201c565b64e8d4a510006100c860201b60201c565b610784565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610138575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161012f91906106ae565b60405180910390fd5b6101495f838361014d60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361019d578060025f82825461019191906106f4565b9250508190555061026b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610226578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161021d93929190610736565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102b2578060025f82825403925050819055506102fc565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610359919061076b565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103e157607f821691505b6020821081036103f4576103f361039d565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261041b565b610460868361041b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6104a461049f61049a84610478565b610481565b610478565b9050919050565b5f819050919050565b6104bd8361048a565b6104d16104c9826104ab565b848454610427565b825550505050565b5f90565b6104e56104d9565b6104f08184846104b4565b505050565b5b81811015610513576105085f826104dd565b6001810190506104f6565b5050565b601f82111561055857610529816103fa565b6105328461040c565b81016020851015610541578190505b61055561054d8561040c565b8301826104f5565b50505b505050565b5f82821c905092915050565b5f6105785f198460080261055d565b1980831691505092915050565b5f6105908383610569565b9150826002028217905092915050565b6105a982610366565b67ffffffffffffffff8111156105c2576105c1610370565b5b6105cc82546103ca565b6105d7828285610517565b5f60209050601f831160018114610608575f84156105f6578287015190505b6106008582610585565b865550610667565b601f198416610616866103fa565b5f5b8281101561063d57848901518255600182019150602085019450602081019050610618565b8683101561065a5784890151610656601f891682610569565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106988261066f565b9050919050565b6106a88161068e565b82525050565b5f6020820190506106c15f83018461069f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6106fe82610478565b915061070983610478565b9250828201905080821115610721576107206106c7565b5b92915050565b61073081610478565b82525050565b5f6060820190506107495f83018661069f565b6107566020830185610727565b6107636040830184610727565b949350505050565b5f60208201905061077e5f830184610727565b92915050565b610de1806107915f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a5a565b60405180910390f35b6100cd60048036038101906100c89190610b0b565b61028d565b6040516100da9190610b63565b60405180910390f35b6100eb6102af565b6040516100f89190610b8b565b60405180910390f35b61011b60048036038101906101169190610ba4565b6102b8565b6040516101289190610b63565b60405180910390f35b6101396102e6565b6040516101469190610c0f565b60405180910390f35b61016960048036038101906101649190610c28565b6102ee565b6040516101769190610b8b565b60405180910390f35b610187610333565b6040516101949190610a5a565b60405180910390f35b6101b760048036038101906101b29190610b0b565b6103c3565b6040516101c49190610b63565b60405180910390f35b6101e760048036038101906101e29190610c53565b6103e5565b6040516101f49190610b8b565b60405180910390f35b60606003805461020c90610cbe565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610cbe565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610467565b90506102a481858561046e565b600191505092915050565b5f600254905090565b5f806102c2610467565b90506102cf858285610480565b6102da858585610512565b60019150509392505050565b5f6006905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034290610cbe565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90610cbe565b80156103b95780601f10610390576101008083540402835291602001916103b9565b820191905f5260205f20905b81548152906001019060200180831161039c57829003601f168201915b5050505050905090565b5f806103cd610467565b90506103da818585610512565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61047b8383836001610602565b505050565b5f61048b84846103e5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461050c57818110156104fd578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016104f493929190610cfd565b60405180910390fd5b61050b84848484035f610602565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610582575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105799190610d32565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105f2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105e99190610d32565b60405180910390fd5b6105fd8383836107d1565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610672575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106699190610d32565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e2575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106d99190610d32565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107cb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107c29190610b8b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610821578060025f8282546108159190610d78565b925050819055506108ef565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108aa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108a193929190610cfd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610936578060025f8282540392505081905550610980565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109dd9190610b8b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610a2c826109ea565b610a3681856109f4565b9350610a46818560208601610a04565b610a4f81610a12565b840191505092915050565b5f6020820190508181035f830152610a728184610a22565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610aa782610a7e565b9050919050565b610ab781610a9d565b8114610ac1575f80fd5b50565b5f81359050610ad281610aae565b92915050565b5f819050919050565b610aea81610ad8565b8114610af4575f80fd5b50565b5f81359050610b0581610ae1565b92915050565b5f8060408385031215610b2157610b20610a7a565b5b5f610b2e85828601610ac4565b9250506020610b3f85828601610af7565b9150509250929050565b5f8115159050919050565b610b5d81610b49565b82525050565b5f602082019050610b765f830184610b54565b92915050565b610b8581610ad8565b82525050565b5f602082019050610b9e5f830184610b7c565b92915050565b5f805f60608486031215610bbb57610bba610a7a565b5b5f610bc886828701610ac4565b9350506020610bd986828701610ac4565b9250506040610bea86828701610af7565b9150509250925092565b5f60ff82169050919050565b610c0981610bf4565b82525050565b5f602082019050610c225f830184610c00565b92915050565b5f60208284031215610c3d57610c3c610a7a565b5b5f610c4a84828501610ac4565b91505092915050565b5f8060408385031215610c6957610c68610a7a565b5b5f610c7685828601610ac4565b9250506020610c8785828601610ac4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cd557607f821691505b602082108103610ce857610ce7610c91565b5b50919050565b610cf781610a9d565b82525050565b5f606082019050610d105f830186610cee565b610d1d6020830185610b7c565b610d2a6040830184610b7c565b949350505050565b5f602082019050610d455f830184610cee565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d8282610ad8565b9150610d8d83610ad8565b9250828201905080821115610da557610da4610d4b565b5b9291505056fea2646970667358221220ab07f09659176918b4352351864b373b7ae6b7d553d4037412f2cdb08c20161d64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7772617056657374696E67313135350000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP2 PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5756313135350000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 SWAP1 DUP2 PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST POP PUSH2 0xBC PUSH2 0xAB PUSH2 0xC1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH5 0xE8D4A51000 PUSH2 0xC8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x138 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149 PUSH0 DUP4 DUP4 PUSH2 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x26B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x226 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2FC JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3F4 JUMPI PUSH2 0x3F3 PUSH2 0x39D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x456 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x460 DUP7 DUP4 PUSH2 0x41B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4A4 PUSH2 0x49F PUSH2 0x49A DUP5 PUSH2 0x478 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4BD DUP4 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x4D1 PUSH2 0x4C9 DUP3 PUSH2 0x4AB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x427 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x4E5 PUSH2 0x4D9 JUMP JUMPDEST PUSH2 0x4F0 DUP2 DUP5 DUP5 PUSH2 0x4B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x513 JUMPI PUSH2 0x508 PUSH0 DUP3 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x529 DUP2 PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x532 DUP5 PUSH2 0x40C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x541 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x555 PUSH2 0x54D DUP6 PUSH2 0x40C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4F5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x578 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x55D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x590 DUP4 DUP4 PUSH2 0x569 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A9 DUP3 PUSH2 0x366 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x5C1 PUSH2 0x370 JUMP JUMPDEST JUMPDEST PUSH2 0x5CC DUP3 SLOAD PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x5D7 DUP3 DUP3 DUP6 PUSH2 0x517 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x608 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5F6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x600 DUP6 DUP3 PUSH2 0x585 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x667 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x616 DUP7 PUSH2 0x3FA JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x63D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x618 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x65A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x656 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x569 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x698 DUP3 PUSH2 0x66F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A8 DUP2 PUSH2 0x68E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x69F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x6FE DUP3 PUSH2 0x478 JUMP JUMPDEST SWAP2 POP PUSH2 0x709 DUP4 PUSH2 0x478 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x721 JUMPI PUSH2 0x720 PUSH2 0x6C7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x730 DUP2 PUSH2 0x478 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x749 PUSH0 DUP4 ADD DUP7 PUSH2 0x69F JUMP JUMPDEST PUSH2 0x756 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x763 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x727 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x77E PUSH0 DUP4 ADD DUP5 PUSH2 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE1 DUP1 PUSH2 0x791 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x46E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x342 SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x390 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3CD PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA DUP2 DUP6 DUP6 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x47B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x602 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x48B DUP5 DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x50C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4FD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x602 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x582 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FD DUP4 DUP4 DUP4 PUSH2 0x7D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x672 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7CB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x821 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8EF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8AA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x936 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA2C DUP3 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0xA36 DUP2 DUP6 PUSH2 0x9F4 JUMP JUMPDEST SWAP4 POP PUSH2 0xA46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA04 JUMP JUMPDEST PUSH2 0xA4F DUP2 PUSH2 0xA12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA72 DUP2 DUP5 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA7 DUP3 PUSH2 0xA7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB7 DUP2 PUSH2 0xA9D JUMP JUMPDEST DUP2 EQ PUSH2 0xAC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD2 DUP2 PUSH2 0xAAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEA DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB05 DUP2 PUSH2 0xAE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH2 0xB20 PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB2E DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB3F DUP6 DUP3 DUP7 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5D DUP2 PUSH2 0xB49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB76 PUSH0 DUP4 ADD DUP5 PUSH2 0xB54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH0 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC8 DUP7 DUP3 DUP8 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBD9 DUP7 DUP3 DUP8 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBEA DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC09 DUP2 PUSH2 0xBF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC22 PUSH0 DUP4 ADD DUP5 PUSH2 0xC00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3D JUMPI PUSH2 0xC3C PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4A DUP5 DUP3 DUP6 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC76 DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC87 DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCE8 JUMPI PUSH2 0xCE7 PUSH2 0xC91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF7 DUP2 PUSH2 0xA9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD10 PUSH0 DUP4 ADD DUP7 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0xD1D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xD2A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD45 PUSH0 DUP4 ADD DUP5 PUSH2 0xCEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD82 DUP3 PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8D DUP4 PUSH2 0xAD8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA4 PUSH2 0xD4B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SMOD CREATE SWAP7 MSIZE OR PUSH10 0x18B4352351864B373B7A 0xE6 0xB7 0xD5 MSTORE8 0xD4 SUB PUSH21 0x12F2CDB08C20161D64736F6C634300081900330000 ",
							"sourceMap": "1106:9889:1:-:0;;;1592:224;;;;;;;;;;1661:25;;;;;;;;;;;;;;;;;:5;:25;;;;;;:::i;:::-;;1696:18;;;;;;;;;;;;;;;;;:7;:18;;;;;;:::i;:::-;;1774:34;1780:12;:10;;;:12;;:::i;:::-;1794:13;1774:5;;;:34;;:::i;:::-;1106:9889;;656:96:4;709:7;735:10;728:17;;656:96;:::o;7559:208:1:-;7648:1;7629:21;;:7;:21;;;7625:91;;7702:1;7673:32;;;;;;;;;;;:::i;:::-;;;;;;;;7625:91;7725:35;7741:1;7745:7;7754:5;7725:7;;;:35;;:::i;:::-;7559:208;;:::o;6109:1107::-;6214:1;6198:18;;:4;:18;;;6194:540;;6350:5;6334:12;;:21;;;;;;;:::i;:::-;;;;;;;;6194:540;;;6386:19;6408:9;:15;6418:4;6408:15;;;;;;;;;;;;;;;;6386:37;;6455:5;6441:11;:19;6437:115;;;6512:4;6518:11;6531:5;6487:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6437:115;6704:5;6690:11;:19;6672:9;:15;6682:4;6672:15;;;;;;;;;;;;;;;:37;;;;6372:362;6194:540;6762:1;6748:16;;:2;:16;;;6744:425;;6927:5;6911:12;;:21;;;;;;;;;;;6744:425;;;7139:5;7122:9;:13;7132:2;7122:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6744:425;7199:2;7184:25;;7193:4;7184:25;;;7203:5;7184:25;;;;;;:::i;:::-;;;;;;;;6109:1107;;;:::o;7:99:5:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;1106:9889:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_544": {
									"entryPoint": 1134,
									"id": 544,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_604": {
									"entryPoint": 1538,
									"id": 604,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_769": {
									"entryPoint": 1127,
									"id": 769,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_652": {
									"entryPoint": 1152,
									"id": 652,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_383": {
									"entryPoint": 1298,
									"id": 383,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_460": {
									"entryPoint": 2001,
									"id": 460,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_280": {
									"entryPoint": 997,
									"id": 280,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_304": {
									"entryPoint": 653,
									"id": 304,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_239": {
									"entryPoint": 750,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_217": {
									"entryPoint": 742,
									"id": 217,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_199": {
									"entryPoint": 509,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_208": {
									"entryPoint": 819,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_226": {
									"entryPoint": 687,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_336": {
									"entryPoint": 696,
									"id": 336,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_263": {
									"entryPoint": 963,
									"id": 263,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3325,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3403,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3217,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7253:5",
										"nodeType": "YulBlock",
										"src": "0:7253:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:5",
													"nodeType": "YulBlock",
													"src": "66:40:5",
													"statements": [
														{
															"nativeSrc": "77:22:5",
															"nodeType": "YulAssignment",
															"src": "77:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:5"
																},
																"nativeSrc": "87:12:5",
																"nodeType": "YulFunctionCall",
																"src": "87:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:5",
														"nodeType": "YulTypedName",
														"src": "49:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:5",
														"nodeType": "YulTypedName",
														"src": "59:6:5",
														"type": ""
													}
												],
												"src": "7:99:5"
											},
											{
												"body": {
													"nativeSrc": "208:73:5",
													"nodeType": "YulBlock",
													"src": "208:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:5"
																},
																"nativeSrc": "218:19:5",
																"nodeType": "YulFunctionCall",
																"src": "218:19:5"
															},
															"nativeSrc": "218:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:5"
														},
														{
															"nativeSrc": "246:29:5",
															"nodeType": "YulAssignment",
															"src": "246:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:5",
																		"nodeType": "YulLiteral",
																		"src": "270:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:5"
																},
																"nativeSrc": "261:14:5",
																"nodeType": "YulFunctionCall",
																"src": "261:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:5",
														"nodeType": "YulTypedName",
														"src": "180:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:5",
														"nodeType": "YulTypedName",
														"src": "185:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:5",
														"nodeType": "YulTypedName",
														"src": "196:11:5",
														"type": ""
													}
												],
												"src": "112:169:5"
											},
											{
												"body": {
													"nativeSrc": "349:77:5",
													"nodeType": "YulBlock",
													"src": "349:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:5"
																},
																"nativeSrc": "360:23:5",
																"nodeType": "YulFunctionCall",
																"src": "360:23:5"
															},
															"nativeSrc": "360:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:5"
																		},
																		"nativeSrc": "399:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:5",
																		"nodeType": "YulLiteral",
																		"src": "417:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:5"
																},
																"nativeSrc": "392:27:5",
																"nodeType": "YulFunctionCall",
																"src": "392:27:5"
															},
															"nativeSrc": "392:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:5",
														"nodeType": "YulTypedName",
														"src": "331:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:5",
														"nodeType": "YulTypedName",
														"src": "336:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:5",
														"nodeType": "YulTypedName",
														"src": "341:6:5",
														"type": ""
													}
												],
												"src": "287:139:5"
											},
											{
												"body": {
													"nativeSrc": "480:54:5",
													"nodeType": "YulBlock",
													"src": "480:54:5",
													"statements": [
														{
															"nativeSrc": "490:38:5",
															"nodeType": "YulAssignment",
															"src": "490:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:5",
																				"nodeType": "YulLiteral",
																				"src": "515:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:5"
																		},
																		"nativeSrc": "504:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:5",
																				"nodeType": "YulLiteral",
																				"src": "524:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:5"
																		},
																		"nativeSrc": "520:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:5"
																},
																"nativeSrc": "500:28:5",
																"nodeType": "YulFunctionCall",
																"src": "500:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:5",
														"nodeType": "YulTypedName",
														"src": "463:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:5",
														"nodeType": "YulTypedName",
														"src": "473:6:5",
														"type": ""
													}
												],
												"src": "432:102:5"
											},
											{
												"body": {
													"nativeSrc": "632:285:5",
													"nodeType": "YulBlock",
													"src": "632:285:5",
													"statements": [
														{
															"nativeSrc": "642:53:5",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:5",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:5"
																},
																"nativeSrc": "656:39:5",
																"nodeType": "YulFunctionCall",
																"src": "656:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:5",
																	"nodeType": "YulTypedName",
																	"src": "646:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:5",
															"nodeType": "YulAssignment",
															"src": "704:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:5"
																},
																"nativeSrc": "711:71:5",
																"nodeType": "YulFunctionCall",
																"src": "711:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:5",
																				"nodeType": "YulLiteral",
																				"src": "837:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:5"
																		},
																		"nativeSrc": "826:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:5"
																},
																"nativeSrc": "791:65:5",
																"nodeType": "YulFunctionCall",
																"src": "791:65:5"
															},
															"nativeSrc": "791:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:5"
														},
														{
															"nativeSrc": "865:46:5",
															"nodeType": "YulAssignment",
															"src": "865:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:5"
																		},
																		"nativeSrc": "881:29:5",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:5"
																},
																"nativeSrc": "872:39:5",
																"nodeType": "YulFunctionCall",
																"src": "872:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:5",
														"nodeType": "YulTypedName",
														"src": "613:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:5",
														"nodeType": "YulTypedName",
														"src": "620:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:5",
														"nodeType": "YulTypedName",
														"src": "628:3:5",
														"type": ""
													}
												],
												"src": "540:377:5"
											},
											{
												"body": {
													"nativeSrc": "1041:195:5",
													"nodeType": "YulBlock",
													"src": "1041:195:5",
													"statements": [
														{
															"nativeSrc": "1051:26:5",
															"nodeType": "YulAssignment",
															"src": "1051:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:5"
																},
																"nativeSrc": "1059:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:5"
																		},
																		"nativeSrc": "1094:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:5"
																		},
																		"nativeSrc": "1113:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:5"
																},
																"nativeSrc": "1087:47:5",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:5"
															},
															"nativeSrc": "1087:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:5"
														},
														{
															"nativeSrc": "1143:86:5",
															"nodeType": "YulAssignment",
															"src": "1143:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:5",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:5"
																},
																"nativeSrc": "1151:78:5",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:5",
														"nodeType": "YulTypedName",
														"src": "1013:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:5",
														"nodeType": "YulTypedName",
														"src": "1025:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:5",
														"nodeType": "YulTypedName",
														"src": "1036:4:5",
														"type": ""
													}
												],
												"src": "923:313:5"
											},
											{
												"body": {
													"nativeSrc": "1282:35:5",
													"nodeType": "YulBlock",
													"src": "1282:35:5",
													"statements": [
														{
															"nativeSrc": "1292:19:5",
															"nodeType": "YulAssignment",
															"src": "1292:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:5"
																},
																"nativeSrc": "1302:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:5",
														"nodeType": "YulTypedName",
														"src": "1275:6:5",
														"type": ""
													}
												],
												"src": "1242:75:5"
											},
											{
												"body": {
													"nativeSrc": "1412:28:5",
													"nodeType": "YulBlock",
													"src": "1412:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:5"
																},
																"nativeSrc": "1422:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:5"
															},
															"nativeSrc": "1422:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:5"
											},
											{
												"body": {
													"nativeSrc": "1535:28:5",
													"nodeType": "YulBlock",
													"src": "1535:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:5"
																},
																"nativeSrc": "1545:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:5"
															},
															"nativeSrc": "1545:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:5"
											},
											{
												"body": {
													"nativeSrc": "1614:81:5",
													"nodeType": "YulBlock",
													"src": "1614:81:5",
													"statements": [
														{
															"nativeSrc": "1624:65:5",
															"nodeType": "YulAssignment",
															"src": "1624:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:5"
																},
																"nativeSrc": "1635:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:5",
														"nodeType": "YulTypedName",
														"src": "1596:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:5",
														"nodeType": "YulTypedName",
														"src": "1606:7:5",
														"type": ""
													}
												],
												"src": "1569:126:5"
											},
											{
												"body": {
													"nativeSrc": "1746:51:5",
													"nodeType": "YulBlock",
													"src": "1746:51:5",
													"statements": [
														{
															"nativeSrc": "1756:35:5",
															"nodeType": "YulAssignment",
															"src": "1756:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:5"
																},
																"nativeSrc": "1767:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:5",
														"nodeType": "YulTypedName",
														"src": "1728:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:5",
														"nodeType": "YulTypedName",
														"src": "1738:7:5",
														"type": ""
													}
												],
												"src": "1701:96:5"
											},
											{
												"body": {
													"nativeSrc": "1846:79:5",
													"nodeType": "YulBlock",
													"src": "1846:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:5",
																"nodeType": "YulBlock",
																"src": "1903:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:5"
																			},
																			"nativeSrc": "1905:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:5"
																		},
																		"nativeSrc": "1905:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:5"
																				},
																				"nativeSrc": "1876:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:5"
																		},
																		"nativeSrc": "1866:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:5"
																},
																"nativeSrc": "1859:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:5"
															},
															"nativeSrc": "1856:63:5",
															"nodeType": "YulIf",
															"src": "1856:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:5",
														"nodeType": "YulTypedName",
														"src": "1839:5:5",
														"type": ""
													}
												],
												"src": "1803:122:5"
											},
											{
												"body": {
													"nativeSrc": "1983:87:5",
													"nodeType": "YulBlock",
													"src": "1983:87:5",
													"statements": [
														{
															"nativeSrc": "1993:29:5",
															"nodeType": "YulAssignment",
															"src": "1993:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:5"
																},
																"nativeSrc": "2002:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:5"
																},
																"nativeSrc": "2031:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:5"
															},
															"nativeSrc": "2031:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:5",
														"nodeType": "YulTypedName",
														"src": "1961:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:5",
														"nodeType": "YulTypedName",
														"src": "1969:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:5",
														"nodeType": "YulTypedName",
														"src": "1977:5:5",
														"type": ""
													}
												],
												"src": "1931:139:5"
											},
											{
												"body": {
													"nativeSrc": "2121:32:5",
													"nodeType": "YulBlock",
													"src": "2121:32:5",
													"statements": [
														{
															"nativeSrc": "2131:16:5",
															"nodeType": "YulAssignment",
															"src": "2131:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:5",
																"nodeType": "YulIdentifier",
																"src": "2142:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:5",
														"nodeType": "YulTypedName",
														"src": "2103:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:5",
														"nodeType": "YulTypedName",
														"src": "2113:7:5",
														"type": ""
													}
												],
												"src": "2076:77:5"
											},
											{
												"body": {
													"nativeSrc": "2202:79:5",
													"nodeType": "YulBlock",
													"src": "2202:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:5",
																"nodeType": "YulBlock",
																"src": "2259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:5"
																			},
																			"nativeSrc": "2261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:5"
																		},
																		"nativeSrc": "2261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:5"
																				},
																				"nativeSrc": "2232:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:5"
																		},
																		"nativeSrc": "2222:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:5"
																},
																"nativeSrc": "2215:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:5"
															},
															"nativeSrc": "2212:63:5",
															"nodeType": "YulIf",
															"src": "2212:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:5",
														"nodeType": "YulTypedName",
														"src": "2195:5:5",
														"type": ""
													}
												],
												"src": "2159:122:5"
											},
											{
												"body": {
													"nativeSrc": "2339:87:5",
													"nodeType": "YulBlock",
													"src": "2339:87:5",
													"statements": [
														{
															"nativeSrc": "2349:29:5",
															"nodeType": "YulAssignment",
															"src": "2349:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:5"
																},
																"nativeSrc": "2358:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:5"
																},
																"nativeSrc": "2387:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:5"
															},
															"nativeSrc": "2387:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:5",
														"nodeType": "YulTypedName",
														"src": "2317:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:5",
														"nodeType": "YulTypedName",
														"src": "2325:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:5",
														"nodeType": "YulTypedName",
														"src": "2333:5:5",
														"type": ""
													}
												],
												"src": "2287:139:5"
											},
											{
												"body": {
													"nativeSrc": "2515:391:5",
													"nodeType": "YulBlock",
													"src": "2515:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:5",
																"nodeType": "YulBlock",
																"src": "2561:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:5"
																			},
																			"nativeSrc": "2563:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:5"
																		},
																		"nativeSrc": "2563:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:5"
																		},
																		"nativeSrc": "2532:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:5"
																},
																"nativeSrc": "2528:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:5"
															},
															"nativeSrc": "2525:119:5",
															"nodeType": "YulIf",
															"src": "2525:119:5"
														},
														{
															"nativeSrc": "2654:117:5",
															"nodeType": "YulBlock",
															"src": "2654:117:5",
															"statements": [
																{
																	"nativeSrc": "2669:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:5"
																				},
																				"nativeSrc": "2729:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:5"
																		},
																		"nativeSrc": "2708:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:5",
															"nodeType": "YulBlock",
															"src": "2781:118:5",
															"statements": [
																{
																	"nativeSrc": "2796:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:5"
																				},
																				"nativeSrc": "2857:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:5"
																		},
																		"nativeSrc": "2836:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:5",
														"nodeType": "YulTypedName",
														"src": "2477:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:5",
														"nodeType": "YulTypedName",
														"src": "2488:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:5",
														"nodeType": "YulTypedName",
														"src": "2500:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:5",
														"nodeType": "YulTypedName",
														"src": "2508:6:5",
														"type": ""
													}
												],
												"src": "2432:474:5"
											},
											{
												"body": {
													"nativeSrc": "2954:48:5",
													"nodeType": "YulBlock",
													"src": "2954:48:5",
													"statements": [
														{
															"nativeSrc": "2964:32:5",
															"nodeType": "YulAssignment",
															"src": "2964:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:5"
																		},
																		"nativeSrc": "2982:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:5"
																},
																"nativeSrc": "2975:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:5",
														"nodeType": "YulTypedName",
														"src": "2936:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:5",
														"nodeType": "YulTypedName",
														"src": "2946:7:5",
														"type": ""
													}
												],
												"src": "2912:90:5"
											},
											{
												"body": {
													"nativeSrc": "3067:50:5",
													"nodeType": "YulBlock",
													"src": "3067:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:5"
																		},
																		"nativeSrc": "3089:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:5"
																},
																"nativeSrc": "3077:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:5"
															},
															"nativeSrc": "3077:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:5",
														"nodeType": "YulTypedName",
														"src": "3055:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:5",
														"nodeType": "YulTypedName",
														"src": "3062:3:5",
														"type": ""
													}
												],
												"src": "3008:109:5"
											},
											{
												"body": {
													"nativeSrc": "3215:118:5",
													"nodeType": "YulBlock",
													"src": "3215:118:5",
													"statements": [
														{
															"nativeSrc": "3225:26:5",
															"nodeType": "YulAssignment",
															"src": "3225:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:5"
																},
																"nativeSrc": "3233:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:5"
																		},
																		"nativeSrc": "3308:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:5"
																},
																"nativeSrc": "3261:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:5"
															},
															"nativeSrc": "3261:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:5",
														"nodeType": "YulTypedName",
														"src": "3187:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:5",
														"nodeType": "YulTypedName",
														"src": "3199:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:5",
														"nodeType": "YulTypedName",
														"src": "3210:4:5",
														"type": ""
													}
												],
												"src": "3123:210:5"
											},
											{
												"body": {
													"nativeSrc": "3404:53:5",
													"nodeType": "YulBlock",
													"src": "3404:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:5"
																		},
																		"nativeSrc": "3426:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:5"
																},
																"nativeSrc": "3414:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:5"
															},
															"nativeSrc": "3414:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:5",
														"nodeType": "YulTypedName",
														"src": "3392:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:5",
														"nodeType": "YulTypedName",
														"src": "3399:3:5",
														"type": ""
													}
												],
												"src": "3339:118:5"
											},
											{
												"body": {
													"nativeSrc": "3561:124:5",
													"nodeType": "YulBlock",
													"src": "3561:124:5",
													"statements": [
														{
															"nativeSrc": "3571:26:5",
															"nodeType": "YulAssignment",
															"src": "3571:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:5"
																},
																"nativeSrc": "3579:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:5"
																		},
																		"nativeSrc": "3660:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:5"
																},
																"nativeSrc": "3607:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:5"
															},
															"nativeSrc": "3607:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:5",
														"nodeType": "YulTypedName",
														"src": "3533:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:5",
														"nodeType": "YulTypedName",
														"src": "3545:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:5",
														"nodeType": "YulTypedName",
														"src": "3556:4:5",
														"type": ""
													}
												],
												"src": "3463:222:5"
											},
											{
												"body": {
													"nativeSrc": "3791:519:5",
													"nodeType": "YulBlock",
													"src": "3791:519:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:5",
																"nodeType": "YulBlock",
																"src": "3837:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:5"
																			},
																			"nativeSrc": "3839:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:5"
																		},
																		"nativeSrc": "3839:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:5"
																		},
																		"nativeSrc": "3808:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:5"
																},
																"nativeSrc": "3804:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:5"
															},
															"nativeSrc": "3801:119:5",
															"nodeType": "YulIf",
															"src": "3801:119:5"
														},
														{
															"nativeSrc": "3930:117:5",
															"nodeType": "YulBlock",
															"src": "3930:117:5",
															"statements": [
																{
																	"nativeSrc": "3945:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:5"
																				},
																				"nativeSrc": "4005:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:5"
																		},
																		"nativeSrc": "3984:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:5",
															"nodeType": "YulBlock",
															"src": "4057:118:5",
															"statements": [
																{
																	"nativeSrc": "4072:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:5"
																				},
																				"nativeSrc": "4133:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:5"
																		},
																		"nativeSrc": "4112:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:5",
															"nodeType": "YulBlock",
															"src": "4185:118:5",
															"statements": [
																{
																	"nativeSrc": "4200:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:5"
																				},
																				"nativeSrc": "4261:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:5"
																		},
																		"nativeSrc": "4240:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:5",
														"nodeType": "YulTypedName",
														"src": "3745:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:5",
														"nodeType": "YulTypedName",
														"src": "3756:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:5",
														"nodeType": "YulTypedName",
														"src": "3768:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:5",
														"nodeType": "YulTypedName",
														"src": "3776:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:5",
														"nodeType": "YulTypedName",
														"src": "3784:6:5",
														"type": ""
													}
												],
												"src": "3691:619:5"
											},
											{
												"body": {
													"nativeSrc": "4359:43:5",
													"nodeType": "YulBlock",
													"src": "4359:43:5",
													"statements": [
														{
															"nativeSrc": "4369:27:5",
															"nodeType": "YulAssignment",
															"src": "4369:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:5"
																},
																"nativeSrc": "4380:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:5",
														"nodeType": "YulTypedName",
														"src": "4341:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:5",
														"nodeType": "YulTypedName",
														"src": "4351:7:5",
														"type": ""
													}
												],
												"src": "4316:86:5"
											},
											{
												"body": {
													"nativeSrc": "4469:51:5",
													"nodeType": "YulBlock",
													"src": "4469:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:5",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:5"
																		},
																		"nativeSrc": "4491:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:5"
																},
																"nativeSrc": "4479:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:5"
															},
															"nativeSrc": "4479:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:5",
														"nodeType": "YulTypedName",
														"src": "4457:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:5",
														"nodeType": "YulTypedName",
														"src": "4464:3:5",
														"type": ""
													}
												],
												"src": "4408:112:5"
											},
											{
												"body": {
													"nativeSrc": "4620:120:5",
													"nodeType": "YulBlock",
													"src": "4620:120:5",
													"statements": [
														{
															"nativeSrc": "4630:26:5",
															"nodeType": "YulAssignment",
															"src": "4630:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:5"
																},
																"nativeSrc": "4638:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:5"
																		},
																		"nativeSrc": "4715:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:5",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:5"
																},
																"nativeSrc": "4666:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:5"
															},
															"nativeSrc": "4666:67:5",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:5",
														"nodeType": "YulTypedName",
														"src": "4592:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:5",
														"nodeType": "YulTypedName",
														"src": "4604:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:5",
														"nodeType": "YulTypedName",
														"src": "4615:4:5",
														"type": ""
													}
												],
												"src": "4526:214:5"
											},
											{
												"body": {
													"nativeSrc": "4812:263:5",
													"nodeType": "YulBlock",
													"src": "4812:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:5",
																"nodeType": "YulBlock",
																"src": "4858:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:5"
																			},
																			"nativeSrc": "4860:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:5"
																		},
																		"nativeSrc": "4860:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:5"
																		},
																		"nativeSrc": "4829:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:5"
																},
																"nativeSrc": "4825:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:5"
															},
															"nativeSrc": "4822:119:5",
															"nodeType": "YulIf",
															"src": "4822:119:5"
														},
														{
															"nativeSrc": "4951:117:5",
															"nodeType": "YulBlock",
															"src": "4951:117:5",
															"statements": [
																{
																	"nativeSrc": "4966:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:5"
																				},
																				"nativeSrc": "5026:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:5"
																		},
																		"nativeSrc": "5005:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:5",
														"nodeType": "YulTypedName",
														"src": "4782:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:5",
														"nodeType": "YulTypedName",
														"src": "4793:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:5",
														"nodeType": "YulTypedName",
														"src": "4805:6:5",
														"type": ""
													}
												],
												"src": "4746:329:5"
											},
											{
												"body": {
													"nativeSrc": "5164:391:5",
													"nodeType": "YulBlock",
													"src": "5164:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:5",
																"nodeType": "YulBlock",
																"src": "5210:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:5"
																			},
																			"nativeSrc": "5212:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:5"
																		},
																		"nativeSrc": "5212:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:5"
																		},
																		"nativeSrc": "5181:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:5"
																},
																"nativeSrc": "5177:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:5"
															},
															"nativeSrc": "5174:119:5",
															"nodeType": "YulIf",
															"src": "5174:119:5"
														},
														{
															"nativeSrc": "5303:117:5",
															"nodeType": "YulBlock",
															"src": "5303:117:5",
															"statements": [
																{
																	"nativeSrc": "5318:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:5"
																				},
																				"nativeSrc": "5378:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:5"
																		},
																		"nativeSrc": "5357:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5430:118:5",
															"nodeType": "YulBlock",
															"src": "5430:118:5",
															"statements": [
																{
																	"nativeSrc": "5445:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5445:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5459:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5449:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5449:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:5"
																				},
																				"nativeSrc": "5506:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:5"
																		},
																		"nativeSrc": "5485:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5475:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5081:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:5",
														"nodeType": "YulTypedName",
														"src": "5126:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5137:7:5",
														"nodeType": "YulTypedName",
														"src": "5137:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5149:6:5",
														"nodeType": "YulTypedName",
														"src": "5149:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:5",
														"nodeType": "YulTypedName",
														"src": "5157:6:5",
														"type": ""
													}
												],
												"src": "5081:474:5"
											},
											{
												"body": {
													"nativeSrc": "5589:152:5",
													"nodeType": "YulBlock",
													"src": "5589:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5606:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:77:5",
																		"nodeType": "YulLiteral",
																		"src": "5609:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:5"
																},
																"nativeSrc": "5599:88:5",
																"nodeType": "YulFunctionCall",
																"src": "5599:88:5"
															},
															"nativeSrc": "5599:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "5599:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5706:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5696:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:5"
																},
																"nativeSrc": "5696:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5696:15:5"
															},
															"nativeSrc": "5696:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5727:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5720:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:5"
																},
																"nativeSrc": "5720:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5720:15:5"
															},
															"nativeSrc": "5720:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5561:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:180:5"
											},
											{
												"body": {
													"nativeSrc": "5798:269:5",
													"nodeType": "YulBlock",
													"src": "5798:269:5",
													"statements": [
														{
															"nativeSrc": "5808:22:5",
															"nodeType": "YulAssignment",
															"src": "5808:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5822:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5822:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5818:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:5"
																},
																"nativeSrc": "5818:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5818:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5808:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:5"
																}
															]
														},
														{
															"nativeSrc": "5839:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5839:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5869:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5869:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5865:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:5"
																},
																"nativeSrc": "5865:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5865:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5843:18:5",
																	"nodeType": "YulTypedName",
																	"src": "5843:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5916:51:5",
																"nodeType": "YulBlock",
																"src": "5916:51:5",
																"statements": [
																	{
																		"nativeSrc": "5930:27:5",
																		"nodeType": "YulAssignment",
																		"src": "5930:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5944:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "5944:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5952:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5952:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5940:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5940:3:5"
																			},
																			"nativeSrc": "5940:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5940:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5930:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5896:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5896:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5889:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:5"
																},
																"nativeSrc": "5889:26:5",
																"nodeType": "YulFunctionCall",
																"src": "5889:26:5"
															},
															"nativeSrc": "5886:81:5",
															"nodeType": "YulIf",
															"src": "5886:81:5"
														},
														{
															"body": {
																"nativeSrc": "6019:42:5",
																"nodeType": "YulBlock",
																"src": "6019:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6033:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "6033:16:5"
																			},
																			"nativeSrc": "6033:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6033:18:5"
																		},
																		"nativeSrc": "6033:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6033:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5983:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5983:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6006:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6003:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "6003:2:5"
																		},
																		"nativeSrc": "6003:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5980:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:5"
																},
																"nativeSrc": "5980:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5980:38:5"
															},
															"nativeSrc": "5977:84:5",
															"nodeType": "YulIf",
															"src": "5977:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5747:320:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5782:4:5",
														"nodeType": "YulTypedName",
														"src": "5782:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5791:6:5",
														"nodeType": "YulTypedName",
														"src": "5791:6:5",
														"type": ""
													}
												],
												"src": "5747:320:5"
											},
											{
												"body": {
													"nativeSrc": "6138:53:5",
													"nodeType": "YulBlock",
													"src": "6138:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6155:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6155:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6178:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6178:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6160:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "6160:17:5"
																		},
																		"nativeSrc": "6160:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6160:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6148:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:5"
																},
																"nativeSrc": "6148:37:5",
																"nodeType": "YulFunctionCall",
																"src": "6148:37:5"
															},
															"nativeSrc": "6148:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "6148:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6073:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6126:5:5",
														"nodeType": "YulTypedName",
														"src": "6126:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6133:3:5",
														"nodeType": "YulTypedName",
														"src": "6133:3:5",
														"type": ""
													}
												],
												"src": "6073:118:5"
											},
											{
												"body": {
													"nativeSrc": "6351:288:5",
													"nodeType": "YulBlock",
													"src": "6351:288:5",
													"statements": [
														{
															"nativeSrc": "6361:26:5",
															"nodeType": "YulAssignment",
															"src": "6361:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6373:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6373:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6384:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6384:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6369:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6369:3:5"
																},
																"nativeSrc": "6369:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6369:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6361:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6361:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6441:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6441:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6454:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6454:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6465:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6465:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6450:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6450:3:5"
																		},
																		"nativeSrc": "6450:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6450:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6397:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6397:43:5"
																},
																"nativeSrc": "6397:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6397:71:5"
															},
															"nativeSrc": "6397:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6397:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6522:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6522:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6535:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6535:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6546:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6546:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6531:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6531:3:5"
																		},
																		"nativeSrc": "6531:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6531:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6478:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6478:43:5"
																},
																"nativeSrc": "6478:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6478:72:5"
															},
															"nativeSrc": "6478:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6478:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6604:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6604:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6617:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6617:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6628:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6628:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6613:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6613:3:5"
																		},
																		"nativeSrc": "6613:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6613:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6560:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6560:43:5"
																},
																"nativeSrc": "6560:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6560:72:5"
															},
															"nativeSrc": "6560:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6560:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6197:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6307:9:5",
														"nodeType": "YulTypedName",
														"src": "6307:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6319:6:5",
														"nodeType": "YulTypedName",
														"src": "6319:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6327:6:5",
														"nodeType": "YulTypedName",
														"src": "6327:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6335:6:5",
														"nodeType": "YulTypedName",
														"src": "6335:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6346:4:5",
														"nodeType": "YulTypedName",
														"src": "6346:4:5",
														"type": ""
													}
												],
												"src": "6197:442:5"
											},
											{
												"body": {
													"nativeSrc": "6743:124:5",
													"nodeType": "YulBlock",
													"src": "6743:124:5",
													"statements": [
														{
															"nativeSrc": "6753:26:5",
															"nodeType": "YulAssignment",
															"src": "6753:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6765:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6765:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6776:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6776:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6761:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6761:3:5"
																},
																"nativeSrc": "6761:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6761:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6753:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6833:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6833:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6846:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6846:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6857:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6857:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6842:3:5"
																		},
																		"nativeSrc": "6842:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6842:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6789:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6789:43:5"
																},
																"nativeSrc": "6789:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6789:71:5"
															},
															"nativeSrc": "6789:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6789:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6645:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6715:9:5",
														"nodeType": "YulTypedName",
														"src": "6715:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6727:6:5",
														"nodeType": "YulTypedName",
														"src": "6727:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6738:4:5",
														"nodeType": "YulTypedName",
														"src": "6738:4:5",
														"type": ""
													}
												],
												"src": "6645:222:5"
											},
											{
												"body": {
													"nativeSrc": "6901:152:5",
													"nodeType": "YulBlock",
													"src": "6901:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6918:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6918:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6921:77:5",
																		"nodeType": "YulLiteral",
																		"src": "6921:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6911:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:5"
																},
																"nativeSrc": "6911:88:5",
																"nodeType": "YulFunctionCall",
																"src": "6911:88:5"
															},
															"nativeSrc": "6911:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "6911:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7015:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7015:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7018:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7018:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7008:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:5"
																},
																"nativeSrc": "7008:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7008:15:5"
															},
															"nativeSrc": "7008:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7008:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7039:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7042:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7032:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:5"
																},
																"nativeSrc": "7032:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7032:15:5"
															},
															"nativeSrc": "7032:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7032:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6873:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "6873:180:5"
											},
											{
												"body": {
													"nativeSrc": "7103:147:5",
													"nodeType": "YulBlock",
													"src": "7103:147:5",
													"statements": [
														{
															"nativeSrc": "7113:25:5",
															"nodeType": "YulAssignment",
															"src": "7113:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7136:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7136:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7118:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7118:17:5"
																},
																"nativeSrc": "7118:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7118:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7113:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7113:1:5"
																}
															]
														},
														{
															"nativeSrc": "7147:25:5",
															"nodeType": "YulAssignment",
															"src": "7147:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7170:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7170:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7152:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "7152:17:5"
																},
																"nativeSrc": "7152:20:5",
																"nodeType": "YulFunctionCall",
																"src": "7152:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7147:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "7147:1:5"
																}
															]
														},
														{
															"nativeSrc": "7181:16:5",
															"nodeType": "YulAssignment",
															"src": "7181:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7192:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7192:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7195:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7195:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7188:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:5"
																},
																"nativeSrc": "7188:9:5",
																"nodeType": "YulFunctionCall",
																"src": "7188:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7181:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7221:22:5",
																"nodeType": "YulBlock",
																"src": "7221:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7223:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7223:16:5"
																			},
																			"nativeSrc": "7223:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7223:18:5"
																		},
																		"nativeSrc": "7223:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7223:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7213:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "7213:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7216:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7216:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7210:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7210:2:5"
																},
																"nativeSrc": "7210:10:5",
																"nodeType": "YulFunctionCall",
																"src": "7210:10:5"
															},
															"nativeSrc": "7207:36:5",
															"nodeType": "YulIf",
															"src": "7207:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7059:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7090:1:5",
														"nodeType": "YulTypedName",
														"src": "7090:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7093:1:5",
														"nodeType": "YulTypedName",
														"src": "7093:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7099:3:5",
														"nodeType": "YulTypedName",
														"src": "7099:3:5",
														"type": ""
													}
												],
												"src": "7059:191:5"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063313ce56711610064578063313ce5671461013157806370a082311461014f57806395d89b411461017f578063a9059cbb1461019d578063dd62ed3e146101cd57610091565b806306fdde0314610095578063095ea7b3146100b357806318160ddd146100e357806323b872dd14610101575b5f80fd5b61009d6101fd565b6040516100aa9190610a5a565b60405180910390f35b6100cd60048036038101906100c89190610b0b565b61028d565b6040516100da9190610b63565b60405180910390f35b6100eb6102af565b6040516100f89190610b8b565b60405180910390f35b61011b60048036038101906101169190610ba4565b6102b8565b6040516101289190610b63565b60405180910390f35b6101396102e6565b6040516101469190610c0f565b60405180910390f35b61016960048036038101906101649190610c28565b6102ee565b6040516101769190610b8b565b60405180910390f35b610187610333565b6040516101949190610a5a565b60405180910390f35b6101b760048036038101906101b29190610b0b565b6103c3565b6040516101c49190610b63565b60405180910390f35b6101e760048036038101906101e29190610c53565b6103e5565b6040516101f49190610b8b565b60405180910390f35b60606003805461020c90610cbe565b80601f016020809104026020016040519081016040528092919081815260200182805461023890610cbe565b80156102835780601f1061025a57610100808354040283529160200191610283565b820191905f5260205f20905b81548152906001019060200180831161026657829003601f168201915b5050505050905090565b5f80610297610467565b90506102a481858561046e565b600191505092915050565b5f600254905090565b5f806102c2610467565b90506102cf858285610480565b6102da858585610512565b60019150509392505050565b5f6006905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461034290610cbe565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90610cbe565b80156103b95780601f10610390576101008083540402835291602001916103b9565b820191905f5260205f20905b81548152906001019060200180831161039c57829003601f168201915b5050505050905090565b5f806103cd610467565b90506103da818585610512565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61047b8383836001610602565b505050565b5f61048b84846103e5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461050c57818110156104fd578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016104f493929190610cfd565b60405180910390fd5b61050b84848484035f610602565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610582575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105799190610d32565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105f2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016105e99190610d32565b60405180910390fd5b6105fd8383836107d1565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610672575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106699190610d32565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e2575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106d99190610d32565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156107cb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107c29190610b8b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610821578060025f8282546108159190610d78565b925050819055506108ef565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156108aa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108a193929190610cfd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610936578060025f8282540392505081905550610980565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109dd9190610b8b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610a2c826109ea565b610a3681856109f4565b9350610a46818560208601610a04565b610a4f81610a12565b840191505092915050565b5f6020820190508181035f830152610a728184610a22565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610aa782610a7e565b9050919050565b610ab781610a9d565b8114610ac1575f80fd5b50565b5f81359050610ad281610aae565b92915050565b5f819050919050565b610aea81610ad8565b8114610af4575f80fd5b50565b5f81359050610b0581610ae1565b92915050565b5f8060408385031215610b2157610b20610a7a565b5b5f610b2e85828601610ac4565b9250506020610b3f85828601610af7565b9150509250929050565b5f8115159050919050565b610b5d81610b49565b82525050565b5f602082019050610b765f830184610b54565b92915050565b610b8581610ad8565b82525050565b5f602082019050610b9e5f830184610b7c565b92915050565b5f805f60608486031215610bbb57610bba610a7a565b5b5f610bc886828701610ac4565b9350506020610bd986828701610ac4565b9250506040610bea86828701610af7565b9150509250925092565b5f60ff82169050919050565b610c0981610bf4565b82525050565b5f602082019050610c225f830184610c00565b92915050565b5f60208284031215610c3d57610c3c610a7a565b5b5f610c4a84828501610ac4565b91505092915050565b5f8060408385031215610c6957610c68610a7a565b5b5f610c7685828601610ac4565b9250506020610c8785828601610ac4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cd557607f821691505b602082108103610ce857610ce7610c91565b5b50919050565b610cf781610a9d565b82525050565b5f606082019050610d105f830186610cee565b610d1d6020830185610b7c565b610d2a6040830184610b7c565b949350505050565b5f602082019050610d455f830184610cee565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610d8282610ad8565b9150610d8d83610ad8565b9250828201905080821115610da557610da4610d4b565b5b9291505056fea2646970667358221220ab07f09659176918b4352351864b373b7ae6b7d553d4037412f2cdb08c20161d64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1CD JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEB PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xC28 JUMP JUMPDEST PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20C SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x238 SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x283 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x283 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x266 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x297 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A4 DUP2 DUP6 DUP6 PUSH2 0x46E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2C2 PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CF DUP6 DUP3 DUP6 PUSH2 0x480 JUMP JUMPDEST PUSH2 0x2DA DUP6 DUP6 DUP6 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x342 SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36E SWAP1 PUSH2 0xCBE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x390 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3CD PUSH2 0x467 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DA DUP2 DUP6 DUP6 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x47B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x602 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x48B DUP5 DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x50C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4FD JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x602 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x582 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5F2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FD DUP4 DUP4 DUP4 PUSH2 0x7D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x672 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x669 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7CB JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7C2 SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x821 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0xD78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8EF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8AA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x936 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA2C DUP3 PUSH2 0x9EA JUMP JUMPDEST PUSH2 0xA36 DUP2 DUP6 PUSH2 0x9F4 JUMP JUMPDEST SWAP4 POP PUSH2 0xA46 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA04 JUMP JUMPDEST PUSH2 0xA4F DUP2 PUSH2 0xA12 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA72 DUP2 DUP5 PUSH2 0xA22 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAA7 DUP3 PUSH2 0xA7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB7 DUP2 PUSH2 0xA9D JUMP JUMPDEST DUP2 EQ PUSH2 0xAC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD2 DUP2 PUSH2 0xAAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEA DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB05 DUP2 PUSH2 0xAE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH2 0xB20 PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB2E DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB3F DUP6 DUP3 DUP7 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5D DUP2 PUSH2 0xB49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB76 PUSH0 DUP4 ADD DUP5 PUSH2 0xB54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB85 DUP2 PUSH2 0xAD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9E PUSH0 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBA PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC8 DUP7 DUP3 DUP8 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xBD9 DUP7 DUP3 DUP8 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xBEA DUP7 DUP3 DUP8 ADD PUSH2 0xAF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC09 DUP2 PUSH2 0xBF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC22 PUSH0 DUP4 ADD DUP5 PUSH2 0xC00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3D JUMPI PUSH2 0xC3C PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC4A DUP5 DUP3 DUP6 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0xA7A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC76 DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC87 DUP6 DUP3 DUP7 ADD PUSH2 0xAC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCD5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCE8 JUMPI PUSH2 0xCE7 PUSH2 0xC91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF7 DUP2 PUSH2 0xA9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD10 PUSH0 DUP4 ADD DUP7 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0xD1D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB7C JUMP JUMPDEST PUSH2 0xD2A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD45 PUSH0 DUP4 ADD DUP5 PUSH2 0xCEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xD82 DUP3 PUSH2 0xAD8 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8D DUP4 PUSH2 0xAD8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA4 PUSH2 0xD4B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SMOD CREATE SWAP7 MSIZE OR PUSH10 0x18B4352351864B373B7A 0xE6 0xB7 0xD5 MSTORE8 0xD4 SUB PUSH21 0x12F2CDB08C20161D64736F6C634300081900330000 ",
							"sourceMap": "1106:9889:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4099:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2950:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4877:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2809:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3105:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2083:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3416:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3652:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1881:89;1926:13;1958:5;1951:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:89;:::o;4099:186::-;4172:4;4188:13;4204:12;:10;:12::i;:::-;4188:28;;4226:31;4235:5;4242:7;4251:5;4226:8;:31::i;:::-;4274:4;4267:11;;;4099:186;;;;:::o;2950:97::-;3002:7;3028:12;;3021:19;;2950:97;:::o;4877:244::-;4964:4;4980:15;4998:12;:10;:12::i;:::-;4980:30;;5020:37;5036:4;5042:7;5051:5;5020:15;:37::i;:::-;5067:26;5077:4;5083:2;5087:5;5067:9;:26::i;:::-;5110:4;5103:11;;;4877:244;;;;;:::o;2809:81::-;2858:5;2882:1;2875:8;;2809:81;:::o;3105:116::-;3170:7;3196:9;:18;3206:7;3196:18;;;;;;;;;;;;;;;;3189:25;;3105:116;;;:::o;2083:93::-;2130:13;2162:7;2155:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2083:93;:::o;3416:178::-;3485:4;3501:13;3517:12;:10;:12::i;:::-;3501:28;;3539:27;3549:5;3556:2;3560:5;3539:9;:27::i;:::-;3583:4;3576:11;;;3416:178;;;;:::o;3652:140::-;3732:7;3758:11;:18;3770:5;3758:18;;;;;;;;;;;;;;;:27;3777:7;3758:27;;;;;;;;;;;;;;;;3751:34;;3652:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8827:128:1:-;8911:37;8920:5;8927:7;8936:5;8943:4;8911:8;:37::i;:::-;8827:128;;;:::o;10516:477::-;10615:24;10642:25;10652:5;10659:7;10642:9;:25::i;:::-;10615:52;;10701:17;10681:16;:37;10677:310;;10757:5;10738:16;:24;10734:130;;;10816:7;10825:16;10843:5;10789:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10734:130;10905:57;10914:5;10921:7;10949:5;10930:16;:24;10956:5;10905:8;:57::i;:::-;10677:310;10605:388;10516:477;;;:::o;5494:300::-;5593:1;5577:18;;:4;:18;;;5573:86;;5645:1;5618:30;;;;;;;;;;;:::i;:::-;;;;;;;;5573:86;5686:1;5672:16;;:2;:16;;;5668:86;;5740:1;5711:32;;;;;;;;;;;:::i;:::-;;;;;;;;5668:86;5763:24;5771:4;5777:2;5781:5;5763:7;:24::i;:::-;5494:300;;;:::o;9802:432::-;9931:1;9914:19;;:5;:19;;;9910:89;;9985:1;9956:32;;;;;;;;;;;:::i;:::-;;;;;;;;9910:89;10031:1;10012:21;;:7;:21;;;10008:90;;10084:1;10056:31;;;;;;;;;;;:::i;:::-;;;;;;;;10008:90;10137:5;10107:11;:18;10119:5;10107:18;;;;;;;;;;;;;;;:27;10126:7;10107:27;;;;;;;;;;;;;;;:35;;;;10156:9;10152:76;;;10202:7;10186:31;;10195:5;10186:31;;;10211:5;10186:31;;;;;;:::i;:::-;;;;;;;;10152:76;9802:432;;;;:::o;6109:1107::-;6214:1;6198:18;;:4;:18;;;6194:540;;6350:5;6334:12;;:21;;;;;;;:::i;:::-;;;;;;;;6194:540;;;6386:19;6408:9;:15;6418:4;6408:15;;;;;;;;;;;;;;;;6386:37;;6455:5;6441:11;:19;6437:115;;;6512:4;6518:11;6531:5;6487:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6437:115;6704:5;6690:11;:19;6672:9;:15;6682:4;6672:15;;;;;;;;;;;;;;;:37;;;;6372:362;6194:540;6762:1;6748:16;;:2;:16;;;6744:425;;6927:5;6911:12;;:21;;;;;;;;;;;6744:425;;;7139:5;7122:9;:13;7132:2;7122:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6744:425;7199:2;7184:25;;7193:4;7184:25;;;7203:5;7184:25;;;;;;:::i;:::-;;;;;;;;6109:1107;;;:::o;7:99:5:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:474::-;5149:6;5157;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5459:2;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5430:118;5081:474;;;;;:::o;5561:180::-;5609:77;5606:1;5599:88;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;5747:320;5791:6;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:81;;5952:4;5944:6;5940:17;5930:27;;5886:81;6014:2;6006:6;6003:14;5983:18;5980:38;5977:84;;6033:18;;:::i;:::-;5977:84;5798:269;5747:320;;;:::o;6073:118::-;6160:24;6178:5;6160:24;:::i;:::-;6155:3;6148:37;6073:118;;:::o;6197:442::-;6346:4;6384:2;6373:9;6369:18;6361:26;;6397:71;6465:1;6454:9;6450:17;6441:6;6397:71;:::i;:::-;6478:72;6546:2;6535:9;6531:18;6522:6;6478:72;:::i;:::-;6560;6628:2;6617:9;6613:18;6604:6;6560:72;:::i;:::-;6197:442;;;;;;:::o;6645:222::-;6738:4;6776:2;6765:9;6761:18;6753:26;;6789:71;6857:1;6846:9;6842:17;6833:6;6789:71;:::i;:::-;6645:222;;;;:::o;6873:180::-;6921:77;6918:1;6911:88;7018:4;7015:1;7008:15;7042:4;7039:1;7032:15;7059:191;7099:3;7118:20;7136:1;7118:20;:::i;:::-;7113:25;;7152:20;7170:1;7152:20;:::i;:::-;7147:25;;7195:1;7192;7188:9;7181:16;;7216:3;7213:1;7210:10;7207:36;;;7223:18;;:::i;:::-;7207:36;7059:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "710600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "338",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_approve(address,address,uint256,bool)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1106,
									"end": 10995,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1816,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "F"
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "PUSH",
									"source": 1,
									"value": "7772617056657374696E67313135350000000000000000000000000000000000"
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1661,
									"end": 1686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1661,
									"end": 1686,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "5756313135350000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1703,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1696,
									"end": 1714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1696,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1780,
									"end": 1792,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1780,
									"end": 1790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1780,
									"end": 1790,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1780,
									"end": 1790,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 1792,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1780,
									"end": 1792,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 1792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 1792,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1780,
									"end": 1792,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1794,
									"end": 1807,
									"name": "PUSH",
									"source": 1,
									"value": "E8D4A51000"
								},
								{
									"begin": 1774,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1774,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1774,
									"end": 1779,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7559,
									"end": 7767,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7559,
									"end": 7767,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7648,
									"end": 7649,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7629,
									"end": 7650,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7629,
									"end": 7650,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7629,
									"end": 7636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7629,
									"end": 7650,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7629,
									"end": 7650,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7629,
									"end": 7650,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7625,
									"end": 7716,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7625,
									"end": 7716,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7702,
									"end": 7703,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7673,
									"end": 7705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7673,
									"end": 7705,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7625,
									"end": 7716,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 7625,
									"end": 7716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7725,
									"end": 7760,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7741,
									"end": 7742,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7745,
									"end": 7752,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7754,
									"end": 7759,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7725,
									"end": 7732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7725,
									"end": 7732,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7725,
									"end": 7732,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7725,
									"end": 7760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7725,
									"end": 7760,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7725,
									"end": 7760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7725,
									"end": 7760,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7725,
									"end": 7760,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7559,
									"end": 7767,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7559,
									"end": 7767,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7559,
									"end": 7767,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6109,
									"end": 7216,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 6109,
									"end": 7216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6215,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6198,
									"end": 6216,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6198,
									"end": 6216,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6198,
									"end": 6202,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6198,
									"end": 6216,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6198,
									"end": 6216,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6198,
									"end": 6216,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6194,
									"end": 6734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6194,
									"end": 6734,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6350,
									"end": 6355,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6346,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6334,
									"end": 6346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6334,
									"end": 6355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6194,
									"end": 6734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6194,
									"end": 6734,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6194,
									"end": 6734,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6194,
									"end": 6734,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6405,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6408,
									"end": 6417,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6418,
									"end": 6422,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6408,
									"end": 6423,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6423,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6386,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6455,
									"end": 6460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6441,
									"end": 6452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6441,
									"end": 6460,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6437,
									"end": 6552,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6437,
									"end": 6552,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6437,
									"end": 6552,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6512,
									"end": 6516,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6518,
									"end": 6529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6531,
									"end": 6536,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6487,
									"end": 6537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6487,
									"end": 6537,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6437,
									"end": 6552,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6437,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6704,
									"end": 6709,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6701,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6690,
									"end": 6709,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6682,
									"end": 6686,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6687,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6709,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6709,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6709,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6709,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6372,
									"end": 6734,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6194,
									"end": 6734,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6194,
									"end": 6734,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6762,
									"end": 6763,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6748,
									"end": 6764,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6748,
									"end": 6764,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6748,
									"end": 6750,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6748,
									"end": 6764,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6748,
									"end": 6764,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6748,
									"end": 6764,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6744,
									"end": 7169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6744,
									"end": 7169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6927,
									"end": 6932,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6923,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6911,
									"end": 6923,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6911,
									"end": 6932,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6744,
									"end": 7169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6744,
									"end": 7169,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6744,
									"end": 7169,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6744,
									"end": 7169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7139,
									"end": 7144,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7131,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7132,
									"end": 7134,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7135,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7122,
									"end": 7144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6744,
									"end": 7169,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6744,
									"end": 7169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7199,
									"end": 7201,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7193,
									"end": 7197,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7203,
									"end": 7208,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7184,
									"end": 7209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7184,
									"end": 7209,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6109,
									"end": 7216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6109,
									"end": 7216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6109,
									"end": 7216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6109,
									"end": 7216,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 5,
									"value": "94"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "95"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 5,
									"value": "95"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 5,
									"value": "91"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "103"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 5,
									"value": "103"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "104"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "105"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 5,
									"value": "105"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 5,
									"value": "104"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "106"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 5,
									"value": "106"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "107"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 5,
									"value": "107"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "109"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "110"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 5,
									"value": "110"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "108"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 5,
									"value": "109"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 5,
									"value": "113"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "113"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "117"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 5,
									"value": "117"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 5,
									"value": "108"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "122"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 5,
									"value": "122"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "124"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 5,
									"value": "124"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "127"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 5,
									"value": "127"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "128"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 5,
									"value": "128"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "129"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "130"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 5,
									"value": "130"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 5,
									"value": "129"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "132"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 5,
									"value": "132"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "134"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 5,
									"value": "134"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "138"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 5,
									"value": "138"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1106,
									"end": 10995,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab07f09659176918b4352351864b373b7ae6b7d553d4037412f2cdb08c20161d64736f6c63430008190033",
									".code": [
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 10995,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1881,
											"end": 1970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1881,
											"end": 1970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4099,
											"end": 4285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4099,
											"end": 4285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2950,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2950,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4877,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4877,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4877,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2809,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2809,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3105,
											"end": 3221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3105,
											"end": 3221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3105,
											"end": 3221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2083,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2083,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3416,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3416,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3416,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3652,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3652,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3652,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1939,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1958,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1951,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1951,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4204,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4204,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4188,
											"end": 4216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4188,
											"end": 4216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4235,
											"end": 4240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4242,
											"end": 4249,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4257,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4226,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4278,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4267,
											"end": 4278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3028,
											"end": 3040,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 4995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4998,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4998,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4998,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 5010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 5010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5036,
											"end": 5040,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5051,
											"end": 5056,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5020,
											"end": 5057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5057,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5020,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5077,
											"end": 5081,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5085,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5092,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5067,
											"end": 5093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5093,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5067,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5114,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5103,
											"end": 5114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2875,
											"end": 2883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2155,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2155,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3517,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3556,
											"end": 3558,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3539,
											"end": 3566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3566,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3539,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3576,
											"end": 3587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3775,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3785,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8827,
											"end": 8955,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8827,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8920,
											"end": 8925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 8934,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8947,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8911,
											"end": 8919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8911,
											"end": 8948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8948,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8911,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8827,
											"end": 8955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8827,
											"end": 8955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8827,
											"end": 8955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8827,
											"end": 8955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10993,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 10516,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10652,
											"end": 10657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10659,
											"end": 10666,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10642,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 10667,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10642,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10681,
											"end": 10697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10681,
											"end": 10718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10677,
											"end": 10987,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10757,
											"end": 10762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10738,
											"end": 10754,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10738,
											"end": 10762,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10734,
											"end": 10864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10816,
											"end": 10823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10843,
											"end": 10848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10789,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10849,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10864,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 10734,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10905,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10914,
											"end": 10919,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10928,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 10954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10930,
											"end": 10946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10930,
											"end": 10954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10956,
											"end": 10961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10905,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10905,
											"end": 10962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10905,
											"end": 10962,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10905,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10987,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 10677,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10516,
											"end": 10993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5794,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5494,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5573,
											"end": 5659,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5618,
											"end": 5648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5648,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5659,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5573,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5672,
											"end": 5688,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5672,
											"end": 5688,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5688,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5668,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5711,
											"end": 5743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5754,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5668,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5771,
											"end": 5775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5786,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5763,
											"end": 5787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5787,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5763,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5494,
											"end": 5794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9802,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9914,
											"end": 9933,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9914,
											"end": 9933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9914,
											"end": 9919,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9914,
											"end": 9933,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9914,
											"end": 9933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9914,
											"end": 9933,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9910,
											"end": 9999,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9985,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 9956,
											"end": 9988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9988,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9999,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9910,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10012,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10012,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10012,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10008,
											"end": 10098,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 10056,
											"end": 10087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10087,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10098,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10008,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10137,
											"end": 10142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10118,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10119,
											"end": 10124,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10126,
											"end": 10133,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10107,
											"end": 10134,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10142,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10156,
											"end": 10165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10152,
											"end": 10228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10202,
											"end": 10209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10195,
											"end": 10200,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10211,
											"end": 10216,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10186,
											"end": 10217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10186,
											"end": 10217,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10228,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10152,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 10234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 10234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 10234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 10234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 10234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 7216,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6109,
											"end": 7216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6202,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6194,
											"end": 6734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6346,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6334,
											"end": 6346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6334,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6194,
											"end": 6734,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6734,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6194,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6405,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6418,
											"end": 6422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6423,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6455,
											"end": 6460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6460,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6552,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6437,
											"end": 6552,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6487,
											"end": 6537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6487,
											"end": 6537,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6552,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6437,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6709,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6686,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6687,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6709,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6672,
											"end": 6709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6734,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6194,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6748,
											"end": 6764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6764,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6748,
											"end": 6764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6744,
											"end": 7169,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6744,
											"end": 7169,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 7169,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6744,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7139,
											"end": 7144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7132,
											"end": 7134,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 7169,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6744,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7203,
											"end": 7208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7184,
											"end": 7209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 7216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 7216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 7216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 7216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5081,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5609,
											"end": 5686,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5818,
											"end": 5830,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5980,
											"end": 6018,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 6033,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 6067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6178,
											"end": 6183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6160,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6160,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6158,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6386,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6373,
											"end": 6382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6369,
											"end": 6387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6465,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6454,
											"end": 6463,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6450,
											"end": 6467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6447,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6397,
											"end": 6468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6397,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6531,
											"end": 6549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6478,
											"end": 6550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 6478,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6617,
											"end": 6626,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 6560,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6560,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6738,
											"end": 6742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6765,
											"end": 6774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6855,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6842,
											"end": 6859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6789,
											"end": 6860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 6789,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6645,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6921,
											"end": 6998,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6999,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7023,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7042,
											"end": 7046,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7118,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7152,
											"end": 7172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7216,
											"end": 7219,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7210,
											"end": 7220,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 7223,
											"end": 7241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/interfaces/draft-IERC6093.sol",
								"contracts/token/ERC20/ERC20.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x7e960fc24e14fe63ab773497aedb039050b57bb1d7436d477170c9b0c045537e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5fa1ec1d0b89732d17e6ff15c4dbad74b722f72f65c67ef7a2da43714ab443\",\"dweb:/ipfs/QmZfjbSkf3Pv3LWc65vgNm4yFbAosNkkqW7VNeNcsPrYXb\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							787
						],
						"ERC20": [
							653
						],
						"IERC20": [
							731
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							757
						]
					},
					"id": 654,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 732,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 731,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 758,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 757,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 788,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 787,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1124:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 787,
										"src": "1124:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1124:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1133:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 731,
										"src": "1133:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1141:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 757,
										"src": "1141:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1141:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1157:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1157:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1157:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 653,
							"linearizedBaseContracts": [
								653,
								41,
								757,
								731,
								787
							],
							"name": "ERC20",
							"nameLocation": "1115:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1220:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "1176:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1192:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1184:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1176:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1203:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1308:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "1236:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1252:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1244:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1236:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1279:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1271:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1263:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1290:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1342:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "1326:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1326:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1376:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "1361:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1361:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1402:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "1387:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1387:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1606:210:1",
										"statements": [
											{
												"expression": {
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 175,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1661:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "7772617056657374696e6731313535",
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_11035753bf49fefdcc99a62fd92b433e2ec8cc525fcf531282e6d1e6b498c5d7",
															"typeString": "literal_string \"wrapVesting1155\""
														},
														"value": "wrapVesting1155"
													},
													"src": "1661:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "1661:25:1"
											},
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1696:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "575631313535",
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1706:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_ee6e8413b5443d88cbd292d06134dd922d45a71697f70d14a4b27aa67ee60796",
															"typeString": "literal_string \"WV1155\""
														},
														"value": "WV1155"
													},
													"src": "1696:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1696:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 184,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "1780:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1780:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030303030303030303030",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1794:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1000000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															}
														],
														"id": 183,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1774:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1774:34:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1416:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 190,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1603:2:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1606:0:1"
									},
									"scope": 653,
									"src": "1592:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										744
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "1941:29:1",
										"statements": [
											{
												"expression": {
													"id": 196,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1958:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 195,
												"id": 197,
												"nodeType": "Return",
												"src": "1951:12:1"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1822:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1890:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1926:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1926:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:15:1"
									},
									"scope": 653,
									"src": "1881:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										750
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2145:31:1",
										"statements": [
											{
												"expression": {
													"id": 205,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2162:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 204,
												"id": 206,
												"nodeType": "Return",
												"src": "2155:14:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1976:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2092:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2098:2:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2130:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 202,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2130:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:15:1"
									},
									"scope": 653,
									"src": "2083:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										756
									],
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2865:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "36",
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2882:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6_by_1",
														"typeString": "int_const 6"
													},
													"value": "6"
												},
												"functionReturnParameters": 213,
												"id": 215,
												"nodeType": "Return",
												"src": "2875:8:1"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "2182:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2818:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2826:2:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2858:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 211,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2858:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:7:1"
									},
									"scope": 653,
									"src": "2809:81:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										680
									],
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "3011:36:1",
										"statements": [
											{
												"expression": {
													"id": 223,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3028:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 222,
												"id": 224,
												"nodeType": "Return",
												"src": "3021:19:1"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2896:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2959:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2970:2:1"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3002:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3001:9:1"
									},
									"scope": 653,
									"src": "2950:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										688
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3179:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 234,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3196:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 236,
													"indexExpression": {
														"id": 235,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "3206:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3196:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 233,
												"id": 237,
												"nodeType": "Return",
												"src": "3189:25:1"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3053:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3114:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3132:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3124:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3124:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3123:17:1"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3170:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3169:9:1"
									},
									"scope": 653,
									"src": "3105:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										698
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "3491:103:1",
										"statements": [
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3509:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "3501:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 249,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3501:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 251,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "3517:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3517:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3501:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "3549:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3556:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 257,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3560:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 254,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "3539:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3539:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "3539:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3583:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 248,
												"id": 261,
												"nodeType": "Return",
												"src": "3576:11:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "3227:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3425:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3434:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3434:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3433:27:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3485:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3485:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:6:1"
									},
									"scope": 653,
									"src": "3416:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										708
									],
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "3741:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 273,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3758:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 275,
														"indexExpression": {
															"id": 274,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3770:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3758:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 277,
													"indexExpression": {
														"id": 276,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3777:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3758:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 272,
												"id": 278,
												"nodeType": "Return",
												"src": "3751:34:1"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "3600:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3661:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3679:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3671:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3671:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3694:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3686:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3670:32:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3732:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3731:9:1"
									},
									"scope": 653,
									"src": "3652:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										718
									],
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "4178:107:1",
										"statements": [
											{
												"assignments": [
													291
												],
												"declarations": [
													{
														"constant": false,
														"id": 291,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4196:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "4188:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 290,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4188:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 292,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "4204:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4204:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4188:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "4235:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4242:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "4251:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															544,
															604
														],
														"referencedDeclaration": 544,
														"src": "4226:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4226:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "4226:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4274:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 289,
												"id": 302,
												"nodeType": "Return",
												"src": "4267:11:1"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "3798:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4108:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4124:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4116:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4141:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4133:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4115:32:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "4172:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4172:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:6:1"
									},
									"scope": 653,
									"src": "4099:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										730
									],
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "4970:151:1",
										"statements": [
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4988:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "4980:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4980:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "4998:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4980:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 322,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5036:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 323,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5042:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5051:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 321,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "5020:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "5020:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5077:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5083:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5087:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "5067:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5067:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "5067:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5110:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 315,
												"id": 334,
												"nodeType": "Return",
												"src": "5103:11:1"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "4291:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4886:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4907:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4899:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4921:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4913:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4913:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4933:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4925:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:41:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4964:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4964:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:6:1"
									},
									"scope": 653,
									"src": "4877:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "5563:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 346,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5577:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5593:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5585:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 347,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5585:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5585:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5577:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 360,
												"nodeType": "IfStatement",
												"src": "5573:86:1",
												"trueBody": {
													"id": 359,
													"nodeType": "Block",
													"src": "5597:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5645:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5637:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 353,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5637:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5637:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 352,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5618:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5618:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 358,
															"nodeType": "RevertStatement",
															"src": "5611:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 361,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5672:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5686:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5678:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 362,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5678:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5678:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5672:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 375,
												"nodeType": "IfStatement",
												"src": "5668:86:1",
												"trueBody": {
													"id": 374,
													"nodeType": "Block",
													"src": "5690:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5740:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5732:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 368,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5732:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5732:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 367,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5711:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5711:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 373,
															"nodeType": "RevertStatement",
															"src": "5704:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5771:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5777:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "5781:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "5763:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5763:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "5763:24:1"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "5127:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5503:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5521:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5513:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5513:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5535:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5527:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5527:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5547:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5539:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5512:41:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5563:0:1"
									},
									"scope": 653,
									"src": "5494:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "6184:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6198:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6214:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6206:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6206:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6206:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6198:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "6372:362:1",
													"statements": [
														{
															"assignments": [
																405
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 405,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6394:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 430,
																	"src": "6386:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6386:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 409,
															"initialValue": {
																"baseExpression": {
																	"id": 406,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6408:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 408,
																"indexExpression": {
																	"id": 407,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "6418:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6408:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6386:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 410,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "6441:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 411,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "6455:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6441:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 420,
															"nodeType": "IfStatement",
															"src": "6437:115:1",
															"trueBody": {
																"id": 419,
																"nodeType": "Block",
																"src": "6462:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 414,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 386,
																					"src": "6512:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 415,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 405,
																					"src": "6518:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 416,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 390,
																					"src": "6531:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 413,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6487:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6487:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 418,
																		"nodeType": "RevertStatement",
																		"src": "6480:57:1"
																	}
																]
															}
														},
														{
															"id": 429,
															"nodeType": "UncheckedBlock",
															"src": "6565:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 421,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6672:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 423,
																			"indexExpression": {
																				"id": 422,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "6682:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6672:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 424,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 405,
																				"src": "6690:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 425,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6704:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6690:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6672:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 428,
																	"nodeType": "ExpressionStatement",
																	"src": "6672:37:1"
																}
															]
														}
													]
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "6194:540:1",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "6218:148:1",
													"statements": [
														{
															"expression": {
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 399,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6334:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 400,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "6350:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6334:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 402,
															"nodeType": "ExpressionStatement",
															"src": "6334:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 432,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "6748:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6754:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 433,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6754:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6754:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6748:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "6963:206:1",
													"statements": [
														{
															"id": 450,
															"nodeType": "UncheckedBlock",
															"src": "6977:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 444,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7122:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 446,
																			"indexExpression": {
																				"id": 445,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "7132:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7122:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 447,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "7139:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7122:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 449,
																	"nodeType": "ExpressionStatement",
																	"src": "7122:22:1"
																}
															]
														}
													]
												},
												"id": 452,
												"nodeType": "IfStatement",
												"src": "6744:425:1",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "6766:191:1",
													"statements": [
														{
															"id": 442,
															"nodeType": "UncheckedBlock",
															"src": "6780:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 438,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6911:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 439,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6927:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6911:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 441,
																	"nodeType": "ExpressionStatement",
																	"src": "6911:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 454,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7193:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7199:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7203:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "7184:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7184:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "EmitStatement",
												"src": "7179:30:1"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "5800:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6118:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6134:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "6126:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6126:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6148:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "6140:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6140:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6160:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "6152:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6125:41:1"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6184:0:1"
									},
									"scope": 653,
									"src": "6109:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "7615:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 468,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "7629:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7648:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7640:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 469,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7640:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7640:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7629:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 482,
												"nodeType": "IfStatement",
												"src": "7625:91:1",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "7652:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7702:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7694:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 475,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7694:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7694:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 474,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7673:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7673:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 480,
															"nodeType": "RevertStatement",
															"src": "7666:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7741:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7733:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 484,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7733:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7733:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7745:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "7754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "7725:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7725:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "7725:35:1"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "7222:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7568:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7582:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "7574:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7574:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7599:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "7591:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7573:32:1"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7615:0:1"
									},
									"scope": 653,
									"src": "7559:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "8141:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "8155:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8174:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8166:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 502,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8166:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8166:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8155:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 515,
												"nodeType": "IfStatement",
												"src": "8151:89:1",
												"trueBody": {
													"id": 514,
													"nodeType": "Block",
													"src": "8178:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 510,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8226:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8218:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 508,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8218:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8218:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 507,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8199:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8199:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 513,
															"nodeType": "RevertStatement",
															"src": "8192:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8257:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8274:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8266:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8266:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8266:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "8278:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "8249:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8249:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "8249:35:1"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "7773:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8094:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8108:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "8100:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8100:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8125:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "8117:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8099:32:1"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8141:0:1"
									},
									"scope": 653,
									"src": "8085:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "8901:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8920:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8927:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "8936:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8943:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 536,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															544,
															604
														],
														"referencedDeclaration": 604,
														"src": "8911:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8911:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "8911:37:1"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "8297:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8836:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8853:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "8845:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8868:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "8860:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8885:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "8877:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8844:47:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8901:0:1"
									},
									"scope": 653,
									"src": "8827:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "9900:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 556,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9914:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9931:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9923:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 557,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9923:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9923:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9914:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "9910:89:1",
												"trueBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "9935:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9985:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9977:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 563,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9977:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9977:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 562,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9956:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9956:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 568,
															"nodeType": "RevertStatement",
															"src": "9949:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 571,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10012:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10031:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10023:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 572,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10023:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10023:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10012:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 585,
												"nodeType": "IfStatement",
												"src": "10008:90:1",
												"trueBody": {
													"id": 584,
													"nodeType": "Block",
													"src": "10035:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10084:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10076:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 578,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10076:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10076:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 577,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10056:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10056:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 583,
															"nodeType": "RevertStatement",
															"src": "10049:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 586,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10107:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 589,
															"indexExpression": {
																"id": 587,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "10119:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10107:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 590,
														"indexExpression": {
															"id": 588,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "10126:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10107:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 591,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "10137:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10107:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "10107:35:1"
											},
											{
												"condition": {
													"id": 594,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 553,
													"src": "10156:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 602,
												"nodeType": "IfStatement",
												"src": "10152:76:1",
												"trueBody": {
													"id": 601,
													"nodeType": "Block",
													"src": "10167:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 596,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10195:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 597,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10202:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 598,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "10211:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 595,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "10186:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10186:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 600,
															"nodeType": "EmitStatement",
															"src": "10181:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "8961:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9811:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9828:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "9820:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9820:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "9835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9860:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "9852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9852:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9872:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "9867:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9867:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9819:63:1"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9900:0:1"
									},
									"scope": 653,
									"src": "9802:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "10605:388:1",
										"statements": [
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10623:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 651,
														"src": "10615:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10615:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 617,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10652:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "10659:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 616,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "10642:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10642:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10615:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "10681:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10706:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 623,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10706:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 622,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10701:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10701:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10715:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10701:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10681:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "10677:310:1",
												"trueBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "10720:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 628,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "10738:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 629,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "10757:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10738:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 638,
															"nodeType": "IfStatement",
															"src": "10734:130:1",
															"trueBody": {
																"id": 637,
																"nodeType": "Block",
																"src": "10764:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 632,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10816:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 633,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "10825:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 634,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 611,
																					"src": "10843:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 631,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10789:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10789:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 636,
																		"nodeType": "RevertStatement",
																		"src": "10782:67:1"
																	}
																]
															}
														},
														{
															"id": 648,
															"nodeType": "UncheckedBlock",
															"src": "10877:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 640,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10914:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 641,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 609,
																				"src": "10921:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 642,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "10930:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 643,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 611,
																					"src": "10949:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10930:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10956:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 639,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				544,
																				604
																			],
																			"referencedDeclaration": 604,
																			"src": "10905:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10905:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 647,
																	"nodeType": "ExpressionStatement",
																	"src": "10905:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "10240:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10525:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10549:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "10541:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10541:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10564:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "10556:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10556:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10581:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "10573:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10540:47:1"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10605:0:1"
									},
									"scope": 653,
									"src": "10516:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 654,
							"src": "1106:9889:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								665,
								674
							]
						}
					],
					"src": "105:10891:1"
				},
				"id": 1
			},
			"contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							731
						]
					},
					"id": 732,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 655,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 656,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 731,
							"linearizedBaseContracts": [
								731
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 665,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 674,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 731,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 731,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 731,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 731,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 731,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 731,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 732,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								665,
								674
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							731
						],
						"IERC20Metadata": [
							757
						]
					},
					"id": 758,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 733,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 758,
							"sourceUnit": 732,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 734,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 731,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 737,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 731,
										"src": "306:6:3"
									},
									"id": 738,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 736,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 757,
							"linearizedBaseContracts": [
								757,
								731
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 757,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 747,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 757,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 756,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 753,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 757,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 758,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								665,
								674
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							787
						]
					},
					"id": 788,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 759,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 760,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 787,
							"linearizedBaseContracts": [
								787
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 765,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 764,
												"id": 767,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 787,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 774,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 773,
												"id": 776,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 787,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 782,
												"id": 784,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 787,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 788,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			}
		}
	}
}