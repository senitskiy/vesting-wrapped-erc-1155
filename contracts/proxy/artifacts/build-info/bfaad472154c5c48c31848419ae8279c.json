{
	"id": "bfaad472154c5c48c31848419ae8279c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Stores the bytecode after address\n            mstore(0x20, 0x5af43d82803e903d91602b57fd5bf3)\n            // implementation address\n            mstore(0x11, implementation)\n            // Packs the first 3 bytes of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0x88, implementation), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Stores the bytecode after address\n            mstore(0x20, 0x5af43d82803e903d91602b57fd5bf3)\n            // implementation address\n            mstore(0x11, implementation)\n            // Packs the first 3 bytes of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0x88, implementation), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/proxy/Clones.sol\":771:5410  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/proxy/Clones.sol\":771:5410  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e947c6f63923264fc1be2b5b5778b06747744c80e07c6e9ef10b64c3e5d1b1a764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e947c6f63923264fc1be2b5b5778b06747744c80e07c6e9ef10b64c3e5d1b1a764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SELFBALANCE 0xC6 0xF6 CODECOPY 0x23 0x26 0x4F 0xC1 0xBE 0x2B JUMPDEST JUMPI PUSH25 0xB06747744C80E07C6E9EF10B64C3E5D1B1A764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "771:4639:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e947c6f63923264fc1be2b5b5778b06747744c80e07c6e9ef10b64c3e5d1b1a764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SELFBALANCE 0xC6 0xF6 CODECOPY 0x23 0x26 0x4F 0xC1 0xBE 0x2B JUMPDEST JUMPI PUSH25 0xB06747744C80E07C6E9EF10B64C3E5D1B1A764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "771:4639:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5410,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e947c6f63923264fc1be2b5b5778b06747744c80e07c6e9ef10b64c3e5d1b1a764736f6c63430008190033",
									".code": [
										{
											"begin": 771,
											"end": 5410,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5410,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5410,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 771,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 5410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 5410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5410,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/proxy/Clones.sol",
								"contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/proxy/Clones.sol\":{\"keccak256\":\"0x43dee2239d21ac5d9affbc5f93fe766b0aaea86145b2fd13c63beccbded073c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://155a189da3d56a207faf151c027dcaeb354de2e8aca40dbd6c73f9db7c480a75\",\"dweb:/ipfs/QmNwzYrBuTeDaoaSRNoqFVuiaXuLsDpbyq2f9KYCaV3QNQ\"]},\"contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality.",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Errors.sol\":314:696  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Errors.sol\":314:696  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205846d806d4ffe0873355211519a51e9f0b7193719b02c8914bfef94128dea41264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205846d806d4ffe0873355211519a51e9f0b7193719b02c8914bfef94128dea41264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC CHAINID 0xD8 MOD 0xD4 SELFDESTRUCT 0xE0 DUP8 CALLER SSTORE 0x21 ISZERO NOT 0xA5 0x1E SWAP16 SIGNEXTEND PUSH18 0x93719B02C8914BFEF94128DEA41264736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "314:382:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205846d806d4ffe0873355211519a51e9f0b7193719b02c8914bfef94128dea41264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC CHAINID 0xD8 MOD 0xD4 SELFDESTRUCT 0xE0 DUP8 CALLER SSTORE 0x21 ISZERO NOT 0xA5 0x1E SWAP16 SIGNEXTEND PUSH18 0x93719B02C8914BFEF94128DEA41264736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "314:382:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 314,
									"end": 696,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205846d806d4ffe0873355211519a51e9f0b7193719b02c8914bfef94128dea41264736f6c63430008190033",
									".code": [
										{
											"begin": 314,
											"end": 696,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 314,
											"end": 696,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 314,
											"end": 696,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 314,
											"end": 696,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 314,
											"end": 696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 696,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 314,
											"end": 696,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/proxy/Clones.sol",
								"contracts/utils/Errors.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality.\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							162
						],
						"Errors": [
							179
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 180,
							"src": "126:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 179,
										"src": "134:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "171:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "Clones",
							"nameLocation": "779:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1064:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 13,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1087:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1103:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 12,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															18,
															63
														],
														"referencedDeclaration": 63,
														"src": "1081:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 11,
												"id": 16,
												"nodeType": "Return",
												"src": "1074:31:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "792:192:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "998:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1012:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1004:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:24:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1054:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1046:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:18:0"
									},
									"scope": 162,
									"src": "989:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1594:757:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 30,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1616:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1608:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 28,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1608:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1608:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1622:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1608:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 33,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1632:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1608:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "IfStatement",
												"src": "1604:123:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "1639:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 40,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1695:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1687:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 38,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1687:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 41,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1687:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 42,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1701:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1687:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 43,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1710:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 35,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "1660:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$179_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1667:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 172,
																	"src": "1660:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1660:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 45,
															"nodeType": "RevertStatement",
															"src": "1653:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1788:463:0",
													"nodeType": "YulBlock",
													"src": "1788:463:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1858:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1858:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1864:32:0",
																		"nodeType": "YulLiteral",
																		"src": "1864:32:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1851:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1851:6:0"
																},
																"nativeSrc": "1851:46:0",
																"nodeType": "YulFunctionCall",
																"src": "1851:46:0"
															},
															"nativeSrc": "1851:46:0",
															"nodeType": "YulExpressionStatement",
															"src": "1851:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1955:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1955:4:0",
																		"type": "",
																		"value": "0x11"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1961:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "1961:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1948:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1948:6:0"
																},
																"nativeSrc": "1948:28:0",
																"nodeType": "YulFunctionCall",
																"src": "1948:28:0"
															},
															"nativeSrc": "1948:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "1948:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2105:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2105:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2118:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2118:4:0",
																						"type": "",
																						"value": "0x88"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2124:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2124:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2114:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2114:3:0"
																				},
																				"nativeSrc": "2114:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2114:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2141:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2141:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2111:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2111:2:0"
																		},
																		"nativeSrc": "2111:79:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2111:79:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2098:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2098:6:0"
																},
																"nativeSrc": "2098:93:0",
																"nodeType": "YulFunctionCall",
																"src": "2098:93:0"
															},
															"nativeSrc": "2098:93:0",
															"nodeType": "YulExpressionStatement",
															"src": "2098:93:0"
														},
														{
															"nativeSrc": "2204:37:0",
															"nodeType": "YulAssignment",
															"src": "2204:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2223:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "2223:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2230:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2230:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2236:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "2216:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2216:6:0"
																},
																"nativeSrc": "2216:25:0",
																"nodeType": "YulFunctionCall",
																"src": "2216:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2204:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "2204:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "1961:14:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2124:14:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "2204:8:0",
														"valueSize": 1
													},
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "2223:5:0",
														"valueSize": 1
													}
												],
												"id": 48,
												"nodeType": "InlineAssembly",
												"src": "1779:472:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2264:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2284:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 50,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2276:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2276:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2264:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 61,
												"nodeType": "IfStatement",
												"src": "2260:85:0",
												"trueBody": {
													"id": 60,
													"nodeType": "Block",
													"src": "2288:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 55,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "2309:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$179_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2316:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "2309:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 59,
															"nodeType": "RevertStatement",
															"src": "2302:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1118:381:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1513:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1527:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1519:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1543:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:39:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1584:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1576:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:18:0"
									},
									"scope": 162,
									"src": "1504:847:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2828:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2864:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 75,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2880:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2886:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 73,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															80,
															127
														],
														"referencedDeclaration": 127,
														"src": "2845:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2845:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 72,
												"id": 78,
												"nodeType": "Return",
												"src": "2838:50:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2357:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2735:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2762:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2754:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2786:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2778:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 67,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:38:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2818:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2810:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:18:0"
									},
									"scope": 162,
									"src": "2726:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "3468:764:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 94,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3490:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																],
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3482:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 92,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3482:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3482:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3496:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3482:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 97,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3506:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3482:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "IfStatement",
												"src": "3478:123:0",
												"trueBody": {
													"id": 110,
													"nodeType": "Block",
													"src": "3513:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 104,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3569:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3561:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 102,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3561:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3561:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3575:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3561:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 107,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 87,
																		"src": "3584:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 99,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "3534:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$179_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3541:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 172,
																	"src": "3534:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 109,
															"nodeType": "RevertStatement",
															"src": "3527:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "3662:470:0",
													"nodeType": "YulBlock",
													"src": "3662:470:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3732:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3732:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3738:32:0",
																		"nodeType": "YulLiteral",
																		"src": "3738:32:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3725:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3725:6:0"
																},
																"nativeSrc": "3725:46:0",
																"nodeType": "YulFunctionCall",
																"src": "3725:46:0"
															},
															"nativeSrc": "3725:46:0",
															"nodeType": "YulExpressionStatement",
															"src": "3725:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3829:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3829:4:0",
																		"type": "",
																		"value": "0x11"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "3835:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "3835:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3822:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3822:6:0"
																},
																"nativeSrc": "3822:28:0",
																"nodeType": "YulFunctionCall",
																"src": "3822:28:0"
															},
															"nativeSrc": "3822:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "3822:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3979:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3979:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3992:4:0",
																						"nodeType": "YulLiteral",
																						"src": "3992:4:0",
																						"type": "",
																						"value": "0x88"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "3998:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "3998:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3988:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3988:3:0"
																				},
																				"nativeSrc": "3988:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3988:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4015:48:0",
																				"nodeType": "YulLiteral",
																				"src": "4015:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3985:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "3985:2:0"
																		},
																		"nativeSrc": "3985:79:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3985:79:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3972:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3972:6:0"
																},
																"nativeSrc": "3972:93:0",
																"nodeType": "YulFunctionCall",
																"src": "3972:93:0"
															},
															"nativeSrc": "3972:93:0",
															"nodeType": "YulExpressionStatement",
															"src": "3972:93:0"
														},
														{
															"nativeSrc": "4078:44:0",
															"nodeType": "YulAssignment",
															"src": "4078:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4098:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4098:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4105:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4105:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4111:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4111:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4117:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4117:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "4090:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "4090:7:0"
																},
																"nativeSrc": "4090:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4090:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "4078:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "4078:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "3835:14:0",
														"valueSize": 1
													},
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "3998:14:0",
														"valueSize": 1
													},
													{
														"declaration": 90,
														"isOffset": false,
														"isSlot": false,
														"src": "4078:8:0",
														"valueSize": 1
													},
													{
														"declaration": 85,
														"isOffset": false,
														"isSlot": false,
														"src": "4117:4:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4098:5:0",
														"valueSize": 1
													}
												],
												"id": 112,
												"nodeType": "InlineAssembly",
												"src": "3653:479:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "4145:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4165:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4157:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4157:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4145:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "IfStatement",
												"src": "4141:85:0",
												"trueBody": {
													"id": 124,
													"nodeType": "Block",
													"src": "4169:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 119,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "4190:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$179_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4197:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "4190:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4190:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 123,
															"nodeType": "RevertStatement",
															"src": "4183:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2901:415:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3330:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3366:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3358:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3398:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3390:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3420:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3412:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3348:83:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3458:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3450:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:18:0"
									},
									"scope": 162,
									"src": "3321:911:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4507:564:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4569:496:0",
													"nodeType": "YulBlock",
													"src": "4569:496:0",
													"statements": [
														{
															"nativeSrc": "4583:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4583:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4600:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4600:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4594:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4594:5:0"
																},
																"nativeSrc": "4594:11:0",
																"nodeType": "YulFunctionCall",
																"src": "4594:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4587:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4587:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4629:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4629:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4634:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4634:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4625:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4625:3:0"
																		},
																		"nativeSrc": "4625:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4625:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4641:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "4641:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4618:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4618:6:0"
																},
																"nativeSrc": "4618:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4618:32:0"
															},
															"nativeSrc": "4618:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "4618:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4674:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4674:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4679:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4679:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4670:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:0"
																		},
																		"nativeSrc": "4670:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:34:0",
																		"nodeType": "YulLiteral",
																		"src": "4686:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4663:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:0"
																},
																"nativeSrc": "4663:58:0",
																"nodeType": "YulFunctionCall",
																"src": "4663:58:0"
															},
															"nativeSrc": "4663:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "4663:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4745:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4745:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4750:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4750:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4741:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:0"
																		},
																		"nativeSrc": "4741:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "4757:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "4757:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4734:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:0"
																},
																"nativeSrc": "4734:38:0",
																"nodeType": "YulFunctionCall",
																"src": "4734:38:0"
															},
															"nativeSrc": "4734:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "4734:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4792:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4792:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4797:42:0",
																		"nodeType": "YulLiteral",
																		"src": "4797:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4785:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4785:6:0"
																},
																"nativeSrc": "4785:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4785:55:0"
															},
															"nativeSrc": "4785:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4785:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4864:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4864:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4869:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4869:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4860:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4860:3:0"
																		},
																		"nativeSrc": "4860:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4860:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4876:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4876:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:0"
																},
																"nativeSrc": "4853:28:0",
																"nodeType": "YulFunctionCall",
																"src": "4853:28:0"
															},
															"nativeSrc": "4853:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "4853:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4905:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4905:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4910:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4910:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4901:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4901:3:0"
																		},
																		"nativeSrc": "4901:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4901:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "4931:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "4931:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4936:4:0",
																						"nodeType": "YulLiteral",
																						"src": "4936:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4927:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4927:3:0"
																				},
																				"nativeSrc": "4927:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4927:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4943:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4943:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "4917:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "4917:9:0"
																		},
																		"nativeSrc": "4917:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4917:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4894:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4894:6:0"
																},
																"nativeSrc": "4894:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4894:55:0"
															},
															"nativeSrc": "4894:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4894:55:0"
														},
														{
															"nativeSrc": "4962:93:0",
															"nodeType": "YulAssignment",
															"src": "4962:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "4993:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "4993:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4998:4:0",
																						"nodeType": "YulLiteral",
																						"src": "4998:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4989:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4989:3:0"
																				},
																				"nativeSrc": "4989:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4989:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5005:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5005:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "4979:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "4979:9:0"
																		},
																		"nativeSrc": "4979:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4979:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5012:42:0",
																		"nodeType": "YulLiteral",
																		"src": "5012:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4975:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:0"
																},
																"nativeSrc": "4975:80:0",
																"nodeType": "YulFunctionCall",
																"src": "4975:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "4962:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "4962:9:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "4641:8:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "4757:14:0",
														"valueSize": 1
													},
													{
														"declaration": 137,
														"isOffset": false,
														"isSlot": false,
														"src": "4962:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "4876:4:0",
														"valueSize": 1
													}
												],
												"id": 139,
												"nodeType": "InlineAssembly",
												"src": "4560:505:0"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "4238:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "4351:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4396:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4388:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4428:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4420:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "4450:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4442:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4378:86:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:19:0"
									},
									"scope": 162,
									"src": "4342:729:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "5320:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5365:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 153,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5381:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 156,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5395:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																],
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5387:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5387:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5387:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 151,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															141,
															161
														],
														"referencedDeclaration": 141,
														"src": "5337:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 150,
												"id": 159,
												"nodeType": "Return",
												"src": "5330:71:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "5077:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5190:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5235:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5227:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5267:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5259:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5217:60:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "5309:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5301:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5300:19:0"
									},
									"scope": 162,
									"src": "5181:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 163,
							"src": "771:4639:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:5311:0"
				},
				"id": 0
			},
			"contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							179
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "59:254:1",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality."
							},
							"fullyImplemented": true,
							"id": 179,
							"linearizedBaseContracts": [
								179
							],
							"name": "Errors",
							"nameLocation": "322:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "335:94:1",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 172,
									"name": "InsufficientBalance",
									"nameLocation": "440:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "468:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "460:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "485:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "477:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:33:1"
									},
									"src": "434:59:1"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "499:89:1",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 175,
									"name": "FailedCall",
									"nameLocation": "599:10:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:1"
									},
									"src": "593:19:1"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "618:46:1",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 178,
									"name": "FailedDeployment",
									"nameLocation": "675:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:1"
									},
									"src": "669:25:1"
								}
							],
							"scope": 180,
							"src": "314:382:1",
							"usedErrors": [
								172,
								175,
								178
							],
							"usedEvents": []
						}
					],
					"src": "33:664:1"
				},
				"id": 1
			}
		}
	}
}