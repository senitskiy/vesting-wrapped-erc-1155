{
	"id": "b52cdee98d7701a3062e8a2fb2842628",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"ManagedVestingWallet/ManagedVestingWallet.sol.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"./VestingWallet.sol\";\n\nimport \"./interfaces/IVestingManager.sol\";\n\n/**\n * @title ManagedVestingWallet\n * @dev This contract derived from @openzeppelin\\VestingWallet and handles the vesting of Eth and ERC20 tokens for a given beneficiary.\n * Start and duration can be configured by VestingManager.\n */\ncontract ManagedVestingWallet is VestingWallet {\n\n    address private _vestingManager;\n    address private _beneficiary;\n\n    address private immutable _factory;\n\n    modifier onlyFactory {\n        require(_factory == msg.sender, \"ManagedVestingWallet: only factory\");\n        _;\n    }\n\n    constructor() {\n        _factory = msg.sender;\n    }\n\n    function start() public view virtual override returns (uint256) {\n        return IVestingManager(_vestingManager).start();\n    }\n\n    function duration() public view virtual override returns (uint256) {\n        return IVestingManager(_vestingManager).duration();\n    }\n\n    function beneficiary() public view virtual override returns (address) {\n        return _beneficiary;\n    }\n\n    function vestingManager() public view returns (address) {\n        return _vestingManager;\n    }\n\n    function initialize(address beneficiary_, address vestingManager_) public onlyFactory returns (bool) {\n        require(vestingManager_ != address(0), \"ManagedVestingWallet: vesting manager is zero address\");\n        require(beneficiary_ != address(0), \"ManagedVestingWallet: beneficiary is zero address\");\n        _vestingManager = vestingManager_;\n        _beneficiary = beneficiary_;\n        return true;\n    }\n}"
			},
			"ManagedVestingWallet/interfaces/IVestingManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ninterface IVestingManager {\n    function start() external view returns (uint64);\n    function duration() external view returns (uint64);\n    function setStart(uint64) external;\n    function setDuration(uint64) external;\n}"
			},
			"ManagedVestingWallet/VestingWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @title VestingWallet\n * @dev This is modified openzeppelin contract - to minimize gas native assets removed.\n * \n * This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens\n * can be given to this contract, which will release the token to the beneficiary following a given vesting schedule.\n * The vesting schedule is customizable through the {vestedAmount} function.\n *\n * Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n * Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n * be immediately releasable.\n */\nabstract contract VestingWallet is Context {\n    event ERC20Released(address indexed token, uint256 amount);\n\n    mapping(address => uint256) private _erc20Released;\n\n    /**\n     * @dev Getter for the beneficiary address.\n     */\n    function beneficiary() public view virtual returns (address);\n\n    /**\n     * @dev Getter for the start timestamp.\n     */\n    function start() public view virtual returns (uint256);\n\n    /**\n     * @dev Getter for the vesting duration.\n     */\n    function duration() public view virtual returns (uint256) ;\n\n    /**\n     * @dev Amount of token already released\n     */\n    function released(address token) public view virtual returns (uint256) {\n        return _erc20Released[token];\n    }\n\n    /**\n     * @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n     * IERC20 contract.\n     */\n    function releasable(address token) public view virtual returns (uint256) {\n        return vestedAmount(token, uint64(block.timestamp)) - released(token);\n    }\n\n    /**\n     * @dev Release the tokens that have already vested.\n     *\n     * Emits a {ERC20Released} event.\n     */\n    function release(address token) public virtual {\n        uint256 amount = releasable(token);\n        _erc20Released[token] += amount;\n        emit ERC20Released(token, amount);\n        SafeERC20.safeTransfer(IERC20(token), beneficiary(), amount);\n    }\n\n    /**\n     * @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\n     */\n    function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {\n        return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp);\n    }\n\n    /**\n     * @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n     * an asset given its total historical allocation.\n     */\n    function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {\n        if (timestamp < start()) {\n            return 0;\n        } else if (timestamp > start() + duration()) {\n            return totalAllocation;\n        } else {\n            return (totalAllocation * (timestamp - start())) / duration();\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"ManagedVestingWallet/ManagedVestingWallet.sol.sol",
								"ManagedVestingWallet/VestingWallet.sol",
								"ManagedVestingWallet/interfaces/IVestingManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"ManagedVestingWallet/ManagedVestingWallet.sol.sol",
								"ManagedVestingWallet/VestingWallet.sol",
								"ManagedVestingWallet/interfaces/IVestingManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ManagedVestingWallet/ManagedVestingWallet.sol.sol": {
				"ManagedVestingWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vestingManager_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract derived from @openzeppelin\\VestingWallet and handles the vesting of Eth and ERC20 tokens for a given beneficiary. Start and duration can be configured by VestingManager.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"beneficiary()": {
								"details": "Getter for the beneficiary address."
							},
							"duration()": {
								"details": "Getter for the vesting duration."
							},
							"releasable(address)": {
								"details": "Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract."
							},
							"release(address)": {
								"details": "Release the tokens that have already vested. Emits a {ERC20Released} event."
							},
							"released(address)": {
								"details": "Amount of token already released"
							},
							"start()": {
								"details": "Getter for the start timestamp."
							},
							"vestedAmount(address,uint64)": {
								"details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
							}
						},
						"title": "ManagedVestingWallet",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":366:1616  contract ManagedVestingWallet is VestingWallet {... */\n  mstore(0x40, 0xa0)\n    /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":657:709  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":692:702  msg.sender */\n  caller\n    /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":681:702  _factory = msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":366:1616  contract ManagedVestingWallet is VestingWallet {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa752a62a6f5fb32dd4e041dbf29a56f1f90fbf8d8356b6069d6d3304e11d2d2e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":366:1616  contract ManagedVestingWallet is VestingWallet {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x810ec23b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x810ec23b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9852595c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa3f8eace\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdb27b8dd\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x19165587\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x38af3eed\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":849:983  function duration() public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2085:2337  function release(address token) public virtual {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":989:1095  function beneficiary() public view virtual override returns (address) {... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1202:1614  function initialize(address beneficiary_, address vestingManager_) public onlyFactory returns (bool) {... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2478:2680  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1540:1656  function released(address token) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1802:1961  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":715:843  function start() public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1101:1196  function vestingManager() public view returns (address) {... */\n    tag_11:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":849:983  function duration() public view virtual override returns (uint256) {... */\n    tag_14:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":907:914  uint256 */\n      0x00\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":949:964  _vestingManager */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":933:974  IVestingManager(_vestingManager).duration */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0fb5a6b4\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":933:976  IVestingManager(_vestingManager).duration() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":926:976  return IVestingManager(_vestingManager).duration() */\n      0xffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":849:983  function duration() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2085:2337  function release(address token) public virtual {... */\n    tag_20:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2142:2156  uint256 amount */\n      0x00\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2159:2176  releasable(token) */\n      tag_56\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2170:2175  token */\n      dup3\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2159:2169  releasable */\n      tag_42\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2159:2176  releasable(token) */\n      jump\t// in\n    tag_56:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2142:2176  uint256 amount = releasable(token) */\n      swap1\n      pop\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2211:2217  amount */\n      dup1\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2186:2200  _erc20Released */\n      0x00\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2186:2207  _erc20Released[token] */\n      dup1\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2201:2206  token */\n      dup5\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2186:2207  _erc20Released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2186:2217  _erc20Released[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2246:2251  token */\n      dup2\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2232:2260  ERC20Released(token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2253:2259  amount */\n      dup3\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2232:2260  ERC20Released(token, amount) */\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2270:2330  SafeERC20.safeTransfer(IERC20(token), beneficiary(), amount) */\n      tag_60\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2300:2305  token */\n      dup3\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2308:2321  beneficiary() */\n      tag_61\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2308:2319  beneficiary */\n      tag_22\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2308:2321  beneficiary() */\n      jump\t// in\n    tag_61:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2323:2329  amount */\n      dup4\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2270:2292  SafeERC20.safeTransfer */\n      tag_62\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2270:2330  SafeERC20.safeTransfer(IERC20(token), beneficiary(), amount) */\n      jump\t// in\n    tag_60:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2132:2337  {... */\n      pop\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2085:2337  function release(address token) public virtual {... */\n      pop\n      jump\t// out\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":989:1095  function beneficiary() public view virtual override returns (address) {... */\n    tag_22:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1050:1057  address */\n      0x00\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1076:1088  _beneficiary */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1069:1088  return _beneficiary */\n      swap1\n      pop\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":989:1095  function beneficiary() public view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1202:1614  function initialize(address beneficiary_, address vestingManager_) public onlyFactory returns (bool) {... */\n    tag_28:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1297:1301  bool */\n      0x00\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":584:594  msg.sender */\n      caller\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":572:594  _factory == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":572:580  _factory */\n      immutable(\"0xa752a62a6f5fb32dd4e041dbf29a56f1f90fbf8d8356b6069d6d3304e11d2d2e\")\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":572:594  _factory == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":564:633  require(_factory == msg.sender, \"ManagedVestingWallet: only factory\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1348:1349  0 */\n      0x00\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1321:1350  vestingManager_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1321:1336  vestingManager_ */\n      dup3\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1321:1350  vestingManager_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1313:1408  require(vestingManager_ != address(0), \"ManagedVestingWallet: vesting manager is zero address\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1450:1451  0 */\n      0x00\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1426:1452  beneficiary_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1426:1438  beneficiary_ */\n      dup4\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1426:1452  beneficiary_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1418:1506  require(beneficiary_ != address(0), \"ManagedVestingWallet: beneficiary is zero address\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1534:1549  vestingManager_ */\n      dup2\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1516:1531  _vestingManager */\n      0x01\n      0x00\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1516:1549  _vestingManager = vestingManager_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1574:1586  beneficiary_ */\n      dup3\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1559:1571  _beneficiary */\n      0x02\n      0x00\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1559:1586  _beneficiary = beneficiary_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1603:1607  true */\n      0x01\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1596:1607  return true */\n      swap1\n      pop\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1202:1614  function initialize(address beneficiary_, address vestingManager_) public onlyFactory returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2478:2680  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2562:2569  uint256 */\n      0x00\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2588:2673  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      tag_76\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2646:2661  released(token) */\n      tag_77\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2655:2660  token */\n      dup5\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2646:2654  released */\n      tag_38\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2646:2661  released(token) */\n      jump\t// in\n    tag_77:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2612:2617  token */\n      dup5\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2605:2628  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2637:2641  this */\n      address\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2605:2643  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_78:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2605:2661  IERC20(token).balanceOf(address(this)) + released(token) */\n      tag_83\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_83:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2663:2672  timestamp */\n      dup4\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2588:2604  _vestingSchedule */\n      tag_84\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2588:2673  _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      jump\t// in\n    tag_76:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2581:2673  return _vestingSchedule(IERC20(token).balanceOf(address(this)) + released(token), timestamp) */\n      swap1\n      pop\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2478:2680  function vestedAmount(address token, uint64 timestamp) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1540:1656  function released(address token) public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1602:1609  uint256 */\n      0x00\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1628:1642  _erc20Released */\n      dup1\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1628:1649  _erc20Released[token] */\n      0x00\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1643:1648  token */\n      dup4\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1628:1649  _erc20Released[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1621:1649  return _erc20Released[token] */\n      swap1\n      pop\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1540:1656  function released(address token) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1802:1961  function releasable(address token) public view virtual returns (uint256) {... */\n    tag_42:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1866:1873  uint256 */\n      0x00\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1939:1954  released(token) */\n      tag_87\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1948:1953  token */\n      dup3\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1939:1947  released */\n      tag_38\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1939:1954  released(token) */\n      jump\t// in\n    tag_87:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1892:1936  vestedAmount(token, uint64(block.timestamp)) */\n      tag_88\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1905:1910  token */\n      dup4\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1919:1934  block.timestamp */\n      timestamp\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1892:1904  vestedAmount */\n      tag_34\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1892:1936  vestedAmount(token, uint64(block.timestamp)) */\n      jump\t// in\n    tag_88:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1892:1954  vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1885:1954  return vestedAmount(token, uint64(block.timestamp)) - released(token) */\n      swap1\n      pop\n        /* \"ManagedVestingWallet/VestingWallet.sol\":1802:1961  function releasable(address token) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":715:843  function start() public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":770:777  uint256 */\n      0x00\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":812:827  _vestingManager */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":796:834  IVestingManager(_vestingManager).start */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbe9a6555\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":796:836  IVestingManager(_vestingManager).start() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_94:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":789:836  return IVestingManager(_vestingManager).start() */\n      0xffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":715:843  function start() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1101:1196  function vestingManager() public view returns (address) {... */\n    tag_48:\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1148:1155  address */\n      0x00\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1174:1189  _vestingManager */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1167:1189  return _vestingManager */\n      swap1\n      pop\n        /* \"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":1101:1196  function vestingManager() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2875:3241  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_84:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2975:2982  uint256 */\n      0x00\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3010:3017  start() */\n      tag_102\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3010:3015  start */\n      tag_45\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3010:3017  start() */\n      jump\t// in\n    tag_102:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2998:3007  timestamp */\n      dup3\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2998:3017  timestamp < start() */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2994:3235  if (timestamp < start()) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3040:3041  0 */\n      0x00\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3033:3041  return 0 */\n      swap1\n      pop\n      jump(tag_101)\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2994:3235  if (timestamp < start()) {... */\n    tag_103:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3084:3094  duration() */\n      tag_105\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3084:3092  duration */\n      tag_14\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3084:3094  duration() */\n      jump\t// in\n    tag_105:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3074:3081  start() */\n      tag_106\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3074:3079  start */\n      tag_45\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3074:3081  start() */\n      jump\t// in\n    tag_106:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3074:3094  start() + duration() */\n      tag_107\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_107:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3062:3071  timestamp */\n      dup3\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3062:3094  timestamp > start() + duration() */\n      0xffffffffffffffff\n      and\n      gt\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3058:3235  if (timestamp > start() + duration()) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3117:3132  totalAllocation */\n      dup3\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3110:3132  return totalAllocation */\n      swap1\n      pop\n      jump(tag_101)\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3058:3235  if (timestamp > start() + duration()) {... */\n    tag_108:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3214:3224  duration() */\n      tag_110\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3214:3222  duration */\n      tag_14\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3214:3224  duration() */\n      jump\t// in\n    tag_110:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3202:3209  start() */\n      tag_111\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3202:3207  start */\n      tag_45\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3202:3209  start() */\n      jump\t// in\n    tag_111:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3190:3199  timestamp */\n      dup4\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3190:3209  timestamp - start() */\n      0xffffffffffffffff\n      and\n      tag_112\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_112:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3171:3186  totalAllocation */\n      dup5\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3171:3210  totalAllocation * (timestamp - start()) */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3170:3224  (totalAllocation * (timestamp - start())) / duration() */\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"ManagedVestingWallet/VestingWallet.sol\":3163:3224  return (totalAllocation * (timestamp - start())) / duration() */\n      swap1\n      pop\n        /* \"ManagedVestingWallet/VestingWallet.sol\":2875:3241  function _vestingSchedule(uint256 totalAllocation, uint64 timestamp) internal view virtual returns (uint256) {... */\n    tag_101:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_119\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_120\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_126\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_135\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_134)\n    tag_135:\n      0x60\n      swap2\n      pop\n    tag_134:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_136\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_141\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_142)\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_143\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_138)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_138:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_149:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_150:\n        /* \"#utility.yul\":177:201   */\n      tag_185\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_149\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_16:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_187\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_150\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_152:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_154:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_155:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_193\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_154\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_156:\n        /* \"#utility.yul\":1076:1100   */\n      tag_195\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_155\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_196:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_157:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_198\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_156\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_19:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_201\n      tag_152\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1352:1471   */\n    tag_200:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_202\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_157\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_158:\n        /* \"#utility.yul\":1698:1722   */\n      tag_204\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_155\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_24:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_206\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_158\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2437   */\n    tag_27:\n        /* \"#utility.yul\":2031:2037   */\n      0x00\n        /* \"#utility.yul\":2039:2045   */\n      dup1\n        /* \"#utility.yul\":2088:2090   */\n      0x40\n        /* \"#utility.yul\":2076:2085   */\n      dup4\n        /* \"#utility.yul\":2067:2074   */\n      dup6\n        /* \"#utility.yul\":2063:2086   */\n      sub\n        /* \"#utility.yul\":2059:2091   */\n      slt\n        /* \"#utility.yul\":2056:2175   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2094:2173   */\n      tag_209\n      tag_152\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2056:2175   */\n    tag_208:\n        /* \"#utility.yul\":2214:2215   */\n      0x00\n        /* \"#utility.yul\":2239:2292   */\n      tag_210\n        /* \"#utility.yul\":2284:2291   */\n      dup6\n        /* \"#utility.yul\":2275:2281   */\n      dup3\n        /* \"#utility.yul\":2264:2273   */\n      dup7\n        /* \"#utility.yul\":2260:2282   */\n      add\n        /* \"#utility.yul\":2239:2292   */\n      tag_157\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2229:2292   */\n      swap3\n      pop\n        /* \"#utility.yul\":2185:2302   */\n      pop\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2367:2420   */\n      tag_211\n        /* \"#utility.yul\":2412:2419   */\n      dup6\n        /* \"#utility.yul\":2403:2409   */\n      dup3\n        /* \"#utility.yul\":2392:2401   */\n      dup7\n        /* \"#utility.yul\":2388:2410   */\n      add\n        /* \"#utility.yul\":2367:2420   */\n      tag_157\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2357:2420   */\n      swap2\n      pop\n        /* \"#utility.yul\":2312:2430   */\n      pop\n        /* \"#utility.yul\":1963:2437   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2533   */\n    tag_159:\n        /* \"#utility.yul\":2477:2484   */\n      0x00\n        /* \"#utility.yul\":2520:2525   */\n      dup2\n        /* \"#utility.yul\":2513:2526   */\n      iszero\n        /* \"#utility.yul\":2506:2527   */\n      iszero\n        /* \"#utility.yul\":2495:2527   */\n      swap1\n      pop\n        /* \"#utility.yul\":2443:2533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:2648   */\n    tag_160:\n        /* \"#utility.yul\":2620:2641   */\n      tag_214\n        /* \"#utility.yul\":2635:2640   */\n      dup2\n        /* \"#utility.yul\":2620:2641   */\n      tag_159\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2615:2618   */\n      dup3\n        /* \"#utility.yul\":2608:2642   */\n      mstore\n        /* \"#utility.yul\":2539:2648   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2654:2864   */\n    tag_30:\n        /* \"#utility.yul\":2741:2745   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2768:2777   */\n      dup3\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2756:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2792:2857   */\n      tag_216\n        /* \"#utility.yul\":2854:2855   */\n      0x00\n        /* \"#utility.yul\":2843:2852   */\n      dup4\n        /* \"#utility.yul\":2839:2856   */\n      add\n        /* \"#utility.yul\":2830:2836   */\n      dup5\n        /* \"#utility.yul\":2792:2857   */\n      tag_160\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2654:2864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2870:2971   */\n    tag_161:\n        /* \"#utility.yul\":2906:2913   */\n      0x00\n        /* \"#utility.yul\":2946:2964   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2939:2944   */\n      dup3\n        /* \"#utility.yul\":2935:2965   */\n      and\n        /* \"#utility.yul\":2924:2965   */\n      swap1\n      pop\n        /* \"#utility.yul\":2870:2971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2977:3097   */\n    tag_162:\n        /* \"#utility.yul\":3049:3072   */\n      tag_219\n        /* \"#utility.yul\":3066:3071   */\n      dup2\n        /* \"#utility.yul\":3049:3072   */\n      tag_161\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3042:3047   */\n      dup2\n        /* \"#utility.yul\":3039:3073   */\n      eq\n        /* \"#utility.yul\":3029:3091   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":3087:3088   */\n      0x00\n        /* \"#utility.yul\":3084:3085   */\n      dup1\n        /* \"#utility.yul\":3077:3089   */\n      revert\n        /* \"#utility.yul\":3029:3091   */\n    tag_220:\n        /* \"#utility.yul\":2977:3097   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3103:3240   */\n    tag_163:\n        /* \"#utility.yul\":3148:3153   */\n      0x00\n        /* \"#utility.yul\":3186:3192   */\n      dup2\n        /* \"#utility.yul\":3173:3193   */\n      calldataload\n        /* \"#utility.yul\":3164:3193   */\n      swap1\n      pop\n        /* \"#utility.yul\":3202:3234   */\n      tag_222\n        /* \"#utility.yul\":3228:3233   */\n      dup2\n        /* \"#utility.yul\":3202:3234   */\n      tag_162\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3103:3240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3246:3718   */\n    tag_33:\n        /* \"#utility.yul\":3313:3319   */\n      0x00\n        /* \"#utility.yul\":3321:3327   */\n      dup1\n        /* \"#utility.yul\":3370:3372   */\n      0x40\n        /* \"#utility.yul\":3358:3367   */\n      dup4\n        /* \"#utility.yul\":3349:3356   */\n      dup6\n        /* \"#utility.yul\":3345:3368   */\n      sub\n        /* \"#utility.yul\":3341:3373   */\n      slt\n        /* \"#utility.yul\":3338:3457   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":3376:3455   */\n      tag_225\n      tag_152\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3338:3457   */\n    tag_224:\n        /* \"#utility.yul\":3496:3497   */\n      0x00\n        /* \"#utility.yul\":3521:3574   */\n      tag_226\n        /* \"#utility.yul\":3566:3573   */\n      dup6\n        /* \"#utility.yul\":3557:3563   */\n      dup3\n        /* \"#utility.yul\":3546:3555   */\n      dup7\n        /* \"#utility.yul\":3542:3564   */\n      add\n        /* \"#utility.yul\":3521:3574   */\n      tag_157\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3511:3574   */\n      swap3\n      pop\n        /* \"#utility.yul\":3467:3584   */\n      pop\n        /* \"#utility.yul\":3623:3625   */\n      0x20\n        /* \"#utility.yul\":3649:3701   */\n      tag_227\n        /* \"#utility.yul\":3693:3700   */\n      dup6\n        /* \"#utility.yul\":3684:3690   */\n      dup3\n        /* \"#utility.yul\":3673:3682   */\n      dup7\n        /* \"#utility.yul\":3669:3691   */\n      add\n        /* \"#utility.yul\":3649:3701   */\n      tag_163\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3639:3701   */\n      swap2\n      pop\n        /* \"#utility.yul\":3594:3711   */\n      pop\n        /* \"#utility.yul\":3246:3718   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3724:3865   */\n    tag_164:\n        /* \"#utility.yul\":3780:3785   */\n      0x00\n        /* \"#utility.yul\":3811:3817   */\n      dup2\n        /* \"#utility.yul\":3805:3818   */\n      mload\n        /* \"#utility.yul\":3796:3818   */\n      swap1\n      pop\n        /* \"#utility.yul\":3827:3859   */\n      tag_229\n        /* \"#utility.yul\":3853:3858   */\n      dup2\n        /* \"#utility.yul\":3827:3859   */\n      tag_162\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3724:3865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3871:4220   */\n    tag_54:\n        /* \"#utility.yul\":3940:3946   */\n      0x00\n        /* \"#utility.yul\":3989:3991   */\n      0x20\n        /* \"#utility.yul\":3977:3986   */\n      dup3\n        /* \"#utility.yul\":3968:3975   */\n      dup5\n        /* \"#utility.yul\":3964:3987   */\n      sub\n        /* \"#utility.yul\":3960:3992   */\n      slt\n        /* \"#utility.yul\":3957:4076   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":3995:4074   */\n      tag_232\n      tag_152\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3957:4076   */\n    tag_231:\n        /* \"#utility.yul\":4115:4116   */\n      0x00\n        /* \"#utility.yul\":4140:4203   */\n      tag_233\n        /* \"#utility.yul\":4195:4202   */\n      dup5\n        /* \"#utility.yul\":4186:4192   */\n      dup3\n        /* \"#utility.yul\":4175:4184   */\n      dup6\n        /* \"#utility.yul\":4171:4193   */\n      add\n        /* \"#utility.yul\":4140:4203   */\n      tag_164\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4130:4203   */\n      swap2\n      pop\n        /* \"#utility.yul\":4086:4213   */\n      pop\n        /* \"#utility.yul\":3871:4220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4226:4406   */\n    tag_165:\n        /* \"#utility.yul\":4274:4351   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4271:4272   */\n      0x00\n        /* \"#utility.yul\":4264:4352   */\n      mstore\n        /* \"#utility.yul\":4371:4375   */\n      0x11\n        /* \"#utility.yul\":4368:4369   */\n      0x04\n        /* \"#utility.yul\":4361:4376   */\n      mstore\n        /* \"#utility.yul\":4395:4399   */\n      0x24\n        /* \"#utility.yul\":4392:4393   */\n      0x00\n        /* \"#utility.yul\":4385:4400   */\n      revert\n        /* \"#utility.yul\":4412:4603   */\n    tag_58:\n        /* \"#utility.yul\":4452:4455   */\n      0x00\n        /* \"#utility.yul\":4471:4491   */\n      tag_236\n        /* \"#utility.yul\":4489:4490   */\n      dup3\n        /* \"#utility.yul\":4471:4491   */\n      tag_149\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4466:4491   */\n      swap2\n      pop\n        /* \"#utility.yul\":4505:4525   */\n      tag_237\n        /* \"#utility.yul\":4523:4524   */\n      dup4\n        /* \"#utility.yul\":4505:4525   */\n      tag_149\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4500:4525   */\n      swap3\n      pop\n        /* \"#utility.yul\":4548:4549   */\n      dup3\n        /* \"#utility.yul\":4545:4546   */\n      dup3\n        /* \"#utility.yul\":4541:4550   */\n      add\n        /* \"#utility.yul\":4534:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4569:4572   */\n      dup1\n        /* \"#utility.yul\":4566:4567   */\n      dup3\n        /* \"#utility.yul\":4563:4573   */\n      gt\n        /* \"#utility.yul\":4560:4596   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":4576:4594   */\n      tag_239\n      tag_165\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4560:4596   */\n    tag_238:\n        /* \"#utility.yul\":4412:4603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4609:4778   */\n    tag_166:\n        /* \"#utility.yul\":4693:4704   */\n      0x00\n        /* \"#utility.yul\":4727:4733   */\n      dup3\n        /* \"#utility.yul\":4722:4725   */\n      dup3\n        /* \"#utility.yul\":4715:4734   */\n      mstore\n        /* \"#utility.yul\":4767:4771   */\n      0x20\n        /* \"#utility.yul\":4762:4765   */\n      dup3\n        /* \"#utility.yul\":4758:4772   */\n      add\n        /* \"#utility.yul\":4743:4772   */\n      swap1\n      pop\n        /* \"#utility.yul\":4609:4778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4784:5005   */\n    tag_167:\n        /* \"#utility.yul\":4924:4958   */\n      0x4d616e6167656456657374696e6757616c6c65743a206f6e6c7920666163746f\n        /* \"#utility.yul\":4920:4921   */\n      0x00\n        /* \"#utility.yul\":4912:4918   */\n      dup3\n        /* \"#utility.yul\":4908:4922   */\n      add\n        /* \"#utility.yul\":4901:4959   */\n      mstore\n        /* \"#utility.yul\":4993:4997   */\n      0x7279000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4980:4986   */\n      dup3\n        /* \"#utility.yul\":4976:4991   */\n      add\n        /* \"#utility.yul\":4969:4998   */\n      mstore\n        /* \"#utility.yul\":4784:5005   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5011:5377   */\n    tag_168:\n        /* \"#utility.yul\":5153:5156   */\n      0x00\n        /* \"#utility.yul\":5174:5241   */\n      tag_243\n        /* \"#utility.yul\":5238:5240   */\n      0x22\n        /* \"#utility.yul\":5233:5236   */\n      dup4\n        /* \"#utility.yul\":5174:5241   */\n      tag_166\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5167:5241   */\n      swap2\n      pop\n        /* \"#utility.yul\":5250:5343   */\n      tag_244\n        /* \"#utility.yul\":5339:5342   */\n      dup3\n        /* \"#utility.yul\":5250:5343   */\n      tag_167\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5368:5370   */\n      0x40\n        /* \"#utility.yul\":5363:5366   */\n      dup3\n        /* \"#utility.yul\":5359:5371   */\n      add\n        /* \"#utility.yul\":5352:5371   */\n      swap1\n      pop\n        /* \"#utility.yul\":5011:5377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5383:5802   */\n    tag_67:\n        /* \"#utility.yul\":5549:5553   */\n      0x00\n        /* \"#utility.yul\":5587:5589   */\n      0x20\n        /* \"#utility.yul\":5576:5585   */\n      dup3\n        /* \"#utility.yul\":5572:5590   */\n      add\n        /* \"#utility.yul\":5564:5590   */\n      swap1\n      pop\n        /* \"#utility.yul\":5636:5645   */\n      dup2\n        /* \"#utility.yul\":5630:5634   */\n      dup2\n        /* \"#utility.yul\":5626:5646   */\n      sub\n        /* \"#utility.yul\":5622:5623   */\n      0x00\n        /* \"#utility.yul\":5611:5620   */\n      dup4\n        /* \"#utility.yul\":5607:5624   */\n      add\n        /* \"#utility.yul\":5600:5647   */\n      mstore\n        /* \"#utility.yul\":5664:5795   */\n      tag_246\n        /* \"#utility.yul\":5790:5794   */\n      dup2\n        /* \"#utility.yul\":5664:5795   */\n      tag_168\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5656:5795   */\n      swap1\n      pop\n        /* \"#utility.yul\":5383:5802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5808:6048   */\n    tag_169:\n        /* \"#utility.yul\":5948:5982   */\n      0x4d616e6167656456657374696e6757616c6c65743a2076657374696e67206d61\n        /* \"#utility.yul\":5944:5945   */\n      0x00\n        /* \"#utility.yul\":5936:5942   */\n      dup3\n        /* \"#utility.yul\":5932:5946   */\n      add\n        /* \"#utility.yul\":5925:5983   */\n      mstore\n        /* \"#utility.yul\":6017:6040   */\n      0x6e61676572206973207a65726f20616464726573730000000000000000000000\n        /* \"#utility.yul\":6012:6014   */\n      0x20\n        /* \"#utility.yul\":6004:6010   */\n      dup3\n        /* \"#utility.yul\":6000:6015   */\n      add\n        /* \"#utility.yul\":5993:6041   */\n      mstore\n        /* \"#utility.yul\":5808:6048   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6054:6420   */\n    tag_170:\n        /* \"#utility.yul\":6196:6199   */\n      0x00\n        /* \"#utility.yul\":6217:6284   */\n      tag_249\n        /* \"#utility.yul\":6281:6283   */\n      0x35\n        /* \"#utility.yul\":6276:6279   */\n      dup4\n        /* \"#utility.yul\":6217:6284   */\n      tag_166\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6210:6284   */\n      swap2\n      pop\n        /* \"#utility.yul\":6293:6386   */\n      tag_250\n        /* \"#utility.yul\":6382:6385   */\n      dup3\n        /* \"#utility.yul\":6293:6386   */\n      tag_169\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6411:6413   */\n      0x40\n        /* \"#utility.yul\":6406:6409   */\n      dup3\n        /* \"#utility.yul\":6402:6414   */\n      add\n        /* \"#utility.yul\":6395:6414   */\n      swap1\n      pop\n        /* \"#utility.yul\":6054:6420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6426:6845   */\n    tag_71:\n        /* \"#utility.yul\":6592:6596   */\n      0x00\n        /* \"#utility.yul\":6630:6632   */\n      0x20\n        /* \"#utility.yul\":6619:6628   */\n      dup3\n        /* \"#utility.yul\":6615:6633   */\n      add\n        /* \"#utility.yul\":6607:6633   */\n      swap1\n      pop\n        /* \"#utility.yul\":6679:6688   */\n      dup2\n        /* \"#utility.yul\":6673:6677   */\n      dup2\n        /* \"#utility.yul\":6669:6689   */\n      sub\n        /* \"#utility.yul\":6665:6666   */\n      0x00\n        /* \"#utility.yul\":6654:6663   */\n      dup4\n        /* \"#utility.yul\":6650:6667   */\n      add\n        /* \"#utility.yul\":6643:6690   */\n      mstore\n        /* \"#utility.yul\":6707:6838   */\n      tag_252\n        /* \"#utility.yul\":6833:6837   */\n      dup2\n        /* \"#utility.yul\":6707:6838   */\n      tag_170\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6699:6838   */\n      swap1\n      pop\n        /* \"#utility.yul\":6426:6845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6851:7087   */\n    tag_171:\n        /* \"#utility.yul\":6991:7025   */\n      0x4d616e6167656456657374696e6757616c6c65743a2062656e65666963696172\n        /* \"#utility.yul\":6987:6988   */\n      0x00\n        /* \"#utility.yul\":6979:6985   */\n      dup3\n        /* \"#utility.yul\":6975:6989   */\n      add\n        /* \"#utility.yul\":6968:7026   */\n      mstore\n        /* \"#utility.yul\":7060:7079   */\n      0x79206973207a65726f2061646472657373000000000000000000000000000000\n        /* \"#utility.yul\":7055:7057   */\n      0x20\n        /* \"#utility.yul\":7047:7053   */\n      dup3\n        /* \"#utility.yul\":7043:7058   */\n      add\n        /* \"#utility.yul\":7036:7080   */\n      mstore\n        /* \"#utility.yul\":6851:7087   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7093:7459   */\n    tag_172:\n        /* \"#utility.yul\":7235:7238   */\n      0x00\n        /* \"#utility.yul\":7256:7323   */\n      tag_255\n        /* \"#utility.yul\":7320:7322   */\n      0x31\n        /* \"#utility.yul\":7315:7318   */\n      dup4\n        /* \"#utility.yul\":7256:7323   */\n      tag_166\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7249:7323   */\n      swap2\n      pop\n        /* \"#utility.yul\":7332:7425   */\n      tag_256\n        /* \"#utility.yul\":7421:7424   */\n      dup3\n        /* \"#utility.yul\":7332:7425   */\n      tag_171\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7450:7452   */\n      0x40\n        /* \"#utility.yul\":7445:7448   */\n      dup3\n        /* \"#utility.yul\":7441:7453   */\n      add\n        /* \"#utility.yul\":7434:7453   */\n      swap1\n      pop\n        /* \"#utility.yul\":7093:7459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7465:7884   */\n    tag_74:\n        /* \"#utility.yul\":7631:7635   */\n      0x00\n        /* \"#utility.yul\":7669:7671   */\n      0x20\n        /* \"#utility.yul\":7658:7667   */\n      dup3\n        /* \"#utility.yul\":7654:7672   */\n      add\n        /* \"#utility.yul\":7646:7672   */\n      swap1\n      pop\n        /* \"#utility.yul\":7718:7727   */\n      dup2\n        /* \"#utility.yul\":7712:7716   */\n      dup2\n        /* \"#utility.yul\":7708:7728   */\n      sub\n        /* \"#utility.yul\":7704:7705   */\n      0x00\n        /* \"#utility.yul\":7693:7702   */\n      dup4\n        /* \"#utility.yul\":7689:7706   */\n      add\n        /* \"#utility.yul\":7682:7729   */\n      mstore\n        /* \"#utility.yul\":7746:7877   */\n      tag_258\n        /* \"#utility.yul\":7872:7876   */\n      dup2\n        /* \"#utility.yul\":7746:7877   */\n      tag_172\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7738:7877   */\n      swap1\n      pop\n        /* \"#utility.yul\":7465:7884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7890:8012   */\n    tag_173:\n        /* \"#utility.yul\":7963:7987   */\n      tag_260\n        /* \"#utility.yul\":7981:7986   */\n      dup2\n        /* \"#utility.yul\":7963:7987   */\n      tag_149\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7956:7961   */\n      dup2\n        /* \"#utility.yul\":7953:7988   */\n      eq\n        /* \"#utility.yul\":7943:8006   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":8002:8003   */\n      0x00\n        /* \"#utility.yul\":7999:8000   */\n      dup1\n        /* \"#utility.yul\":7992:8004   */\n      revert\n        /* \"#utility.yul\":7943:8006   */\n    tag_261:\n        /* \"#utility.yul\":7890:8012   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8018:8161   */\n    tag_174:\n        /* \"#utility.yul\":8075:8080   */\n      0x00\n        /* \"#utility.yul\":8106:8112   */\n      dup2\n        /* \"#utility.yul\":8100:8113   */\n      mload\n        /* \"#utility.yul\":8091:8113   */\n      swap1\n      pop\n        /* \"#utility.yul\":8122:8155   */\n      tag_263\n        /* \"#utility.yul\":8149:8154   */\n      dup2\n        /* \"#utility.yul\":8122:8155   */\n      tag_173\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8018:8161   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8167:8518   */\n    tag_82:\n        /* \"#utility.yul\":8237:8243   */\n      0x00\n        /* \"#utility.yul\":8286:8288   */\n      0x20\n        /* \"#utility.yul\":8274:8283   */\n      dup3\n        /* \"#utility.yul\":8265:8272   */\n      dup5\n        /* \"#utility.yul\":8261:8284   */\n      sub\n        /* \"#utility.yul\":8257:8289   */\n      slt\n        /* \"#utility.yul\":8254:8373   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":8292:8371   */\n      tag_266\n      tag_152\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8254:8373   */\n    tag_265:\n        /* \"#utility.yul\":8412:8413   */\n      0x00\n        /* \"#utility.yul\":8437:8501   */\n      tag_267\n        /* \"#utility.yul\":8493:8500   */\n      dup5\n        /* \"#utility.yul\":8484:8490   */\n      dup3\n        /* \"#utility.yul\":8473:8482   */\n      dup6\n        /* \"#utility.yul\":8469:8491   */\n      add\n        /* \"#utility.yul\":8437:8501   */\n      tag_174\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8427:8501   */\n      swap2\n      pop\n        /* \"#utility.yul\":8383:8511   */\n      pop\n        /* \"#utility.yul\":8167:8518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8524:8718   */\n    tag_90:\n        /* \"#utility.yul\":8564:8568   */\n      0x00\n        /* \"#utility.yul\":8584:8604   */\n      tag_269\n        /* \"#utility.yul\":8602:8603   */\n      dup3\n        /* \"#utility.yul\":8584:8604   */\n      tag_149\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":8579:8604   */\n      swap2\n      pop\n        /* \"#utility.yul\":8618:8638   */\n      tag_270\n        /* \"#utility.yul\":8636:8637   */\n      dup4\n        /* \"#utility.yul\":8618:8638   */\n      tag_149\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":8613:8638   */\n      swap3\n      pop\n        /* \"#utility.yul\":8662:8663   */\n      dup3\n        /* \"#utility.yul\":8659:8660   */\n      dup3\n        /* \"#utility.yul\":8655:8664   */\n      sub\n        /* \"#utility.yul\":8647:8664   */\n      swap1\n      pop\n        /* \"#utility.yul\":8686:8687   */\n      dup2\n        /* \"#utility.yul\":8680:8684   */\n      dup2\n        /* \"#utility.yul\":8677:8688   */\n      gt\n        /* \"#utility.yul\":8674:8711   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":8691:8709   */\n      tag_272\n      tag_165\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8674:8711   */\n    tag_271:\n        /* \"#utility.yul\":8524:8718   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8724:9056   */\n    tag_99:\n        /* \"#utility.yul\":8845:8849   */\n      0x00\n        /* \"#utility.yul\":8883:8885   */\n      0x40\n        /* \"#utility.yul\":8872:8881   */\n      dup3\n        /* \"#utility.yul\":8868:8886   */\n      add\n        /* \"#utility.yul\":8860:8886   */\n      swap1\n      pop\n        /* \"#utility.yul\":8896:8967   */\n      tag_274\n        /* \"#utility.yul\":8964:8965   */\n      0x00\n        /* \"#utility.yul\":8953:8962   */\n      dup4\n        /* \"#utility.yul\":8949:8966   */\n      add\n        /* \"#utility.yul\":8940:8946   */\n      dup6\n        /* \"#utility.yul\":8896:8967   */\n      tag_158\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":8977:9049   */\n      tag_275\n        /* \"#utility.yul\":9045:9047   */\n      0x20\n        /* \"#utility.yul\":9034:9043   */\n      dup4\n        /* \"#utility.yul\":9030:9048   */\n      add\n        /* \"#utility.yul\":9021:9027   */\n      dup5\n        /* \"#utility.yul\":8977:9049   */\n      tag_150\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8724:9056   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9062:9472   */\n    tag_114:\n        /* \"#utility.yul\":9102:9109   */\n      0x00\n        /* \"#utility.yul\":9125:9145   */\n      tag_277\n        /* \"#utility.yul\":9143:9144   */\n      dup3\n        /* \"#utility.yul\":9125:9145   */\n      tag_149\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9120:9145   */\n      swap2\n      pop\n        /* \"#utility.yul\":9159:9179   */\n      tag_278\n        /* \"#utility.yul\":9177:9178   */\n      dup4\n        /* \"#utility.yul\":9159:9179   */\n      tag_149\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":9154:9179   */\n      swap3\n      pop\n        /* \"#utility.yul\":9214:9215   */\n      dup3\n        /* \"#utility.yul\":9211:9212   */\n      dup3\n        /* \"#utility.yul\":9207:9216   */\n      mul\n        /* \"#utility.yul\":9236:9266   */\n      tag_279\n        /* \"#utility.yul\":9254:9265   */\n      dup2\n        /* \"#utility.yul\":9236:9266   */\n      tag_149\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":9225:9266   */\n      swap2\n      pop\n        /* \"#utility.yul\":9415:9416   */\n      dup3\n        /* \"#utility.yul\":9406:9413   */\n      dup3\n        /* \"#utility.yul\":9402:9417   */\n      div\n        /* \"#utility.yul\":9399:9400   */\n      dup5\n        /* \"#utility.yul\":9396:9418   */\n      eq\n        /* \"#utility.yul\":9376:9377   */\n      dup4\n        /* \"#utility.yul\":9369:9378   */\n      iszero\n        /* \"#utility.yul\":9349:9432   */\n      or\n        /* \"#utility.yul\":9326:9465   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":9445:9463   */\n      tag_281\n      tag_165\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":9326:9465   */\n    tag_280:\n        /* \"#utility.yul\":9110:9472   */\n      pop\n        /* \"#utility.yul\":9062:9472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9478:9658   */\n    tag_175:\n        /* \"#utility.yul\":9526:9603   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9523:9524   */\n      0x00\n        /* \"#utility.yul\":9516:9604   */\n      mstore\n        /* \"#utility.yul\":9623:9627   */\n      0x12\n        /* \"#utility.yul\":9620:9621   */\n      0x04\n        /* \"#utility.yul\":9613:9628   */\n      mstore\n        /* \"#utility.yul\":9647:9651   */\n      0x24\n        /* \"#utility.yul\":9644:9645   */\n      0x00\n        /* \"#utility.yul\":9637:9652   */\n      revert\n        /* \"#utility.yul\":9664:9849   */\n    tag_116:\n        /* \"#utility.yul\":9704:9705   */\n      0x00\n        /* \"#utility.yul\":9721:9741   */\n      tag_284\n        /* \"#utility.yul\":9739:9740   */\n      dup3\n        /* \"#utility.yul\":9721:9741   */\n      tag_149\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":9716:9741   */\n      swap2\n      pop\n        /* \"#utility.yul\":9755:9775   */\n      tag_285\n        /* \"#utility.yul\":9773:9774   */\n      dup4\n        /* \"#utility.yul\":9755:9775   */\n      tag_149\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9750:9775   */\n      swap3\n      pop\n        /* \"#utility.yul\":9794:9795   */\n      dup3\n        /* \"#utility.yul\":9784:9819   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":9799:9817   */\n      tag_287\n      tag_175\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9784:9819   */\n    tag_286:\n        /* \"#utility.yul\":9841:9842   */\n      dup3\n        /* \"#utility.yul\":9838:9839   */\n      dup3\n        /* \"#utility.yul\":9834:9843   */\n      div\n        /* \"#utility.yul\":9829:9843   */\n      swap1\n      pop\n        /* \"#utility.yul\":9664:9849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9855:9971   */\n    tag_176:\n        /* \"#utility.yul\":9925:9946   */\n      tag_289\n        /* \"#utility.yul\":9940:9945   */\n      dup2\n        /* \"#utility.yul\":9925:9946   */\n      tag_159\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9918:9923   */\n      dup2\n        /* \"#utility.yul\":9915:9947   */\n      eq\n        /* \"#utility.yul\":9905:9965   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":9961:9962   */\n      0x00\n        /* \"#utility.yul\":9958:9959   */\n      dup1\n        /* \"#utility.yul\":9951:9963   */\n      revert\n        /* \"#utility.yul\":9905:9965   */\n    tag_290:\n        /* \"#utility.yul\":9855:9971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9977:10114   */\n    tag_177:\n        /* \"#utility.yul\":10031:10036   */\n      0x00\n        /* \"#utility.yul\":10062:10068   */\n      dup2\n        /* \"#utility.yul\":10056:10069   */\n      mload\n        /* \"#utility.yul\":10047:10069   */\n      swap1\n      pop\n        /* \"#utility.yul\":10078:10108   */\n      tag_292\n        /* \"#utility.yul\":10102:10107   */\n      dup2\n        /* \"#utility.yul\":10078:10108   */\n      tag_176\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9977:10114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10120:10465   */\n    tag_122:\n        /* \"#utility.yul\":10187:10193   */\n      0x00\n        /* \"#utility.yul\":10236:10238   */\n      0x20\n        /* \"#utility.yul\":10224:10233   */\n      dup3\n        /* \"#utility.yul\":10215:10222   */\n      dup5\n        /* \"#utility.yul\":10211:10234   */\n      sub\n        /* \"#utility.yul\":10207:10239   */\n      slt\n        /* \"#utility.yul\":10204:10323   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":10242:10321   */\n      tag_295\n      tag_152\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10204:10323   */\n    tag_294:\n        /* \"#utility.yul\":10362:10363   */\n      0x00\n        /* \"#utility.yul\":10387:10448   */\n      tag_296\n        /* \"#utility.yul\":10440:10447   */\n      dup5\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup6\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10387:10448   */\n      tag_177\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":10377:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10333:10458   */\n      pop\n        /* \"#utility.yul\":10120:10465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10569   */\n    tag_178:\n        /* \"#utility.yul\":10522:10528   */\n      0x00\n        /* \"#utility.yul\":10556:10561   */\n      dup2\n        /* \"#utility.yul\":10550:10562   */\n      mload\n        /* \"#utility.yul\":10540:10562   */\n      swap1\n      pop\n        /* \"#utility.yul\":10471:10569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10575:10722   */\n    tag_179:\n        /* \"#utility.yul\":10676:10687   */\n      0x00\n        /* \"#utility.yul\":10713:10716   */\n      dup2\n        /* \"#utility.yul\":10698:10716   */\n      swap1\n      pop\n        /* \"#utility.yul\":10575:10722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10728:10867   */\n    tag_180:\n        /* \"#utility.yul\":10817:10823   */\n      dup3\n        /* \"#utility.yul\":10812:10815   */\n      dup2\n        /* \"#utility.yul\":10807:10810   */\n      dup4\n        /* \"#utility.yul\":10801:10824   */\n      mcopy\n        /* \"#utility.yul\":10858:10859   */\n      0x00\n        /* \"#utility.yul\":10849:10855   */\n      dup4\n        /* \"#utility.yul\":10844:10847   */\n      dup4\n        /* \"#utility.yul\":10840:10856   */\n      add\n        /* \"#utility.yul\":10833:10860   */\n      mstore\n        /* \"#utility.yul\":10728:10867   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10873:11259   */\n    tag_181:\n        /* \"#utility.yul\":10977:10980   */\n      0x00\n        /* \"#utility.yul\":11005:11043   */\n      tag_301\n        /* \"#utility.yul\":11037:11042   */\n      dup3\n        /* \"#utility.yul\":11005:11043   */\n      tag_178\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11059:11147   */\n      tag_302\n        /* \"#utility.yul\":11140:11146   */\n      dup2\n        /* \"#utility.yul\":11135:11138   */\n      dup6\n        /* \"#utility.yul\":11059:11147   */\n      tag_179\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11052:11147   */\n      swap4\n      pop\n        /* \"#utility.yul\":11156:11221   */\n      tag_303\n        /* \"#utility.yul\":11214:11220   */\n      dup2\n        /* \"#utility.yul\":11209:11212   */\n      dup6\n        /* \"#utility.yul\":11202:11206   */\n      0x20\n        /* \"#utility.yul\":11195:11200   */\n      dup7\n        /* \"#utility.yul\":11191:11207   */\n      add\n        /* \"#utility.yul\":11156:11221   */\n      tag_180\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":11246:11252   */\n      dup1\n        /* \"#utility.yul\":11241:11244   */\n      dup5\n        /* \"#utility.yul\":11237:11253   */\n      add\n        /* \"#utility.yul\":11230:11253   */\n      swap2\n      pop\n        /* \"#utility.yul\":10981:11259   */\n      pop\n        /* \"#utility.yul\":10873:11259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11265:11536   */\n    tag_132:\n        /* \"#utility.yul\":11395:11398   */\n      0x00\n        /* \"#utility.yul\":11417:11510   */\n      tag_305\n        /* \"#utility.yul\":11506:11509   */\n      dup3\n        /* \"#utility.yul\":11497:11503   */\n      dup5\n        /* \"#utility.yul\":11417:11510   */\n      tag_181\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11410:11510   */\n      swap2\n      pop\n        /* \"#utility.yul\":11527:11530   */\n      dup2\n        /* \"#utility.yul\":11520:11530   */\n      swap1\n      pop\n        /* \"#utility.yul\":11265:11536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202da45c5f8250af49d93add9efdbd5e31eb683c32f7802260db1f9cceb9d8e61164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_720": {
									"entryPoint": null,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052348015600e575f80fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506080516110f561005b5f395f61038b01526110f55ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063810ec23b11610064578063810ec23b1461011d5780639852595c1461014d578063a3f8eace1461017d578063be9a6555146101ad578063db27b8dd146101cb57610091565b80630fb5a6b41461009557806319165587146100b357806338af3eed146100cf578063485cc955146100ed575b5f80fd5b61009d6101e9565b6040516100aa9190610aa6565b60405180910390f35b6100cd60048036038101906100c89190610b1d565b610287565b005b6100d7610349565b6040516100e49190610b57565b60405180910390f35b61010760048036038101906101029190610b70565b610371565b6040516101149190610bc8565b60405180910390f35b61013760048036038101906101329190610c1e565b610566565b6040516101449190610aa6565b60405180910390f35b61016760048036038101906101629190610b1d565b610603565b6040516101749190610aa6565b60405180910390f35b61019760048036038101906101929190610b1d565b610648565b6040516101a49190610aa6565b60405180910390f35b6101b561066d565b6040516101c29190610aa6565b60405180910390f35b6101d361070b565b6040516101e09190610b57565b60405180910390f35b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630fb5a6b46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610254573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102789190610c70565b67ffffffffffffffff16905090565b5f61029182610648565b9050805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102de9190610cc8565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b8260405161032b9190610aa6565b60405180910390a26103458261033f610349565b83610733565b5050565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f790610d7b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046590610e09565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e97565b60405180910390fd5b8160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905092915050565b5f6105fb61057384610603565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ac9190610b57565b602060405180830381865afa1580156105c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105eb9190610edf565b6105f59190610cc8565b836107b2565b905092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61065282610603565b61065c8342610566565b6106669190610f0a565b9050919050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be9a65556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106fc9190610c70565b67ffffffffffffffff16905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107ad838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610766929190610f3d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061084a565b505050565b5f6107bb61066d565b8267ffffffffffffffff1610156107d4575f9050610844565b6107dc6101e9565b6107e461066d565b6107ee9190610cc8565b8267ffffffffffffffff16111561080757829050610844565b61080f6101e9565b61081761066d565b8367ffffffffffffffff1661082c9190610f0a565b846108379190610f64565b6108419190610fd2565b90505b92915050565b5f610874828473ffffffffffffffffffffffffffffffffffffffff166108df90919063ffffffff16565b90505f815114158015610898575080806020019051810190610896919061102c565b155b156108da57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016108d19190610b57565b60405180910390fd5b505050565b60606108ec83835f6108f4565b905092915050565b60608147101561093b57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109329190610b57565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16848660405161096391906110a9565b5f6040518083038185875af1925050503d805f811461099d576040519150601f19603f3d011682016040523d82523d5f602084013e6109a2565b606091505b50915091506109b28683836109bd565b925050509392505050565b6060826109d2576109cd82610a4a565b610a42565b5f82511480156109f857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610a3a57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610a319190610b57565b60405180910390fd5b819050610a43565b5b9392505050565b5f81511115610a5c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b610aa081610a8e565b82525050565b5f602082019050610ab95f830184610a97565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610aec82610ac3565b9050919050565b610afc81610ae2565b8114610b06575f80fd5b50565b5f81359050610b1781610af3565b92915050565b5f60208284031215610b3257610b31610abf565b5b5f610b3f84828501610b09565b91505092915050565b610b5181610ae2565b82525050565b5f602082019050610b6a5f830184610b48565b92915050565b5f8060408385031215610b8657610b85610abf565b5b5f610b9385828601610b09565b9250506020610ba485828601610b09565b9150509250929050565b5f8115159050919050565b610bc281610bae565b82525050565b5f602082019050610bdb5f830184610bb9565b92915050565b5f67ffffffffffffffff82169050919050565b610bfd81610be1565b8114610c07575f80fd5b50565b5f81359050610c1881610bf4565b92915050565b5f8060408385031215610c3457610c33610abf565b5b5f610c4185828601610b09565b9250506020610c5285828601610c0a565b9150509250929050565b5f81519050610c6a81610bf4565b92915050565b5f60208284031215610c8557610c84610abf565b5b5f610c9284828501610c5c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610cd282610a8e565b9150610cdd83610a8e565b9250828201905080821115610cf557610cf4610c9b565b5b92915050565b5f82825260208201905092915050565b7f4d616e6167656456657374696e6757616c6c65743a206f6e6c7920666163746f5f8201527f7279000000000000000000000000000000000000000000000000000000000000602082015250565b5f610d65602283610cfb565b9150610d7082610d0b565b604082019050919050565b5f6020820190508181035f830152610d9281610d59565b9050919050565b7f4d616e6167656456657374696e6757616c6c65743a2076657374696e67206d615f8201527f6e61676572206973207a65726f20616464726573730000000000000000000000602082015250565b5f610df3603583610cfb565b9150610dfe82610d99565b604082019050919050565b5f6020820190508181035f830152610e2081610de7565b9050919050565b7f4d616e6167656456657374696e6757616c6c65743a2062656e656669636961725f8201527f79206973207a65726f2061646472657373000000000000000000000000000000602082015250565b5f610e81603183610cfb565b9150610e8c82610e27565b604082019050919050565b5f6020820190508181035f830152610eae81610e75565b9050919050565b610ebe81610a8e565b8114610ec8575f80fd5b50565b5f81519050610ed981610eb5565b92915050565b5f60208284031215610ef457610ef3610abf565b5b5f610f0184828501610ecb565b91505092915050565b5f610f1482610a8e565b9150610f1f83610a8e565b9250828203905081811115610f3757610f36610c9b565b5b92915050565b5f604082019050610f505f830185610b48565b610f5d6020830184610a97565b9392505050565b5f610f6e82610a8e565b9150610f7983610a8e565b9250828202610f8781610a8e565b91508282048414831517610f9e57610f9d610c9b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610fdc82610a8e565b9150610fe783610a8e565b925082610ff757610ff6610fa5565b5b828204905092915050565b61100b81610bae565b8114611015575f80fd5b50565b5f8151905061102681611002565b92915050565b5f6020828403121561104157611040610abf565b5b5f61104e84828501611018565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61108382611057565b61108d8185611061565b935061109d81856020860161106b565b80840191505092915050565b5f6110b48284611079565b91508190509291505056fea26469706673582212202da45c5f8250af49d93add9efdbd5e31eb683c32f7802260db1f9cceb9d8e61164736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0x10F5 PUSH2 0x5B PUSH0 CODECOPY PUSH0 PUSH2 0x38B ADD MSTORE PUSH2 0x10F5 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x810EC23B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xDB27B8DD EQ PUSH2 0x1CB JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0xED JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB5A6B4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x254 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x291 DUP3 PUSH2 0x648 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x345 DUP3 PUSH2 0x33F PUSH2 0x349 JUMP JUMPDEST DUP4 PUSH2 0x733 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F7 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x465 SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5FB PUSH2 0x573 DUP5 PUSH2 0x603 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x652 DUP3 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x65C DUP4 TIMESTAMP PUSH2 0x566 JUMP JUMPDEST PUSH2 0x666 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBE9A6555 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7AD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x766 SWAP3 SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x84A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7BB PUSH2 0x66D JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x7D4 JUMPI PUSH0 SWAP1 POP PUSH2 0x844 JUMP JUMPDEST PUSH2 0x7DC PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x7E4 PUSH2 0x66D JUMP JUMPDEST PUSH2 0x7EE SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x807 JUMPI DUP3 SWAP1 POP PUSH2 0x844 JUMP JUMPDEST PUSH2 0x80F PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x817 PUSH2 0x66D JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x82C SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST DUP5 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0x841 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x874 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x898 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x102C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x8DA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8EC DUP4 DUP4 PUSH0 PUSH2 0x8F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x93B JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x9B2 DUP7 DUP4 DUP4 PUSH2 0x9BD JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x9D2 JUMPI PUSH2 0x9CD DUP3 PUSH2 0xA4A JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x9F8 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xA3A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xA43 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xA5C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA0 DUP2 PUSH2 0xA8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB9 PUSH0 DUP4 ADD DUP5 PUSH2 0xA97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAEC DUP3 PUSH2 0xAC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFC DUP2 PUSH2 0xAE2 JUMP JUMPDEST DUP2 EQ PUSH2 0xB06 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB17 DUP2 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB32 JUMPI PUSH2 0xB31 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB3F DUP5 DUP3 DUP6 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB51 DUP2 PUSH2 0xAE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6A PUSH0 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB86 JUMPI PUSH2 0xB85 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB93 DUP6 DUP3 DUP7 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA4 DUP6 DUP3 DUP7 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC2 DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBDB PUSH0 DUP4 ADD DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFD DUP2 PUSH2 0xBE1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC07 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC18 DUP2 PUSH2 0xBF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC34 JUMPI PUSH2 0xC33 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC41 DUP6 DUP3 DUP7 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC52 DUP6 DUP3 DUP7 ADD PUSH2 0xC0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC6A DUP2 PUSH2 0xBF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC85 JUMPI PUSH2 0xC84 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC92 DUP5 DUP3 DUP6 ADD PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCD2 DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xCDD DUP4 PUSH2 0xA8E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xC9B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D616E6167656456657374696E6757616C6C65743A206F6E6C7920666163746F PUSH0 DUP3 ADD MSTORE PUSH32 0x7279000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD65 PUSH1 0x22 DUP4 PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP PUSH2 0xD70 DUP3 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD92 DUP2 PUSH2 0xD59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D616E6167656456657374696E6757616C6C65743A2076657374696E67206D61 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E61676572206973207A65726F20616464726573730000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDF3 PUSH1 0x35 DUP4 PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP PUSH2 0xDFE DUP3 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE20 DUP2 PUSH2 0xDE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D616E6167656456657374696E6757616C6C65743A2062656E65666963696172 PUSH0 DUP3 ADD MSTORE PUSH32 0x79206973207A65726F2061646472657373000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE81 PUSH1 0x31 DUP4 PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP PUSH2 0xE8C DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAE DUP2 PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBE DUP2 PUSH2 0xA8E JUMP JUMPDEST DUP2 EQ PUSH2 0xEC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xED9 DUP2 PUSH2 0xEB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF3 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF01 DUP5 DUP3 DUP6 ADD PUSH2 0xECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF14 DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xF1F DUP4 PUSH2 0xA8E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF37 JUMPI PUSH2 0xF36 PUSH2 0xC9B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF50 PUSH0 DUP4 ADD DUP6 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xF5D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA97 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF6E DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xF79 DUP4 PUSH2 0xA8E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF87 DUP2 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0xC9B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFDC DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xFE7 DUP4 PUSH2 0xA8E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xFA5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100B DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP2 EQ PUSH2 0x1015 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1026 DUP2 PUSH2 0x1002 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1041 JUMPI PUSH2 0x1040 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x104E DUP5 DUP3 DUP6 ADD PUSH2 0x1018 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1083 DUP3 PUSH2 0x1057 JUMP JUMPDEST PUSH2 0x108D DUP2 DUP6 PUSH2 0x1061 JUMP JUMPDEST SWAP4 POP PUSH2 0x109D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x106B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10B4 DUP3 DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D LOG4 TLOAD PUSH0 DUP3 POP 0xAF BLOBHASH 0xD9 GASPRICE 0xDD SWAP15 REVERT 0xBD MCOPY BALANCE 0xEB PUSH9 0x3C32F7802260DB1F9C 0xCE 0xB9 0xD8 0xE6 GT PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "366:1250:5:-:0;;;657:52;;;;;;;;;;692:10;681:21;;;;;;;;;;366:1250;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 2122,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 2634,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_vestingSchedule_983": {
									"entryPoint": 1970,
									"id": 983,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@beneficiary_755": {
									"entryPoint": 841,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@duration_746": {
									"entryPoint": 489,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_523": {
									"entryPoint": 2292,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 2271,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_805": {
									"entryPoint": 881,
									"id": 805,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@releasable_877": {
									"entryPoint": 1608,
									"id": 877,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@release_912": {
									"entryPoint": 647,
									"id": 912,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@released_855": {
									"entryPoint": 1539,
									"id": 855,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransfer_163": {
									"entryPoint": 1843,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@start_733": {
									"entryPoint": 1645,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 2493,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@vestedAmount_940": {
									"entryPoint": 1382,
									"id": 940,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vestingManager_763": {
									"entryPoint": 1803,
									"id": 763,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 3082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint64": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64_fromMemory": {
									"entryPoint": 3184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3901,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4203,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4005,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf": {
									"entryPoint": 3623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 3060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11539:8",
										"nodeType": "YulBlock",
										"src": "0:11539:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:8",
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nativeSrc": "62:16:8",
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:8",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:8",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:8",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nativeSrc": "155:53:8",
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nativeSrc": "177:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nativeSrc": "165:37:8",
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nativeSrc": "165:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:8",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:8",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nativeSrc": "312:124:8",
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nativeSrc": "322:26:8",
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:8",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nativeSrc": "330:18:8",
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:8",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nativeSrc": "411:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nativeSrc": "358:71:8",
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nativeSrc": "358:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:8",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:8",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:8",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nativeSrc": "482:35:8",
													"nodeType": "YulBlock",
													"src": "482:35:8",
													"statements": [
														{
															"nativeSrc": "492:19:8",
															"nodeType": "YulAssignment",
															"src": "492:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:8",
																		"nodeType": "YulLiteral",
																		"src": "508:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:8"
																},
																"nativeSrc": "502:9:8",
																"nodeType": "YulFunctionCall",
																"src": "502:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:8",
														"nodeType": "YulTypedName",
														"src": "475:6:8",
														"type": ""
													}
												],
												"src": "442:75:8"
											},
											{
												"body": {
													"nativeSrc": "612:28:8",
													"nodeType": "YulBlock",
													"src": "612:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:8",
																		"nodeType": "YulLiteral",
																		"src": "629:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:8",
																		"nodeType": "YulLiteral",
																		"src": "632:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:8"
																},
																"nativeSrc": "622:12:8",
																"nodeType": "YulFunctionCall",
																"src": "622:12:8"
															},
															"nativeSrc": "622:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:8"
											},
											{
												"body": {
													"nativeSrc": "735:28:8",
													"nodeType": "YulBlock",
													"src": "735:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:8",
																		"nodeType": "YulLiteral",
																		"src": "752:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:8",
																		"nodeType": "YulLiteral",
																		"src": "755:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:8"
																},
																"nativeSrc": "745:12:8",
																"nodeType": "YulFunctionCall",
																"src": "745:12:8"
															},
															"nativeSrc": "745:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:8"
											},
											{
												"body": {
													"nativeSrc": "814:81:8",
													"nodeType": "YulBlock",
													"src": "814:81:8",
													"statements": [
														{
															"nativeSrc": "824:65:8",
															"nodeType": "YulAssignment",
															"src": "824:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:8",
																		"nodeType": "YulLiteral",
																		"src": "846:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:8"
																},
																"nativeSrc": "835:54:8",
																"nodeType": "YulFunctionCall",
																"src": "835:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:8",
														"nodeType": "YulTypedName",
														"src": "796:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:8",
														"nodeType": "YulTypedName",
														"src": "806:7:8",
														"type": ""
													}
												],
												"src": "769:126:8"
											},
											{
												"body": {
													"nativeSrc": "946:51:8",
													"nodeType": "YulBlock",
													"src": "946:51:8",
													"statements": [
														{
															"nativeSrc": "956:35:8",
															"nodeType": "YulAssignment",
															"src": "956:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:8"
																},
																"nativeSrc": "967:24:8",
																"nodeType": "YulFunctionCall",
																"src": "967:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:8",
														"nodeType": "YulTypedName",
														"src": "928:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:8",
														"nodeType": "YulTypedName",
														"src": "938:7:8",
														"type": ""
													}
												],
												"src": "901:96:8"
											},
											{
												"body": {
													"nativeSrc": "1046:79:8",
													"nodeType": "YulBlock",
													"src": "1046:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:8",
																"nodeType": "YulBlock",
																"src": "1103:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:8"
																			},
																			"nativeSrc": "1105:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:8"
																		},
																		"nativeSrc": "1105:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:8"
																				},
																				"nativeSrc": "1076:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:8"
																		},
																		"nativeSrc": "1066:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:8"
																},
																"nativeSrc": "1059:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:8"
															},
															"nativeSrc": "1056:63:8",
															"nodeType": "YulIf",
															"src": "1056:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:8",
														"nodeType": "YulTypedName",
														"src": "1039:5:8",
														"type": ""
													}
												],
												"src": "1003:122:8"
											},
											{
												"body": {
													"nativeSrc": "1183:87:8",
													"nodeType": "YulBlock",
													"src": "1183:87:8",
													"statements": [
														{
															"nativeSrc": "1193:29:8",
															"nodeType": "YulAssignment",
															"src": "1193:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:8"
																},
																"nativeSrc": "1202:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:8"
																},
																"nativeSrc": "1231:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:8"
															},
															"nativeSrc": "1231:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:8",
														"nodeType": "YulTypedName",
														"src": "1161:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:8",
														"nodeType": "YulTypedName",
														"src": "1169:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:8",
														"nodeType": "YulTypedName",
														"src": "1177:5:8",
														"type": ""
													}
												],
												"src": "1131:139:8"
											},
											{
												"body": {
													"nativeSrc": "1342:263:8",
													"nodeType": "YulBlock",
													"src": "1342:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:8",
																"nodeType": "YulBlock",
																"src": "1388:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:8"
																			},
																			"nativeSrc": "1390:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:8"
																		},
																		"nativeSrc": "1390:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:8"
																		},
																		"nativeSrc": "1359:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:8"
																},
																"nativeSrc": "1355:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:8"
															},
															"nativeSrc": "1352:119:8",
															"nodeType": "YulIf",
															"src": "1352:119:8"
														},
														{
															"nativeSrc": "1481:117:8",
															"nodeType": "YulBlock",
															"src": "1481:117:8",
															"statements": [
																{
																	"nativeSrc": "1496:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:8",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:8"
																				},
																				"nativeSrc": "1556:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:8"
																		},
																		"nativeSrc": "1535:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:8",
														"nodeType": "YulTypedName",
														"src": "1312:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:8",
														"nodeType": "YulTypedName",
														"src": "1323:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:8",
														"nodeType": "YulTypedName",
														"src": "1335:6:8",
														"type": ""
													}
												],
												"src": "1276:329:8"
											},
											{
												"body": {
													"nativeSrc": "1676:53:8",
													"nodeType": "YulBlock",
													"src": "1676:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:8"
																		},
																		"nativeSrc": "1698:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:8"
																},
																"nativeSrc": "1686:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:8"
															},
															"nativeSrc": "1686:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:8",
														"nodeType": "YulTypedName",
														"src": "1664:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:8",
														"nodeType": "YulTypedName",
														"src": "1671:3:8",
														"type": ""
													}
												],
												"src": "1611:118:8"
											},
											{
												"body": {
													"nativeSrc": "1833:124:8",
													"nodeType": "YulBlock",
													"src": "1833:124:8",
													"statements": [
														{
															"nativeSrc": "1843:26:8",
															"nodeType": "YulAssignment",
															"src": "1843:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:8"
																},
																"nativeSrc": "1851:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:8"
																		},
																		"nativeSrc": "1932:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:8"
																},
																"nativeSrc": "1879:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:8"
															},
															"nativeSrc": "1879:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:8",
														"nodeType": "YulTypedName",
														"src": "1805:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:8",
														"nodeType": "YulTypedName",
														"src": "1817:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:8",
														"nodeType": "YulTypedName",
														"src": "1828:4:8",
														"type": ""
													}
												],
												"src": "1735:222:8"
											},
											{
												"body": {
													"nativeSrc": "2046:391:8",
													"nodeType": "YulBlock",
													"src": "2046:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2092:83:8",
																"nodeType": "YulBlock",
																"src": "2092:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2094:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2094:77:8"
																			},
																			"nativeSrc": "2094:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2094:79:8"
																		},
																		"nativeSrc": "2094:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2094:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2067:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2067:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2076:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2076:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2063:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2063:3:8"
																		},
																		"nativeSrc": "2063:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2063:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2088:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2088:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2059:3:8"
																},
																"nativeSrc": "2059:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2059:32:8"
															},
															"nativeSrc": "2056:119:8",
															"nodeType": "YulIf",
															"src": "2056:119:8"
														},
														{
															"nativeSrc": "2185:117:8",
															"nodeType": "YulBlock",
															"src": "2185:117:8",
															"statements": [
																{
																	"nativeSrc": "2200:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2200:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2214:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2214:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2229:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2229:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2264:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2264:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2275:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2275:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2260:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2260:3:8"
																				},
																				"nativeSrc": "2260:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2260:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2284:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2284:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2239:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2239:20:8"
																		},
																		"nativeSrc": "2239:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2239:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2229:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2229:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2312:118:8",
															"nodeType": "YulBlock",
															"src": "2312:118:8",
															"statements": [
																{
																	"nativeSrc": "2327:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2327:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2341:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2341:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2331:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2331:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2357:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2357:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2392:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2392:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2403:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2403:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2388:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2388:3:8"
																				},
																				"nativeSrc": "2388:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2388:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2412:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2412:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2367:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2367:20:8"
																		},
																		"nativeSrc": "2367:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2357:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2357:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1963:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2008:9:8",
														"nodeType": "YulTypedName",
														"src": "2008:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2019:7:8",
														"nodeType": "YulTypedName",
														"src": "2019:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2031:6:8",
														"nodeType": "YulTypedName",
														"src": "2031:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2039:6:8",
														"nodeType": "YulTypedName",
														"src": "2039:6:8",
														"type": ""
													}
												],
												"src": "1963:474:8"
											},
											{
												"body": {
													"nativeSrc": "2485:48:8",
													"nodeType": "YulBlock",
													"src": "2485:48:8",
													"statements": [
														{
															"nativeSrc": "2495:32:8",
															"nodeType": "YulAssignment",
															"src": "2495:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2520:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2520:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2513:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2513:6:8"
																		},
																		"nativeSrc": "2513:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2513:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2506:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:8"
																},
																"nativeSrc": "2506:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2506:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2495:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2495:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2443:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2467:5:8",
														"nodeType": "YulTypedName",
														"src": "2467:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2477:7:8",
														"nodeType": "YulTypedName",
														"src": "2477:7:8",
														"type": ""
													}
												],
												"src": "2443:90:8"
											},
											{
												"body": {
													"nativeSrc": "2598:50:8",
													"nodeType": "YulBlock",
													"src": "2598:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2615:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2615:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2635:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2635:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2620:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "2620:14:8"
																		},
																		"nativeSrc": "2620:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2620:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2608:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:8"
																},
																"nativeSrc": "2608:34:8",
																"nodeType": "YulFunctionCall",
																"src": "2608:34:8"
															},
															"nativeSrc": "2608:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "2608:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2539:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2586:5:8",
														"nodeType": "YulTypedName",
														"src": "2586:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2593:3:8",
														"nodeType": "YulTypedName",
														"src": "2593:3:8",
														"type": ""
													}
												],
												"src": "2539:109:8"
											},
											{
												"body": {
													"nativeSrc": "2746:118:8",
													"nodeType": "YulBlock",
													"src": "2746:118:8",
													"statements": [
														{
															"nativeSrc": "2756:26:8",
															"nodeType": "YulAssignment",
															"src": "2756:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2764:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:8"
																},
																"nativeSrc": "2764:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2764:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2756:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2830:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2830:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2843:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2854:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2854:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2839:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2839:3:8"
																		},
																		"nativeSrc": "2839:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2839:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2792:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "2792:37:8"
																},
																"nativeSrc": "2792:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2792:65:8"
															},
															"nativeSrc": "2792:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2792:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2654:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2718:9:8",
														"nodeType": "YulTypedName",
														"src": "2718:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2730:6:8",
														"nodeType": "YulTypedName",
														"src": "2730:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2741:4:8",
														"nodeType": "YulTypedName",
														"src": "2741:4:8",
														"type": ""
													}
												],
												"src": "2654:210:8"
											},
											{
												"body": {
													"nativeSrc": "2914:57:8",
													"nodeType": "YulBlock",
													"src": "2914:57:8",
													"statements": [
														{
															"nativeSrc": "2924:41:8",
															"nodeType": "YulAssignment",
															"src": "2924:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2939:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2939:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2946:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2946:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2935:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2935:3:8"
																},
																"nativeSrc": "2935:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2935:30:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2924:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2924:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "2870:101:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2896:5:8",
														"nodeType": "YulTypedName",
														"src": "2896:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2906:7:8",
														"nodeType": "YulTypedName",
														"src": "2906:7:8",
														"type": ""
													}
												],
												"src": "2870:101:8"
											},
											{
												"body": {
													"nativeSrc": "3019:78:8",
													"nodeType": "YulBlock",
													"src": "3019:78:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3075:16:8",
																"nodeType": "YulBlock",
																"src": "3075:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3084:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3084:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3087:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3087:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3077:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3077:6:8"
																			},
																			"nativeSrc": "3077:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3077:12:8"
																		},
																		"nativeSrc": "3077:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3077:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3042:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3042:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3066:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3066:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "3049:16:8",
																					"nodeType": "YulIdentifier",
																					"src": "3049:16:8"
																				},
																				"nativeSrc": "3049:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3049:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3039:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3039:2:8"
																		},
																		"nativeSrc": "3039:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3039:34:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3032:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:8"
																},
																"nativeSrc": "3032:42:8",
																"nodeType": "YulFunctionCall",
																"src": "3032:42:8"
															},
															"nativeSrc": "3029:62:8",
															"nodeType": "YulIf",
															"src": "3029:62:8"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "2977:120:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3012:5:8",
														"nodeType": "YulTypedName",
														"src": "3012:5:8",
														"type": ""
													}
												],
												"src": "2977:120:8"
											},
											{
												"body": {
													"nativeSrc": "3154:86:8",
													"nodeType": "YulBlock",
													"src": "3154:86:8",
													"statements": [
														{
															"nativeSrc": "3164:29:8",
															"nodeType": "YulAssignment",
															"src": "3164:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3186:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3186:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3173:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3173:12:8"
																},
																"nativeSrc": "3173:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3173:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3164:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3164:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3228:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3228:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "3202:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "3202:25:8"
																},
																"nativeSrc": "3202:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3202:32:8"
															},
															"nativeSrc": "3202:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "3202:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nativeSrc": "3103:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3132:6:8",
														"nodeType": "YulTypedName",
														"src": "3132:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3140:3:8",
														"nodeType": "YulTypedName",
														"src": "3140:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3148:5:8",
														"nodeType": "YulTypedName",
														"src": "3148:5:8",
														"type": ""
													}
												],
												"src": "3103:137:8"
											},
											{
												"body": {
													"nativeSrc": "3328:390:8",
													"nodeType": "YulBlock",
													"src": "3328:390:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3374:83:8",
																"nodeType": "YulBlock",
																"src": "3374:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3376:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3376:77:8"
																			},
																			"nativeSrc": "3376:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3376:79:8"
																		},
																		"nativeSrc": "3376:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3376:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3349:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3349:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3358:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3358:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3345:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3345:3:8"
																		},
																		"nativeSrc": "3345:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3345:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3370:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3370:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3341:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3341:3:8"
																},
																"nativeSrc": "3341:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3341:32:8"
															},
															"nativeSrc": "3338:119:8",
															"nodeType": "YulIf",
															"src": "3338:119:8"
														},
														{
															"nativeSrc": "3467:117:8",
															"nodeType": "YulBlock",
															"src": "3467:117:8",
															"statements": [
																{
																	"nativeSrc": "3482:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3482:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3496:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3496:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3486:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3486:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3511:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3511:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3546:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3546:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3557:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3557:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3542:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3542:3:8"
																				},
																				"nativeSrc": "3542:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3542:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3566:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3566:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3521:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3521:20:8"
																		},
																		"nativeSrc": "3521:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3521:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3511:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3511:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3594:117:8",
															"nodeType": "YulBlock",
															"src": "3594:117:8",
															"statements": [
																{
																	"nativeSrc": "3609:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3609:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3623:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3623:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3613:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3613:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3639:62:8",
																	"nodeType": "YulAssignment",
																	"src": "3639:62:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3673:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3673:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3684:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3684:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3669:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3669:3:8"
																				},
																				"nativeSrc": "3669:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3669:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3693:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3693:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "3649:19:8",
																			"nodeType": "YulIdentifier",
																			"src": "3649:19:8"
																		},
																		"nativeSrc": "3649:52:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3649:52:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3639:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3639:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint64",
												"nativeSrc": "3246:472:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3290:9:8",
														"nodeType": "YulTypedName",
														"src": "3290:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3301:7:8",
														"nodeType": "YulTypedName",
														"src": "3301:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3313:6:8",
														"nodeType": "YulTypedName",
														"src": "3313:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3321:6:8",
														"nodeType": "YulTypedName",
														"src": "3321:6:8",
														"type": ""
													}
												],
												"src": "3246:472:8"
											},
											{
												"body": {
													"nativeSrc": "3786:79:8",
													"nodeType": "YulBlock",
													"src": "3786:79:8",
													"statements": [
														{
															"nativeSrc": "3796:22:8",
															"nodeType": "YulAssignment",
															"src": "3796:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3811:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3811:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3805:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3805:5:8"
																},
																"nativeSrc": "3805:13:8",
																"nodeType": "YulFunctionCall",
																"src": "3805:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3796:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3796:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3853:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3853:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "3827:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "3827:25:8"
																},
																"nativeSrc": "3827:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3827:32:8"
															},
															"nativeSrc": "3827:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "3827:32:8"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nativeSrc": "3724:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3764:6:8",
														"nodeType": "YulTypedName",
														"src": "3764:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3772:3:8",
														"nodeType": "YulTypedName",
														"src": "3772:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3780:5:8",
														"nodeType": "YulTypedName",
														"src": "3780:5:8",
														"type": ""
													}
												],
												"src": "3724:141:8"
											},
											{
												"body": {
													"nativeSrc": "3947:273:8",
													"nodeType": "YulBlock",
													"src": "3947:273:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3993:83:8",
																"nodeType": "YulBlock",
																"src": "3993:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3995:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3995:77:8"
																			},
																			"nativeSrc": "3995:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3995:79:8"
																		},
																		"nativeSrc": "3995:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3995:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3968:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3968:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3977:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3977:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3964:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3964:3:8"
																		},
																		"nativeSrc": "3964:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3964:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3989:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3960:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3960:3:8"
																},
																"nativeSrc": "3960:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3960:32:8"
															},
															"nativeSrc": "3957:119:8",
															"nodeType": "YulIf",
															"src": "3957:119:8"
														},
														{
															"nativeSrc": "4086:127:8",
															"nodeType": "YulBlock",
															"src": "4086:127:8",
															"statements": [
																{
																	"nativeSrc": "4101:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4101:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4115:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4115:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4105:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4105:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4130:73:8",
																	"nodeType": "YulAssignment",
																	"src": "4130:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4175:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4175:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4186:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4186:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4171:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4171:3:8"
																				},
																				"nativeSrc": "4171:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4171:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4195:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4195:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64_fromMemory",
																			"nativeSrc": "4140:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "4140:30:8"
																		},
																		"nativeSrc": "4140:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4140:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4130:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4130:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64_fromMemory",
												"nativeSrc": "3871:349:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3917:9:8",
														"nodeType": "YulTypedName",
														"src": "3917:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3928:7:8",
														"nodeType": "YulTypedName",
														"src": "3928:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3940:6:8",
														"nodeType": "YulTypedName",
														"src": "3940:6:8",
														"type": ""
													}
												],
												"src": "3871:349:8"
											},
											{
												"body": {
													"nativeSrc": "4254:152:8",
													"nodeType": "YulBlock",
													"src": "4254:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4271:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4271:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4274:77:8",
																		"nodeType": "YulLiteral",
																		"src": "4274:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4264:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4264:6:8"
																},
																"nativeSrc": "4264:88:8",
																"nodeType": "YulFunctionCall",
																"src": "4264:88:8"
															},
															"nativeSrc": "4264:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "4264:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4368:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4368:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4371:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4371:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4361:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:8"
																},
																"nativeSrc": "4361:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4361:15:8"
															},
															"nativeSrc": "4361:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4361:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4392:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4392:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4395:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4395:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4385:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4385:6:8"
																},
																"nativeSrc": "4385:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4385:15:8"
															},
															"nativeSrc": "4385:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4385:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4226:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4226:180:8"
											},
											{
												"body": {
													"nativeSrc": "4456:147:8",
													"nodeType": "YulBlock",
													"src": "4456:147:8",
													"statements": [
														{
															"nativeSrc": "4466:25:8",
															"nodeType": "YulAssignment",
															"src": "4466:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4489:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4489:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4471:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4471:17:8"
																},
																"nativeSrc": "4471:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4471:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4466:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "4466:1:8"
																}
															]
														},
														{
															"nativeSrc": "4500:25:8",
															"nodeType": "YulAssignment",
															"src": "4500:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4523:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4523:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4505:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4505:17:8"
																},
																"nativeSrc": "4505:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4505:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4500:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "4500:1:8"
																}
															]
														},
														{
															"nativeSrc": "4534:16:8",
															"nodeType": "YulAssignment",
															"src": "4534:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4545:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4545:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4548:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4548:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4541:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4541:3:8"
																},
																"nativeSrc": "4541:9:8",
																"nodeType": "YulFunctionCall",
																"src": "4541:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4534:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4534:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4574:22:8",
																"nodeType": "YulBlock",
																"src": "4574:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4576:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4576:16:8"
																			},
																			"nativeSrc": "4576:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4576:18:8"
																		},
																		"nativeSrc": "4576:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4576:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4566:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4566:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4569:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4563:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4563:2:8"
																},
																"nativeSrc": "4563:10:8",
																"nodeType": "YulFunctionCall",
																"src": "4563:10:8"
															},
															"nativeSrc": "4560:36:8",
															"nodeType": "YulIf",
															"src": "4560:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4412:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4443:1:8",
														"nodeType": "YulTypedName",
														"src": "4443:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4446:1:8",
														"nodeType": "YulTypedName",
														"src": "4446:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4452:3:8",
														"nodeType": "YulTypedName",
														"src": "4452:3:8",
														"type": ""
													}
												],
												"src": "4412:191:8"
											},
											{
												"body": {
													"nativeSrc": "4705:73:8",
													"nodeType": "YulBlock",
													"src": "4705:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4722:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4722:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4727:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4727:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4715:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:8"
																},
																"nativeSrc": "4715:19:8",
																"nodeType": "YulFunctionCall",
																"src": "4715:19:8"
															},
															"nativeSrc": "4715:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "4715:19:8"
														},
														{
															"nativeSrc": "4743:29:8",
															"nodeType": "YulAssignment",
															"src": "4743:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4762:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4762:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4767:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4767:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4758:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4758:3:8"
																},
																"nativeSrc": "4758:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4758:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4743:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "4743:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4609:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4677:3:8",
														"nodeType": "YulTypedName",
														"src": "4677:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4682:6:8",
														"nodeType": "YulTypedName",
														"src": "4682:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4693:11:8",
														"nodeType": "YulTypedName",
														"src": "4693:11:8",
														"type": ""
													}
												],
												"src": "4609:169:8"
											},
											{
												"body": {
													"nativeSrc": "4890:115:8",
													"nodeType": "YulBlock",
													"src": "4890:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4912:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4912:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4920:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4920:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4908:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4908:3:8"
																		},
																		"nativeSrc": "4908:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4908:14:8"
																	},
																	{
																		"hexValue": "4d616e6167656456657374696e6757616c6c65743a206f6e6c7920666163746f",
																		"kind": "string",
																		"nativeSrc": "4924:34:8",
																		"nodeType": "YulLiteral",
																		"src": "4924:34:8",
																		"type": "",
																		"value": "ManagedVestingWallet: only facto"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4901:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:8"
																},
																"nativeSrc": "4901:58:8",
																"nodeType": "YulFunctionCall",
																"src": "4901:58:8"
															},
															"nativeSrc": "4901:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "4901:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4980:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4980:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4988:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4988:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4976:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4976:3:8"
																		},
																		"nativeSrc": "4976:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:15:8"
																	},
																	{
																		"hexValue": "7279",
																		"kind": "string",
																		"nativeSrc": "4993:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4993:4:8",
																		"type": "",
																		"value": "ry"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4969:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:8"
																},
																"nativeSrc": "4969:29:8",
																"nodeType": "YulFunctionCall",
																"src": "4969:29:8"
															},
															"nativeSrc": "4969:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "4969:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006",
												"nativeSrc": "4784:221:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4882:6:8",
														"nodeType": "YulTypedName",
														"src": "4882:6:8",
														"type": ""
													}
												],
												"src": "4784:221:8"
											},
											{
												"body": {
													"nativeSrc": "5157:220:8",
													"nodeType": "YulBlock",
													"src": "5157:220:8",
													"statements": [
														{
															"nativeSrc": "5167:74:8",
															"nodeType": "YulAssignment",
															"src": "5167:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5233:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5233:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5238:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5238:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5174:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "5174:58:8"
																},
																"nativeSrc": "5174:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5174:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5167:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5167:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5339:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5339:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006",
																	"nativeSrc": "5250:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "5250:88:8"
																},
																"nativeSrc": "5250:93:8",
																"nodeType": "YulFunctionCall",
																"src": "5250:93:8"
															},
															"nativeSrc": "5250:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "5250:93:8"
														},
														{
															"nativeSrc": "5352:19:8",
															"nodeType": "YulAssignment",
															"src": "5352:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5363:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5363:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5368:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5368:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5359:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5359:3:8"
																},
																"nativeSrc": "5359:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5359:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5352:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5011:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5145:3:8",
														"nodeType": "YulTypedName",
														"src": "5145:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5153:3:8",
														"nodeType": "YulTypedName",
														"src": "5153:3:8",
														"type": ""
													}
												],
												"src": "5011:366:8"
											},
											{
												"body": {
													"nativeSrc": "5554:248:8",
													"nodeType": "YulBlock",
													"src": "5554:248:8",
													"statements": [
														{
															"nativeSrc": "5564:26:8",
															"nodeType": "YulAssignment",
															"src": "5564:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5576:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5576:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5587:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5587:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5572:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5572:3:8"
																},
																"nativeSrc": "5572:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5572:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5564:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5564:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5622:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5622:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5607:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5607:3:8"
																		},
																		"nativeSrc": "5607:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5607:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5630:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5630:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5636:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5626:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5626:3:8"
																		},
																		"nativeSrc": "5626:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5626:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5600:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:8"
																},
																"nativeSrc": "5600:47:8",
																"nodeType": "YulFunctionCall",
																"src": "5600:47:8"
															},
															"nativeSrc": "5600:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "5600:47:8"
														},
														{
															"nativeSrc": "5656:139:8",
															"nodeType": "YulAssignment",
															"src": "5656:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5790:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5790:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5664:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "5664:124:8"
																},
																"nativeSrc": "5664:131:8",
																"nodeType": "YulFunctionCall",
																"src": "5664:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5656:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5656:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5383:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5534:9:8",
														"nodeType": "YulTypedName",
														"src": "5534:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5549:4:8",
														"nodeType": "YulTypedName",
														"src": "5549:4:8",
														"type": ""
													}
												],
												"src": "5383:419:8"
											},
											{
												"body": {
													"nativeSrc": "5914:134:8",
													"nodeType": "YulBlock",
													"src": "5914:134:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5936:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5936:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5944:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5944:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5932:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5932:3:8"
																		},
																		"nativeSrc": "5932:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5932:14:8"
																	},
																	{
																		"hexValue": "4d616e6167656456657374696e6757616c6c65743a2076657374696e67206d61",
																		"kind": "string",
																		"nativeSrc": "5948:34:8",
																		"nodeType": "YulLiteral",
																		"src": "5948:34:8",
																		"type": "",
																		"value": "ManagedVestingWallet: vesting ma"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:8"
																},
																"nativeSrc": "5925:58:8",
																"nodeType": "YulFunctionCall",
																"src": "5925:58:8"
															},
															"nativeSrc": "5925:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "5925:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6004:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6004:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6012:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6012:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6000:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6000:3:8"
																		},
																		"nativeSrc": "6000:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6000:15:8"
																	},
																	{
																		"hexValue": "6e61676572206973207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "6017:23:8",
																		"nodeType": "YulLiteral",
																		"src": "6017:23:8",
																		"type": "",
																		"value": "nager is zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5993:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5993:6:8"
																},
																"nativeSrc": "5993:48:8",
																"nodeType": "YulFunctionCall",
																"src": "5993:48:8"
															},
															"nativeSrc": "5993:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "5993:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24",
												"nativeSrc": "5808:240:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5906:6:8",
														"nodeType": "YulTypedName",
														"src": "5906:6:8",
														"type": ""
													}
												],
												"src": "5808:240:8"
											},
											{
												"body": {
													"nativeSrc": "6200:220:8",
													"nodeType": "YulBlock",
													"src": "6200:220:8",
													"statements": [
														{
															"nativeSrc": "6210:74:8",
															"nodeType": "YulAssignment",
															"src": "6210:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6276:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6276:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6281:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6281:2:8",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6217:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "6217:58:8"
																},
																"nativeSrc": "6217:67:8",
																"nodeType": "YulFunctionCall",
																"src": "6217:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6210:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6210:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6382:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6382:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24",
																	"nativeSrc": "6293:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "6293:88:8"
																},
																"nativeSrc": "6293:93:8",
																"nodeType": "YulFunctionCall",
																"src": "6293:93:8"
															},
															"nativeSrc": "6293:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "6293:93:8"
														},
														{
															"nativeSrc": "6395:19:8",
															"nodeType": "YulAssignment",
															"src": "6395:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6406:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6406:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6411:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6411:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6402:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6402:3:8"
																},
																"nativeSrc": "6402:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6402:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6395:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6395:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6054:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6188:3:8",
														"nodeType": "YulTypedName",
														"src": "6188:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6196:3:8",
														"nodeType": "YulTypedName",
														"src": "6196:3:8",
														"type": ""
													}
												],
												"src": "6054:366:8"
											},
											{
												"body": {
													"nativeSrc": "6597:248:8",
													"nodeType": "YulBlock",
													"src": "6597:248:8",
													"statements": [
														{
															"nativeSrc": "6607:26:8",
															"nodeType": "YulAssignment",
															"src": "6607:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6619:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6619:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6630:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6630:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6615:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6615:3:8"
																},
																"nativeSrc": "6615:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6615:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6607:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6607:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6654:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6654:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6665:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6665:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6650:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:8"
																		},
																		"nativeSrc": "6650:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6673:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "6673:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6679:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6679:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6669:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6669:3:8"
																		},
																		"nativeSrc": "6669:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6669:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6643:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:8"
																},
																"nativeSrc": "6643:47:8",
																"nodeType": "YulFunctionCall",
																"src": "6643:47:8"
															},
															"nativeSrc": "6643:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "6643:47:8"
														},
														{
															"nativeSrc": "6699:139:8",
															"nodeType": "YulAssignment",
															"src": "6699:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6833:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6833:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6707:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "6707:124:8"
																},
																"nativeSrc": "6707:131:8",
																"nodeType": "YulFunctionCall",
																"src": "6707:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6699:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6699:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6426:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6577:9:8",
														"nodeType": "YulTypedName",
														"src": "6577:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6592:4:8",
														"nodeType": "YulTypedName",
														"src": "6592:4:8",
														"type": ""
													}
												],
												"src": "6426:419:8"
											},
											{
												"body": {
													"nativeSrc": "6957:130:8",
													"nodeType": "YulBlock",
													"src": "6957:130:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6979:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6979:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6975:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6975:3:8"
																		},
																		"nativeSrc": "6975:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6975:14:8"
																	},
																	{
																		"hexValue": "4d616e6167656456657374696e6757616c6c65743a2062656e65666963696172",
																		"kind": "string",
																		"nativeSrc": "6991:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6991:34:8",
																		"type": "",
																		"value": "ManagedVestingWallet: beneficiar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6968:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6968:6:8"
																},
																"nativeSrc": "6968:58:8",
																"nodeType": "YulFunctionCall",
																"src": "6968:58:8"
															},
															"nativeSrc": "6968:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "6968:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7047:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7047:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7055:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7055:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7043:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7043:3:8"
																		},
																		"nativeSrc": "7043:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7043:15:8"
																	},
																	{
																		"hexValue": "79206973207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7060:19:8",
																		"nodeType": "YulLiteral",
																		"src": "7060:19:8",
																		"type": "",
																		"value": "y is zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7036:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:8"
																},
																"nativeSrc": "7036:44:8",
																"nodeType": "YulFunctionCall",
																"src": "7036:44:8"
															},
															"nativeSrc": "7036:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "7036:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf",
												"nativeSrc": "6851:236:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6949:6:8",
														"nodeType": "YulTypedName",
														"src": "6949:6:8",
														"type": ""
													}
												],
												"src": "6851:236:8"
											},
											{
												"body": {
													"nativeSrc": "7239:220:8",
													"nodeType": "YulBlock",
													"src": "7239:220:8",
													"statements": [
														{
															"nativeSrc": "7249:74:8",
															"nodeType": "YulAssignment",
															"src": "7249:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7315:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7315:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7320:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7320:2:8",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7256:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7256:58:8"
																},
																"nativeSrc": "7256:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7256:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7249:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7421:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf",
																	"nativeSrc": "7332:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7332:88:8"
																},
																"nativeSrc": "7332:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7332:93:8"
															},
															"nativeSrc": "7332:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7332:93:8"
														},
														{
															"nativeSrc": "7434:19:8",
															"nodeType": "YulAssignment",
															"src": "7434:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7445:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7445:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7450:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7450:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7441:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7441:3:8"
																},
																"nativeSrc": "7441:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7441:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7434:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7434:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7093:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7227:3:8",
														"nodeType": "YulTypedName",
														"src": "7227:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7235:3:8",
														"nodeType": "YulTypedName",
														"src": "7235:3:8",
														"type": ""
													}
												],
												"src": "7093:366:8"
											},
											{
												"body": {
													"nativeSrc": "7636:248:8",
													"nodeType": "YulBlock",
													"src": "7636:248:8",
													"statements": [
														{
															"nativeSrc": "7646:26:8",
															"nodeType": "YulAssignment",
															"src": "7646:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7658:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7658:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7669:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7669:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7654:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:8"
																},
																"nativeSrc": "7654:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7654:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7646:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7646:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7693:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7693:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7704:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7704:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7689:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7689:3:8"
																		},
																		"nativeSrc": "7689:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7689:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7712:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7712:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7718:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7718:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7708:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:8"
																		},
																		"nativeSrc": "7708:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7682:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7682:6:8"
																},
																"nativeSrc": "7682:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7682:47:8"
															},
															"nativeSrc": "7682:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7682:47:8"
														},
														{
															"nativeSrc": "7738:139:8",
															"nodeType": "YulAssignment",
															"src": "7738:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7872:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7872:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7746:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7746:124:8"
																},
																"nativeSrc": "7746:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7746:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7738:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7738:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7465:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7616:9:8",
														"nodeType": "YulTypedName",
														"src": "7616:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7631:4:8",
														"nodeType": "YulTypedName",
														"src": "7631:4:8",
														"type": ""
													}
												],
												"src": "7465:419:8"
											},
											{
												"body": {
													"nativeSrc": "7933:79:8",
													"nodeType": "YulBlock",
													"src": "7933:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7990:16:8",
																"nodeType": "YulBlock",
																"src": "7990:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7999:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7999:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8002:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8002:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7992:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7992:6:8"
																			},
																			"nativeSrc": "7992:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7992:12:8"
																		},
																		"nativeSrc": "7992:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7992:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7956:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7956:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7981:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7981:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7963:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "7963:17:8"
																				},
																				"nativeSrc": "7963:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7963:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7953:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7953:2:8"
																		},
																		"nativeSrc": "7953:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7953:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7946:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:8"
																},
																"nativeSrc": "7946:43:8",
																"nodeType": "YulFunctionCall",
																"src": "7946:43:8"
															},
															"nativeSrc": "7943:63:8",
															"nodeType": "YulIf",
															"src": "7943:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7890:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7926:5:8",
														"nodeType": "YulTypedName",
														"src": "7926:5:8",
														"type": ""
													}
												],
												"src": "7890:122:8"
											},
											{
												"body": {
													"nativeSrc": "8081:80:8",
													"nodeType": "YulBlock",
													"src": "8081:80:8",
													"statements": [
														{
															"nativeSrc": "8091:22:8",
															"nodeType": "YulAssignment",
															"src": "8091:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8106:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8106:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8100:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8100:5:8"
																},
																"nativeSrc": "8100:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8100:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8091:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8091:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8149:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8149:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8122:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "8122:26:8"
																},
																"nativeSrc": "8122:33:8",
																"nodeType": "YulFunctionCall",
																"src": "8122:33:8"
															},
															"nativeSrc": "8122:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "8122:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8018:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8059:6:8",
														"nodeType": "YulTypedName",
														"src": "8059:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8067:3:8",
														"nodeType": "YulTypedName",
														"src": "8067:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8075:5:8",
														"nodeType": "YulTypedName",
														"src": "8075:5:8",
														"type": ""
													}
												],
												"src": "8018:143:8"
											},
											{
												"body": {
													"nativeSrc": "8244:274:8",
													"nodeType": "YulBlock",
													"src": "8244:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8290:83:8",
																"nodeType": "YulBlock",
																"src": "8290:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8292:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8292:77:8"
																			},
																			"nativeSrc": "8292:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8292:79:8"
																		},
																		"nativeSrc": "8292:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8292:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8265:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8265:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8274:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8274:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8261:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8261:3:8"
																		},
																		"nativeSrc": "8261:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8261:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8286:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8286:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8257:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8257:3:8"
																},
																"nativeSrc": "8257:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8257:32:8"
															},
															"nativeSrc": "8254:119:8",
															"nodeType": "YulIf",
															"src": "8254:119:8"
														},
														{
															"nativeSrc": "8383:128:8",
															"nodeType": "YulBlock",
															"src": "8383:128:8",
															"statements": [
																{
																	"nativeSrc": "8398:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8398:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8412:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8412:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8402:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8402:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8427:74:8",
																	"nodeType": "YulAssignment",
																	"src": "8427:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8473:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8473:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8484:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8484:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8469:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8469:3:8"
																				},
																				"nativeSrc": "8469:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8469:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8493:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8493:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8437:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "8437:31:8"
																		},
																		"nativeSrc": "8437:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8437:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8427:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8427:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8167:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8214:9:8",
														"nodeType": "YulTypedName",
														"src": "8214:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8225:7:8",
														"nodeType": "YulTypedName",
														"src": "8225:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8237:6:8",
														"nodeType": "YulTypedName",
														"src": "8237:6:8",
														"type": ""
													}
												],
												"src": "8167:351:8"
											},
											{
												"body": {
													"nativeSrc": "8569:149:8",
													"nodeType": "YulBlock",
													"src": "8569:149:8",
													"statements": [
														{
															"nativeSrc": "8579:25:8",
															"nodeType": "YulAssignment",
															"src": "8579:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8602:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8602:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8584:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8584:17:8"
																},
																"nativeSrc": "8584:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8584:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8579:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8579:1:8"
																}
															]
														},
														{
															"nativeSrc": "8613:25:8",
															"nodeType": "YulAssignment",
															"src": "8613:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8636:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8636:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8618:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8618:17:8"
																},
																"nativeSrc": "8618:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8618:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8613:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8613:1:8"
																}
															]
														},
														{
															"nativeSrc": "8647:17:8",
															"nodeType": "YulAssignment",
															"src": "8647:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8659:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8659:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8662:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8662:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8655:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8655:3:8"
																},
																"nativeSrc": "8655:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8655:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8647:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8647:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8689:22:8",
																"nodeType": "YulBlock",
																"src": "8689:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8691:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8691:16:8"
																			},
																			"nativeSrc": "8691:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8691:18:8"
																		},
																		"nativeSrc": "8691:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8691:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8680:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8680:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8686:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8686:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8677:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8677:2:8"
																},
																"nativeSrc": "8677:11:8",
																"nodeType": "YulFunctionCall",
																"src": "8677:11:8"
															},
															"nativeSrc": "8674:37:8",
															"nodeType": "YulIf",
															"src": "8674:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8524:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8555:1:8",
														"nodeType": "YulTypedName",
														"src": "8555:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8558:1:8",
														"nodeType": "YulTypedName",
														"src": "8558:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8564:4:8",
														"nodeType": "YulTypedName",
														"src": "8564:4:8",
														"type": ""
													}
												],
												"src": "8524:194:8"
											},
											{
												"body": {
													"nativeSrc": "8850:206:8",
													"nodeType": "YulBlock",
													"src": "8850:206:8",
													"statements": [
														{
															"nativeSrc": "8860:26:8",
															"nodeType": "YulAssignment",
															"src": "8860:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8872:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8872:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8883:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8883:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8868:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8868:3:8"
																},
																"nativeSrc": "8868:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8868:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8860:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8860:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8940:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8940:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8953:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8953:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8964:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8964:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8949:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8949:3:8"
																		},
																		"nativeSrc": "8949:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8949:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8896:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8896:43:8"
																},
																"nativeSrc": "8896:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8896:71:8"
															},
															"nativeSrc": "8896:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8896:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9021:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9021:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9034:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9034:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9045:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9045:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9030:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9030:3:8"
																		},
																		"nativeSrc": "9030:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9030:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8977:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8977:43:8"
																},
																"nativeSrc": "8977:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8977:72:8"
															},
															"nativeSrc": "8977:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8977:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8724:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8814:9:8",
														"nodeType": "YulTypedName",
														"src": "8814:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8826:6:8",
														"nodeType": "YulTypedName",
														"src": "8826:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8834:6:8",
														"nodeType": "YulTypedName",
														"src": "8834:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8845:4:8",
														"nodeType": "YulTypedName",
														"src": "8845:4:8",
														"type": ""
													}
												],
												"src": "8724:332:8"
											},
											{
												"body": {
													"nativeSrc": "9110:362:8",
													"nodeType": "YulBlock",
													"src": "9110:362:8",
													"statements": [
														{
															"nativeSrc": "9120:25:8",
															"nodeType": "YulAssignment",
															"src": "9120:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9143:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9143:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9125:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9125:17:8"
																},
																"nativeSrc": "9125:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9125:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9120:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9120:1:8"
																}
															]
														},
														{
															"nativeSrc": "9154:25:8",
															"nodeType": "YulAssignment",
															"src": "9154:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9177:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9177:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9159:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9159:17:8"
																},
																"nativeSrc": "9159:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9159:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9154:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9154:1:8"
																}
															]
														},
														{
															"nativeSrc": "9188:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9188:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9211:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9211:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9214:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9214:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9207:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9207:3:8"
																},
																"nativeSrc": "9207:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9207:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9192:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9192:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9225:41:8",
															"nodeType": "YulAssignment",
															"src": "9225:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9254:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9254:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9236:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9236:17:8"
																},
																"nativeSrc": "9236:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9236:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9225:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9225:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9443:22:8",
																"nodeType": "YulBlock",
																"src": "9443:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9445:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9445:16:8"
																			},
																			"nativeSrc": "9445:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9445:18:8"
																		},
																		"nativeSrc": "9445:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9445:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9376:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9376:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9369:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9369:6:8"
																				},
																				"nativeSrc": "9369:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9369:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9399:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9399:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9406:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9406:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9415:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9415:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9402:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9402:3:8"
																						},
																						"nativeSrc": "9402:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9402:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9396:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9396:2:8"
																				},
																				"nativeSrc": "9396:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9396:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9349:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9349:2:8"
																		},
																		"nativeSrc": "9349:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9349:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9329:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9329:6:8"
																},
																"nativeSrc": "9329:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9329:113:8"
															},
															"nativeSrc": "9326:139:8",
															"nodeType": "YulIf",
															"src": "9326:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9062:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9093:1:8",
														"nodeType": "YulTypedName",
														"src": "9093:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9096:1:8",
														"nodeType": "YulTypedName",
														"src": "9096:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9102:7:8",
														"nodeType": "YulTypedName",
														"src": "9102:7:8",
														"type": ""
													}
												],
												"src": "9062:410:8"
											},
											{
												"body": {
													"nativeSrc": "9506:152:8",
													"nodeType": "YulBlock",
													"src": "9506:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9523:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9523:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9526:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9526:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9516:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9516:6:8"
																},
																"nativeSrc": "9516:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9516:88:8"
															},
															"nativeSrc": "9516:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9516:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9620:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9620:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9623:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9623:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9613:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9613:6:8"
																},
																"nativeSrc": "9613:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9613:15:8"
															},
															"nativeSrc": "9613:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9613:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9644:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9644:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9647:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9647:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9637:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9637:6:8"
																},
																"nativeSrc": "9637:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9637:15:8"
															},
															"nativeSrc": "9637:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9637:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9478:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9478:180:8"
											},
											{
												"body": {
													"nativeSrc": "9706:143:8",
													"nodeType": "YulBlock",
													"src": "9706:143:8",
													"statements": [
														{
															"nativeSrc": "9716:25:8",
															"nodeType": "YulAssignment",
															"src": "9716:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9739:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9739:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9721:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9721:17:8"
																},
																"nativeSrc": "9721:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9721:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9716:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9716:1:8"
																}
															]
														},
														{
															"nativeSrc": "9750:25:8",
															"nodeType": "YulAssignment",
															"src": "9750:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9773:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9773:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9755:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9755:17:8"
																},
																"nativeSrc": "9755:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9755:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9750:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9750:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9797:22:8",
																"nodeType": "YulBlock",
																"src": "9797:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9799:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9799:16:8"
																			},
																			"nativeSrc": "9799:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9799:18:8"
																		},
																		"nativeSrc": "9799:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9799:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9794:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9794:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9787:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9787:6:8"
																},
																"nativeSrc": "9787:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9787:9:8"
															},
															"nativeSrc": "9784:35:8",
															"nodeType": "YulIf",
															"src": "9784:35:8"
														},
														{
															"nativeSrc": "9829:14:8",
															"nodeType": "YulAssignment",
															"src": "9829:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9838:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9838:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9841:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9841:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9834:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9834:3:8"
																},
																"nativeSrc": "9834:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9834:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9829:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9829:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9664:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9695:1:8",
														"nodeType": "YulTypedName",
														"src": "9695:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9698:1:8",
														"nodeType": "YulTypedName",
														"src": "9698:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9704:1:8",
														"nodeType": "YulTypedName",
														"src": "9704:1:8",
														"type": ""
													}
												],
												"src": "9664:185:8"
											},
											{
												"body": {
													"nativeSrc": "9895:76:8",
													"nodeType": "YulBlock",
													"src": "9895:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9949:16:8",
																"nodeType": "YulBlock",
																"src": "9949:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9958:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9958:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9961:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9961:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9951:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9951:6:8"
																			},
																			"nativeSrc": "9951:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9951:12:8"
																		},
																		"nativeSrc": "9951:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9951:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9918:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9918:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9940:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9940:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9925:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "9925:14:8"
																				},
																				"nativeSrc": "9925:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9925:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9915:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9915:2:8"
																		},
																		"nativeSrc": "9915:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9915:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9908:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9908:6:8"
																},
																"nativeSrc": "9908:40:8",
																"nodeType": "YulFunctionCall",
																"src": "9908:40:8"
															},
															"nativeSrc": "9905:60:8",
															"nodeType": "YulIf",
															"src": "9905:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9855:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9888:5:8",
														"nodeType": "YulTypedName",
														"src": "9888:5:8",
														"type": ""
													}
												],
												"src": "9855:116:8"
											},
											{
												"body": {
													"nativeSrc": "10037:77:8",
													"nodeType": "YulBlock",
													"src": "10037:77:8",
													"statements": [
														{
															"nativeSrc": "10047:22:8",
															"nodeType": "YulAssignment",
															"src": "10047:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10062:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10062:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10056:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10056:5:8"
																},
																"nativeSrc": "10056:13:8",
																"nodeType": "YulFunctionCall",
																"src": "10056:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10047:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10047:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10102:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10102:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10078:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "10078:23:8"
																},
																"nativeSrc": "10078:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10078:30:8"
															},
															"nativeSrc": "10078:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "10078:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9977:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10015:6:8",
														"nodeType": "YulTypedName",
														"src": "10015:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10023:3:8",
														"nodeType": "YulTypedName",
														"src": "10023:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10031:5:8",
														"nodeType": "YulTypedName",
														"src": "10031:5:8",
														"type": ""
													}
												],
												"src": "9977:137:8"
											},
											{
												"body": {
													"nativeSrc": "10194:271:8",
													"nodeType": "YulBlock",
													"src": "10194:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10240:83:8",
																"nodeType": "YulBlock",
																"src": "10240:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10242:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "10242:77:8"
																			},
																			"nativeSrc": "10242:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10242:79:8"
																		},
																		"nativeSrc": "10242:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10242:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10215:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10215:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10224:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10224:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10211:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10211:3:8"
																		},
																		"nativeSrc": "10211:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10211:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10236:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10236:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10207:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10207:3:8"
																},
																"nativeSrc": "10207:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10207:32:8"
															},
															"nativeSrc": "10204:119:8",
															"nodeType": "YulIf",
															"src": "10204:119:8"
														},
														{
															"nativeSrc": "10333:125:8",
															"nodeType": "YulBlock",
															"src": "10333:125:8",
															"statements": [
																{
																	"nativeSrc": "10348:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10348:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10362:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10362:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10352:6:8",
																			"nodeType": "YulTypedName",
																			"src": "10352:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10377:71:8",
																	"nodeType": "YulAssignment",
																	"src": "10377:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10420:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10431:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10416:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:8"
																				},
																				"nativeSrc": "10416:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10440:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10387:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "10387:28:8"
																		},
																		"nativeSrc": "10387:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10387:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10377:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "10377:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10120:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10164:9:8",
														"nodeType": "YulTypedName",
														"src": "10164:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10175:7:8",
														"nodeType": "YulTypedName",
														"src": "10175:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10187:6:8",
														"nodeType": "YulTypedName",
														"src": "10187:6:8",
														"type": ""
													}
												],
												"src": "10120:345:8"
											},
											{
												"body": {
													"nativeSrc": "10529:40:8",
													"nodeType": "YulBlock",
													"src": "10529:40:8",
													"statements": [
														{
															"nativeSrc": "10540:22:8",
															"nodeType": "YulAssignment",
															"src": "10540:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10556:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10556:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10550:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10550:5:8"
																},
																"nativeSrc": "10550:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10550:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10540:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10540:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "10471:98:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10512:5:8",
														"nodeType": "YulTypedName",
														"src": "10512:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10522:6:8",
														"nodeType": "YulTypedName",
														"src": "10522:6:8",
														"type": ""
													}
												],
												"src": "10471:98:8"
											},
											{
												"body": {
													"nativeSrc": "10688:34:8",
													"nodeType": "YulBlock",
													"src": "10688:34:8",
													"statements": [
														{
															"nativeSrc": "10698:18:8",
															"nodeType": "YulAssignment",
															"src": "10698:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "10713:3:8",
																"nodeType": "YulIdentifier",
																"src": "10713:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10698:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "10698:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10575:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10660:3:8",
														"nodeType": "YulTypedName",
														"src": "10660:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10665:6:8",
														"nodeType": "YulTypedName",
														"src": "10665:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10676:11:8",
														"nodeType": "YulTypedName",
														"src": "10676:11:8",
														"type": ""
													}
												],
												"src": "10575:147:8"
											},
											{
												"body": {
													"nativeSrc": "10790:77:8",
													"nodeType": "YulBlock",
													"src": "10790:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10807:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10807:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10812:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10812:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10817:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10817:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "10801:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10801:5:8"
																},
																"nativeSrc": "10801:23:8",
																"nodeType": "YulFunctionCall",
																"src": "10801:23:8"
															},
															"nativeSrc": "10801:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "10801:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10844:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10844:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10849:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10849:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10840:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10840:3:8"
																		},
																		"nativeSrc": "10840:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10840:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10858:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10858:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10833:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10833:6:8"
																},
																"nativeSrc": "10833:27:8",
																"nodeType": "YulFunctionCall",
																"src": "10833:27:8"
															},
															"nativeSrc": "10833:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "10833:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10728:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10772:3:8",
														"nodeType": "YulTypedName",
														"src": "10772:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10777:3:8",
														"nodeType": "YulTypedName",
														"src": "10777:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10782:6:8",
														"nodeType": "YulTypedName",
														"src": "10782:6:8",
														"type": ""
													}
												],
												"src": "10728:139:8"
											},
											{
												"body": {
													"nativeSrc": "10981:278:8",
													"nodeType": "YulBlock",
													"src": "10981:278:8",
													"statements": [
														{
															"nativeSrc": "10991:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10991:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11037:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11037:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11005:31:8",
																	"nodeType": "YulIdentifier",
																	"src": "11005:31:8"
																},
																"nativeSrc": "11005:38:8",
																"nodeType": "YulFunctionCall",
																"src": "11005:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10995:6:8",
																	"nodeType": "YulTypedName",
																	"src": "10995:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11052:95:8",
															"nodeType": "YulAssignment",
															"src": "11052:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11135:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11135:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11140:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11140:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11059:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "11059:75:8"
																},
																"nativeSrc": "11059:88:8",
																"nodeType": "YulFunctionCall",
																"src": "11059:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11052:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11052:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11195:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "11195:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11202:4:8",
																				"nodeType": "YulLiteral",
																				"src": "11202:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11191:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11191:3:8"
																		},
																		"nativeSrc": "11191:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11191:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11209:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11209:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11214:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11214:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11156:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "11156:34:8"
																},
																"nativeSrc": "11156:65:8",
																"nodeType": "YulFunctionCall",
																"src": "11156:65:8"
															},
															"nativeSrc": "11156:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "11156:65:8"
														},
														{
															"nativeSrc": "11230:23:8",
															"nodeType": "YulAssignment",
															"src": "11230:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11241:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11241:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11246:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11246:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11237:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11237:3:8"
																},
																"nativeSrc": "11237:16:8",
																"nodeType": "YulFunctionCall",
																"src": "11237:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11230:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11230:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10873:386:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10962:5:8",
														"nodeType": "YulTypedName",
														"src": "10962:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10969:3:8",
														"nodeType": "YulTypedName",
														"src": "10969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10977:3:8",
														"nodeType": "YulTypedName",
														"src": "10977:3:8",
														"type": ""
													}
												],
												"src": "10873:386:8"
											},
											{
												"body": {
													"nativeSrc": "11399:137:8",
													"nodeType": "YulBlock",
													"src": "11399:137:8",
													"statements": [
														{
															"nativeSrc": "11410:100:8",
															"nodeType": "YulAssignment",
															"src": "11410:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11497:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11497:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11506:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11506:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11417:79:8",
																	"nodeType": "YulIdentifier",
																	"src": "11417:79:8"
																},
																"nativeSrc": "11417:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11417:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11410:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11410:3:8"
																}
															]
														},
														{
															"nativeSrc": "11520:10:8",
															"nodeType": "YulAssignment",
															"src": "11520:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "11527:3:8",
																"nodeType": "YulIdentifier",
																"src": "11527:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11520:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11520:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11265:271:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11378:3:8",
														"nodeType": "YulTypedName",
														"src": "11378:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11384:6:8",
														"nodeType": "YulTypedName",
														"src": "11384:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11395:3:8",
														"nodeType": "YulTypedName",
														"src": "11395:3:8",
														"type": ""
													}
												],
												"src": "11265:271:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006(memPtr) {\n\n        mstore(add(memPtr, 0), \"ManagedVestingWallet: only facto\")\n\n        mstore(add(memPtr, 32), \"ry\")\n\n    }\n\n    function abi_encode_t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24(memPtr) {\n\n        mstore(add(memPtr, 0), \"ManagedVestingWallet: vesting ma\")\n\n        mstore(add(memPtr, 32), \"nager is zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf(memPtr) {\n\n        mstore(add(memPtr, 0), \"ManagedVestingWallet: beneficiar\")\n\n        mstore(add(memPtr, 32), \"y is zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"699": [
									{
										"length": 32,
										"start": 907
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063810ec23b11610064578063810ec23b1461011d5780639852595c1461014d578063a3f8eace1461017d578063be9a6555146101ad578063db27b8dd146101cb57610091565b80630fb5a6b41461009557806319165587146100b357806338af3eed146100cf578063485cc955146100ed575b5f80fd5b61009d6101e9565b6040516100aa9190610aa6565b60405180910390f35b6100cd60048036038101906100c89190610b1d565b610287565b005b6100d7610349565b6040516100e49190610b57565b60405180910390f35b61010760048036038101906101029190610b70565b610371565b6040516101149190610bc8565b60405180910390f35b61013760048036038101906101329190610c1e565b610566565b6040516101449190610aa6565b60405180910390f35b61016760048036038101906101629190610b1d565b610603565b6040516101749190610aa6565b60405180910390f35b61019760048036038101906101929190610b1d565b610648565b6040516101a49190610aa6565b60405180910390f35b6101b561066d565b6040516101c29190610aa6565b60405180910390f35b6101d361070b565b6040516101e09190610b57565b60405180910390f35b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630fb5a6b46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610254573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102789190610c70565b67ffffffffffffffff16905090565b5f61029182610648565b9050805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102de9190610cc8565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b8260405161032b9190610aa6565b60405180910390a26103458261033f610349565b83610733565b5050565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610400576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f790610d7b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046590610e09565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e97565b60405180910390fd5b8160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905092915050565b5f6105fb61057384610603565b8473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ac9190610b57565b602060405180830381865afa1580156105c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105eb9190610edf565b6105f59190610cc8565b836107b2565b905092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61065282610603565b61065c8342610566565b6106669190610f0a565b9050919050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be9a65556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106fc9190610c70565b67ffffffffffffffff16905090565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107ad838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610766929190610f3d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061084a565b505050565b5f6107bb61066d565b8267ffffffffffffffff1610156107d4575f9050610844565b6107dc6101e9565b6107e461066d565b6107ee9190610cc8565b8267ffffffffffffffff16111561080757829050610844565b61080f6101e9565b61081761066d565b8367ffffffffffffffff1661082c9190610f0a565b846108379190610f64565b6108419190610fd2565b90505b92915050565b5f610874828473ffffffffffffffffffffffffffffffffffffffff166108df90919063ffffffff16565b90505f815114158015610898575080806020019051810190610896919061102c565b155b156108da57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016108d19190610b57565b60405180910390fd5b505050565b60606108ec83835f6108f4565b905092915050565b60608147101561093b57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016109329190610b57565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16848660405161096391906110a9565b5f6040518083038185875af1925050503d805f811461099d576040519150601f19603f3d011682016040523d82523d5f602084013e6109a2565b606091505b50915091506109b28683836109bd565b925050509392505050565b6060826109d2576109cd82610a4a565b610a42565b5f82511480156109f857505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610a3a57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610a319190610b57565b60405180910390fd5b819050610a43565b5b9392505050565b5f81511115610a5c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f819050919050565b610aa081610a8e565b82525050565b5f602082019050610ab95f830184610a97565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610aec82610ac3565b9050919050565b610afc81610ae2565b8114610b06575f80fd5b50565b5f81359050610b1781610af3565b92915050565b5f60208284031215610b3257610b31610abf565b5b5f610b3f84828501610b09565b91505092915050565b610b5181610ae2565b82525050565b5f602082019050610b6a5f830184610b48565b92915050565b5f8060408385031215610b8657610b85610abf565b5b5f610b9385828601610b09565b9250506020610ba485828601610b09565b9150509250929050565b5f8115159050919050565b610bc281610bae565b82525050565b5f602082019050610bdb5f830184610bb9565b92915050565b5f67ffffffffffffffff82169050919050565b610bfd81610be1565b8114610c07575f80fd5b50565b5f81359050610c1881610bf4565b92915050565b5f8060408385031215610c3457610c33610abf565b5b5f610c4185828601610b09565b9250506020610c5285828601610c0a565b9150509250929050565b5f81519050610c6a81610bf4565b92915050565b5f60208284031215610c8557610c84610abf565b5b5f610c9284828501610c5c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610cd282610a8e565b9150610cdd83610a8e565b9250828201905080821115610cf557610cf4610c9b565b5b92915050565b5f82825260208201905092915050565b7f4d616e6167656456657374696e6757616c6c65743a206f6e6c7920666163746f5f8201527f7279000000000000000000000000000000000000000000000000000000000000602082015250565b5f610d65602283610cfb565b9150610d7082610d0b565b604082019050919050565b5f6020820190508181035f830152610d9281610d59565b9050919050565b7f4d616e6167656456657374696e6757616c6c65743a2076657374696e67206d615f8201527f6e61676572206973207a65726f20616464726573730000000000000000000000602082015250565b5f610df3603583610cfb565b9150610dfe82610d99565b604082019050919050565b5f6020820190508181035f830152610e2081610de7565b9050919050565b7f4d616e6167656456657374696e6757616c6c65743a2062656e656669636961725f8201527f79206973207a65726f2061646472657373000000000000000000000000000000602082015250565b5f610e81603183610cfb565b9150610e8c82610e27565b604082019050919050565b5f6020820190508181035f830152610eae81610e75565b9050919050565b610ebe81610a8e565b8114610ec8575f80fd5b50565b5f81519050610ed981610eb5565b92915050565b5f60208284031215610ef457610ef3610abf565b5b5f610f0184828501610ecb565b91505092915050565b5f610f1482610a8e565b9150610f1f83610a8e565b9250828203905081811115610f3757610f36610c9b565b5b92915050565b5f604082019050610f505f830185610b48565b610f5d6020830184610a97565b9392505050565b5f610f6e82610a8e565b9150610f7983610a8e565b9250828202610f8781610a8e565b91508282048414831517610f9e57610f9d610c9b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610fdc82610a8e565b9150610fe783610a8e565b925082610ff757610ff6610fa5565b5b828204905092915050565b61100b81610bae565b8114611015575f80fd5b50565b5f8151905061102681611002565b92915050565b5f6020828403121561104157611040610abf565b5b5f61104e84828501611018565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61108382611057565b61108d8185611061565b935061109d81856020860161106b565b80840191505092915050565b5f6110b48284611079565b91508190509291505056fea26469706673582212202da45c5f8250af49d93add9efdbd5e31eb683c32f7802260db1f9cceb9d8e61164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x810EC23B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x810EC23B EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x9852595C EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xA3F8EACE EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xDB27B8DD EQ PUSH2 0x1CB JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x19165587 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0xED JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x287 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB5A6B4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x254 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x291 DUP3 PUSH2 0x648 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B DUP3 PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x345 DUP3 PUSH2 0x33F PUSH2 0x349 JUMP JUMPDEST DUP4 PUSH2 0x733 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F7 SWAP1 PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x465 SWAP1 PUSH2 0xE09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5FB PUSH2 0x573 DUP5 PUSH2 0x603 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x652 DUP3 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x65C DUP4 TIMESTAMP PUSH2 0x566 JUMP JUMPDEST PUSH2 0x666 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBE9A6555 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7AD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x766 SWAP3 SWAP2 SWAP1 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x84A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7BB PUSH2 0x66D JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x7D4 JUMPI PUSH0 SWAP1 POP PUSH2 0x844 JUMP JUMPDEST PUSH2 0x7DC PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x7E4 PUSH2 0x66D JUMP JUMPDEST PUSH2 0x7EE SWAP2 SWAP1 PUSH2 0xCC8 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x807 JUMPI DUP3 SWAP1 POP PUSH2 0x844 JUMP JUMPDEST PUSH2 0x80F PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x817 PUSH2 0x66D JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x82C SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST DUP5 PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0x841 SWAP2 SWAP1 PUSH2 0xFD2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x874 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x898 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x102C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x8DA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8EC DUP4 DUP4 PUSH0 PUSH2 0x8F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x93B JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x963 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x9B2 DUP7 DUP4 DUP4 PUSH2 0x9BD JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x9D2 JUMPI PUSH2 0x9CD DUP3 PUSH2 0xA4A JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x9F8 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xA3A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA31 SWAP2 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xA43 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xA5C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA0 DUP2 PUSH2 0xA8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB9 PUSH0 DUP4 ADD DUP5 PUSH2 0xA97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAEC DUP3 PUSH2 0xAC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFC DUP2 PUSH2 0xAE2 JUMP JUMPDEST DUP2 EQ PUSH2 0xB06 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB17 DUP2 PUSH2 0xAF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB32 JUMPI PUSH2 0xB31 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB3F DUP5 DUP3 DUP6 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB51 DUP2 PUSH2 0xAE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB6A PUSH0 DUP4 ADD DUP5 PUSH2 0xB48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB86 JUMPI PUSH2 0xB85 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB93 DUP6 DUP3 DUP7 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA4 DUP6 DUP3 DUP7 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC2 DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBDB PUSH0 DUP4 ADD DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBFD DUP2 PUSH2 0xBE1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC07 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC18 DUP2 PUSH2 0xBF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC34 JUMPI PUSH2 0xC33 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC41 DUP6 DUP3 DUP7 ADD PUSH2 0xB09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC52 DUP6 DUP3 DUP7 ADD PUSH2 0xC0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC6A DUP2 PUSH2 0xBF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC85 JUMPI PUSH2 0xC84 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC92 DUP5 DUP3 DUP6 ADD PUSH2 0xC5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xCD2 DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xCDD DUP4 PUSH2 0xA8E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xC9B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D616E6167656456657374696E6757616C6C65743A206F6E6C7920666163746F PUSH0 DUP3 ADD MSTORE PUSH32 0x7279000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD65 PUSH1 0x22 DUP4 PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP PUSH2 0xD70 DUP3 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD92 DUP2 PUSH2 0xD59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D616E6167656456657374696E6757616C6C65743A2076657374696E67206D61 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E61676572206973207A65726F20616464726573730000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDF3 PUSH1 0x35 DUP4 PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP PUSH2 0xDFE DUP3 PUSH2 0xD99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE20 DUP2 PUSH2 0xDE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D616E6167656456657374696E6757616C6C65743A2062656E65666963696172 PUSH0 DUP3 ADD MSTORE PUSH32 0x79206973207A65726F2061646472657373000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE81 PUSH1 0x31 DUP4 PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP PUSH2 0xE8C DUP3 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAE DUP2 PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBE DUP2 PUSH2 0xA8E JUMP JUMPDEST DUP2 EQ PUSH2 0xEC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xED9 DUP2 PUSH2 0xEB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF4 JUMPI PUSH2 0xEF3 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF01 DUP5 DUP3 DUP6 ADD PUSH2 0xECB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF14 DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xF1F DUP4 PUSH2 0xA8E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF37 JUMPI PUSH2 0xF36 PUSH2 0xC9B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF50 PUSH0 DUP4 ADD DUP6 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xF5D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA97 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF6E DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xF79 DUP4 PUSH2 0xA8E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF87 DUP2 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0xC9B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xFDC DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP PUSH2 0xFE7 DUP4 PUSH2 0xA8E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFF7 JUMPI PUSH2 0xFF6 PUSH2 0xFA5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x100B DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP2 EQ PUSH2 0x1015 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1026 DUP2 PUSH2 0x1002 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1041 JUMPI PUSH2 0x1040 PUSH2 0xABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x104E DUP5 DUP3 DUP6 ADD PUSH2 0x1018 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1083 DUP3 PUSH2 0x1057 JUMP JUMPDEST PUSH2 0x108D DUP2 DUP6 PUSH2 0x1061 JUMP JUMPDEST SWAP4 POP PUSH2 0x109D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x106B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10B4 DUP3 DUP5 PUSH2 0x1079 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D LOG4 TLOAD PUSH0 DUP3 POP 0xAF BLOBHASH 0xD9 GASPRICE 0xDD SWAP15 REVERT 0xBD MCOPY BALANCE 0xEB PUSH9 0x3C32F7802260DB1F9C 0xCE 0xB9 0xD8 0xE6 GT PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "366:1250:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;849:134;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2085:252:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;989:106:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1202:412;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2478:202:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1540:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1802:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;715:128:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1101:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;849:134;907:7;949:15;;;;;;;;;;;933:41;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;926:50;;;;849:134;:::o;2085:252:6:-;2142:14;2159:17;2170:5;2159:10;:17::i;:::-;2142:34;;2211:6;2186:14;:21;2201:5;2186:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;2246:5;2232:28;;;2253:6;2232:28;;;;;;:::i;:::-;;;;;;;;2270:60;2300:5;2308:13;:11;:13::i;:::-;2323:6;2270:22;:60::i;:::-;2132:205;2085:252;:::o;989:106:5:-;1050:7;1076:12;;;;;;;;;;;1069:19;;989:106;:::o;1202:412::-;1297:4;584:10;572:22;;:8;:22;;;564:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1348:1:::1;1321:29;;:15;:29;;::::0;1313:95:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1450:1;1426:26;;:12;:26;;::::0;1418:88:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1534:15;1516;;:33;;;;;;;;;;;;;;;;;;1574:12;1559;;:27;;;;;;;;;;;;;;;;;;1603:4;1596:11;;1202:412:::0;;;;:::o;2478:202:6:-;2562:7;2588:85;2646:15;2655:5;2646:8;:15::i;:::-;2612:5;2605:23;;;2637:4;2605:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;2663:9;2588:16;:85::i;:::-;2581:92;;2478:202;;;;:::o;1540:116::-;1602:7;1628:14;:21;1643:5;1628:21;;;;;;;;;;;;;;;;1621:28;;1540:116;;;:::o;1802:159::-;1866:7;1939:15;1948:5;1939:8;:15::i;:::-;1892:44;1905:5;1919:15;1892:12;:44::i;:::-;:62;;;;:::i;:::-;1885:69;;1802:159;;;:::o;715:128:5:-;770:7;812:15;;;;;;;;;;;796:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;789:47;;;;715:128;:::o;1101:95::-;1148:7;1174:15;;;;;;;;;;;1167:22;;1101:95;:::o;1303:160:2:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;2875:366:6:-;2975:7;3010;:5;:7::i;:::-;2998:9;:19;;;2994:241;;;3040:1;3033:8;;;;2994:241;3084:10;:8;:10::i;:::-;3074:7;:5;:7::i;:::-;:20;;;;:::i;:::-;3062:9;:32;;;3058:177;;;3117:15;3110:22;;;;3058:177;3214:10;:8;:10::i;:::-;3202:7;:5;:7::i;:::-;3190:9;:19;;;;;;:::i;:::-;3171:15;:39;;;;:::i;:::-;3170:54;;;;:::i;:::-;3163:61;;2875:366;;;;;:::o;4059:629:2:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:77:8;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:474::-;2031:6;2039;2088:2;2076:9;2067:7;2063:23;2059:32;2056:119;;;2094:79;;:::i;:::-;2056:119;2214:1;2239:53;2284:7;2275:6;2264:9;2260:22;2239:53;:::i;:::-;2229:63;;2185:117;2341:2;2367:53;2412:7;2403:6;2392:9;2388:22;2367:53;:::i;:::-;2357:63;;2312:118;1963:474;;;;;:::o;2443:90::-;2477:7;2520:5;2513:13;2506:21;2495:32;;2443:90;;;:::o;2539:109::-;2620:21;2635:5;2620:21;:::i;:::-;2615:3;2608:34;2539:109;;:::o;2654:210::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2792:65;2854:1;2843:9;2839:17;2830:6;2792:65;:::i;:::-;2654:210;;;;:::o;2870:101::-;2906:7;2946:18;2939:5;2935:30;2924:41;;2870:101;;;:::o;2977:120::-;3049:23;3066:5;3049:23;:::i;:::-;3042:5;3039:34;3029:62;;3087:1;3084;3077:12;3029:62;2977:120;:::o;3103:137::-;3148:5;3186:6;3173:20;3164:29;;3202:32;3228:5;3202:32;:::i;:::-;3103:137;;;;:::o;3246:472::-;3313:6;3321;3370:2;3358:9;3349:7;3345:23;3341:32;3338:119;;;3376:79;;:::i;:::-;3338:119;3496:1;3521:53;3566:7;3557:6;3546:9;3542:22;3521:53;:::i;:::-;3511:63;;3467:117;3623:2;3649:52;3693:7;3684:6;3673:9;3669:22;3649:52;:::i;:::-;3639:62;;3594:117;3246:472;;;;;:::o;3724:141::-;3780:5;3811:6;3805:13;3796:22;;3827:32;3853:5;3827:32;:::i;:::-;3724:141;;;;:::o;3871:349::-;3940:6;3989:2;3977:9;3968:7;3964:23;3960:32;3957:119;;;3995:79;;:::i;:::-;3957:119;4115:1;4140:63;4195:7;4186:6;4175:9;4171:22;4140:63;:::i;:::-;4130:73;;4086:127;3871:349;;;;:::o;4226:180::-;4274:77;4271:1;4264:88;4371:4;4368:1;4361:15;4395:4;4392:1;4385:15;4412:191;4452:3;4471:20;4489:1;4471:20;:::i;:::-;4466:25;;4505:20;4523:1;4505:20;:::i;:::-;4500:25;;4548:1;4545;4541:9;4534:16;;4569:3;4566:1;4563:10;4560:36;;;4576:18;;:::i;:::-;4560:36;4412:191;;;;:::o;4609:169::-;4693:11;4727:6;4722:3;4715:19;4767:4;4762:3;4758:14;4743:29;;4609:169;;;;:::o;4784:221::-;4924:34;4920:1;4912:6;4908:14;4901:58;4993:4;4988:2;4980:6;4976:15;4969:29;4784:221;:::o;5011:366::-;5153:3;5174:67;5238:2;5233:3;5174:67;:::i;:::-;5167:74;;5250:93;5339:3;5250:93;:::i;:::-;5368:2;5363:3;5359:12;5352:19;;5011:366;;;:::o;5383:419::-;5549:4;5587:2;5576:9;5572:18;5564:26;;5636:9;5630:4;5626:20;5622:1;5611:9;5607:17;5600:47;5664:131;5790:4;5664:131;:::i;:::-;5656:139;;5383:419;;;:::o;5808:240::-;5948:34;5944:1;5936:6;5932:14;5925:58;6017:23;6012:2;6004:6;6000:15;5993:48;5808:240;:::o;6054:366::-;6196:3;6217:67;6281:2;6276:3;6217:67;:::i;:::-;6210:74;;6293:93;6382:3;6293:93;:::i;:::-;6411:2;6406:3;6402:12;6395:19;;6054:366;;;:::o;6426:419::-;6592:4;6630:2;6619:9;6615:18;6607:26;;6679:9;6673:4;6669:20;6665:1;6654:9;6650:17;6643:47;6707:131;6833:4;6707:131;:::i;:::-;6699:139;;6426:419;;;:::o;6851:236::-;6991:34;6987:1;6979:6;6975:14;6968:58;7060:19;7055:2;7047:6;7043:15;7036:44;6851:236;:::o;7093:366::-;7235:3;7256:67;7320:2;7315:3;7256:67;:::i;:::-;7249:74;;7332:93;7421:3;7332:93;:::i;:::-;7450:2;7445:3;7441:12;7434:19;;7093:366;;;:::o;7465:419::-;7631:4;7669:2;7658:9;7654:18;7646:26;;7718:9;7712:4;7708:20;7704:1;7693:9;7689:17;7682:47;7746:131;7872:4;7746:131;:::i;:::-;7738:139;;7465:419;;;:::o;7890:122::-;7963:24;7981:5;7963:24;:::i;:::-;7956:5;7953:35;7943:63;;8002:1;7999;7992:12;7943:63;7890:122;:::o;8018:143::-;8075:5;8106:6;8100:13;8091:22;;8122:33;8149:5;8122:33;:::i;:::-;8018:143;;;;:::o;8167:351::-;8237:6;8286:2;8274:9;8265:7;8261:23;8257:32;8254:119;;;8292:79;;:::i;:::-;8254:119;8412:1;8437:64;8493:7;8484:6;8473:9;8469:22;8437:64;:::i;:::-;8427:74;;8383:128;8167:351;;;;:::o;8524:194::-;8564:4;8584:20;8602:1;8584:20;:::i;:::-;8579:25;;8618:20;8636:1;8618:20;:::i;:::-;8613:25;;8662:1;8659;8655:9;8647:17;;8686:1;8680:4;8677:11;8674:37;;;8691:18;;:::i;:::-;8674:37;8524:194;;;;:::o;8724:332::-;8845:4;8883:2;8872:9;8868:18;8860:26;;8896:71;8964:1;8953:9;8949:17;8940:6;8896:71;:::i;:::-;8977:72;9045:2;9034:9;9030:18;9021:6;8977:72;:::i;:::-;8724:332;;;;;:::o;9062:410::-;9102:7;9125:20;9143:1;9125:20;:::i;:::-;9120:25;;9159:20;9177:1;9159:20;:::i;:::-;9154:25;;9214:1;9211;9207:9;9236:30;9254:11;9236:30;:::i;:::-;9225:41;;9415:1;9406:7;9402:15;9399:1;9396:22;9376:1;9369:9;9349:83;9326:139;;9445:18;;:::i;:::-;9326:139;9110:362;9062:410;;;;:::o;9478:180::-;9526:77;9523:1;9516:88;9623:4;9620:1;9613:15;9647:4;9644:1;9637:15;9664:185;9704:1;9721:20;9739:1;9721:20;:::i;:::-;9716:25;;9755:20;9773:1;9755:20;:::i;:::-;9750:25;;9794:1;9784:35;;9799:18;;:::i;:::-;9784:35;9841:1;9838;9834:9;9829:14;;9664:185;;;;:::o;9855:116::-;9925:21;9940:5;9925:21;:::i;:::-;9918:5;9915:32;9905:60;;9961:1;9958;9951:12;9905:60;9855:116;:::o;9977:137::-;10031:5;10062:6;10056:13;10047:22;;10078:30;10102:5;10078:30;:::i;:::-;9977:137;;;;:::o;10120:345::-;10187:6;10236:2;10224:9;10215:7;10211:23;10207:32;10204:119;;;10242:79;;:::i;:::-;10204:119;10362:1;10387:61;10440:7;10431:6;10420:9;10416:22;10387:61;:::i;:::-;10377:71;;10333:125;10120:345;;;;:::o;10471:98::-;10522:6;10556:5;10550:12;10540:22;;10471:98;;;:::o;10575:147::-;10676:11;10713:3;10698:18;;10575:147;;;;:::o;10728:139::-;10817:6;10812:3;10807;10801:23;10858:1;10849:6;10844:3;10840:16;10833:27;10728:139;;;:::o;10873:386::-;10977:3;11005:38;11037:5;11005:38;:::i;:::-;11059:88;11140:6;11135:3;11059:88;:::i;:::-;11052:95;;11156:65;11214:6;11209:3;11202:4;11195:5;11191:16;11156:65;:::i;:::-;11246:6;11241:3;11237:16;11230:23;;10981:278;10873:386;;;;:::o;11265:271::-;11395:3;11417:93;11506:3;11497:6;11417:93;:::i;:::-;11410:100;;11527:3;11520:10;;11265:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "868200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "2560",
								"duration()": "infinite",
								"initialize(address,address)": "infinite",
								"releasable(address)": "infinite",
								"release(address)": "infinite",
								"released(address)": "2851",
								"start()": "infinite",
								"vestedAmount(address,uint64)": "infinite",
								"vestingManager()": "2603"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 366,
									"end": 1616,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 709,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 657,
									"end": 709,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 657,
									"end": 709,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 657,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 709,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 657,
									"end": 709,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 709,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 657,
									"end": 709,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 657,
									"end": 709,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 709,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 657,
									"end": 709,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 692,
									"end": 702,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 681,
									"end": 702,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 681,
									"end": 702,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 681,
									"end": 702,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 681,
									"end": 702,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 681,
									"end": 702,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 681,
									"end": 702,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 681,
									"end": 702,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 681,
									"end": 702,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 681,
									"end": 702,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 681,
									"end": 702,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "699"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 1616,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202da45c5f8250af49d93add9efdbd5e31eb683c32f7802260db1f9cceb9d8e61164736f6c63430008190033",
									".code": [
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "810EC23B"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "810EC23B"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "9852595C"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "A3F8EACE"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "BE9A6555"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "DB27B8DD"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "FB5A6B4"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "19165587"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "38AF3EED"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "485CC955"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 366,
											"end": 1616,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 849,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 849,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 849,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 849,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 983,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 849,
											"end": 983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 849,
											"end": 983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 849,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 983,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2085,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 989,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 989,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1202,
											"end": 1614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1202,
											"end": 1614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1202,
											"end": 1614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2478,
											"end": 2680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2478,
											"end": 2680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2478,
											"end": 2680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1540,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1540,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1540,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1802,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1802,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1802,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 715,
											"end": 843,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 715,
											"end": 843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 715,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 715,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 715,
											"end": 843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 843,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 715,
											"end": 843,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 715,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 715,
											"end": 843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 843,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1101,
											"end": 1196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1101,
											"end": 1196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 849,
											"end": 983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 907,
											"end": 914,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 964,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 949,
											"end": 964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 949,
											"end": 964,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 949,
											"end": 964,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 949,
											"end": 964,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 949,
											"end": 964,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 949,
											"end": 964,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 964,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 933,
											"end": 974,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 933,
											"end": 974,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 933,
											"end": 974,
											"name": "PUSH",
											"source": 5,
											"value": "FB5A6B4"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 933,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 933,
											"end": 976,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 933,
											"end": 976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 926,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 976,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 926,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 926,
											"end": 976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 849,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2159,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2176,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2159,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2142,
											"end": 2176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2217,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2206,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2186,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "PUSH",
											"source": 6,
											"value": "C0E523490DD523C33B1878C9EB14FF46991E3F5B2CD33710918618F2A39CBA1B"
										},
										{
											"begin": 2253,
											"end": 2259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2232,
											"end": 2260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2260,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2300,
											"end": 2305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2308,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2308,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2321,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2308,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2329,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2270,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2330,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2270,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 989,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 594,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 572,
											"end": 594,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 572,
											"end": 594,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 572,
											"end": 580,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "699"
										},
										{
											"begin": 572,
											"end": 594,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 572,
											"end": 594,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 572,
											"end": 594,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 564,
											"end": 633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 633,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 564,
											"end": 633,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 633,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 564,
											"end": 633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 564,
											"end": 633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 564,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 633,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 564,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 564,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1321,
											"end": 1350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1336,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1321,
											"end": 1350,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1313,
											"end": 1408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1313,
											"end": 1408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1452,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1438,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1452,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1452,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1418,
											"end": 1506,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1418,
											"end": 1506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1516,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1549,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1586,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1559,
											"end": 1571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1596,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2646,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2655,
											"end": 2660,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2646,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2661,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2646,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2617,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2628,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2628,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2628,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 2637,
											"end": 2641,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2605,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2605,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2605,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2605,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2605,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2588,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2673,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2588,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1648,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 1649,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1939,
											"end": 1954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1954,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1939,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1905,
											"end": 1910,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1934,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1892,
											"end": 1936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1936,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1892,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1892,
											"end": 1954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1892,
											"end": 1954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1954,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1892,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 715,
											"end": 843,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 715,
											"end": 843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 770,
											"end": 777,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 827,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 812,
											"end": 827,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 812,
											"end": 827,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 812,
											"end": 827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 812,
											"end": 827,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 812,
											"end": 827,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 812,
											"end": 827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 812,
											"end": 827,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 812,
											"end": 827,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 812,
											"end": 827,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 796,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 796,
											"end": 834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 796,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "BE9A6555"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 796,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 836,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 789,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 789,
											"end": 836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 789,
											"end": 836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 715,
											"end": 843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1155,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1174,
											"end": 1189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 3241,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2875,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3010,
											"end": 3017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3017,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3010,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3017,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2998,
											"end": 3017,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 3017,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3235,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2994,
											"end": 3235,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3033,
											"end": 3041,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3235,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2994,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3084,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3084,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3084,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3074,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3074,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3074,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3094,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3062,
											"end": 3094,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3094,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3235,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3058,
											"end": 3235,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3117,
											"end": 3132,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3110,
											"end": 3132,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3235,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3058,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3214,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3214,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3214,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3202,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3202,
											"end": 3209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3209,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3190,
											"end": 3209,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3190,
											"end": 3209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3190,
											"end": 3209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3209,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3190,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3186,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3171,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3171,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3170,
											"end": 3224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3170,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3170,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3241,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2875,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3241,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2037,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2045,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2076,
											"end": 2085,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2074,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2086,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2091,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2094,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 2094,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2056,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2273,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2239,
											"end": 2292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 2239,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2229,
											"end": 2292,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2229,
											"end": 2292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2412,
											"end": 2419,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2367,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2367,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2420,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2533,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2443,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2506,
											"end": 2527,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2495,
											"end": 2527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2443,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2635,
											"end": 2640,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2620,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2641,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2620,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2618,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2864,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2654,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2792,
											"end": 2857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2857,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2792,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2864,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2971,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2870,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2906,
											"end": 2913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2964,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2965,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2971,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2977,
											"end": 3097,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2977,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3049,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3049,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3049,
											"end": 3072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3049,
											"end": 3072,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 3049,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3047,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3073,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3029,
											"end": 3091,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3087,
											"end": 3088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3085,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3029,
											"end": 3091,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3029,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2977,
											"end": 3097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2977,
											"end": 3097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3240,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3103,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3148,
											"end": 3153,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3192,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3193,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3164,
											"end": 3193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3202,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3228,
											"end": 3233,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3202,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3202,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3202,
											"end": 3234,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3202,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3240,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3240,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3240,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3240,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3103,
											"end": 3240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3718,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3246,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3327,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3372,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3367,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3356,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3368,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3373,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3457,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3338,
											"end": 3457,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3376,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3376,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3455,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 3376,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3338,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3338,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3566,
											"end": 3573,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3563,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3555,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3521,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3574,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3521,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3693,
											"end": 3700,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3673,
											"end": 3682,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3649,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3701,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3649,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3639,
											"end": 3701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3594,
											"end": 3711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3718,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3718,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3718,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3865,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3724,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3780,
											"end": 3785,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3805,
											"end": 3818,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3818,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3796,
											"end": 3818,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3853,
											"end": 3858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3827,
											"end": 3859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3827,
											"end": 3859,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3827,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3865,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3865,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 4220,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 3871,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3968,
											"end": 3975,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 3987,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3992,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3995,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3995,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4074,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 3995,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4115,
											"end": 4116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4195,
											"end": 4202,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4175,
											"end": 4184,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4140,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 4140,
											"end": 4203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4140,
											"end": 4203,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 4140,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4130,
											"end": 4203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4130,
											"end": 4203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 4220,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 4220,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 4220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 4220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 4220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4226,
											"end": 4406,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 4226,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4351,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4271,
											"end": 4272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4352,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4375,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4368,
											"end": 4369,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4361,
											"end": 4376,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4399,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4392,
											"end": 4393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4400,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4603,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 4412,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4452,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 4489,
											"end": 4490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4471,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 4471,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4466,
											"end": 4491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4505,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4523,
											"end": 4524,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4505,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4505,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4505,
											"end": 4525,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 4505,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4525,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4500,
											"end": 4525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4541,
											"end": 4550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4534,
											"end": 4550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4569,
											"end": 4572,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4573,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4560,
											"end": 4596,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4560,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4560,
											"end": 4596,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 4576,
											"end": 4594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4560,
											"end": 4596,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 4560,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4603,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4603,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4609,
											"end": 4778,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 4609,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4693,
											"end": 4704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4725,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4734,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4765,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4772,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4772,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4609,
											"end": 4778,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4609,
											"end": 4778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4609,
											"end": 4778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4609,
											"end": 4778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4609,
											"end": 4778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4784,
											"end": 5005,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 4784,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4958,
											"name": "PUSH",
											"source": 8,
											"value": "4D616E6167656456657374696E6757616C6C65743A206F6E6C7920666163746F"
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4908,
											"end": 4922,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4901,
											"end": 4959,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 4997,
											"name": "PUSH",
											"source": 8,
											"value": "7279000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4980,
											"end": 4986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4976,
											"end": 4991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4784,
											"end": 5005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4784,
											"end": 5005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5153,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5238,
											"end": 5240,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 5233,
											"end": 5236,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5174,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5241,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5174,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5339,
											"end": 5342,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 5250,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5343,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5250,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5370,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5363,
											"end": 5366,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5352,
											"end": 5371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5352,
											"end": 5371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5549,
											"end": 5553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5589,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5576,
											"end": 5585,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5630,
											"end": 5634,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5646,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5647,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5790,
											"end": 5794,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5664,
											"end": 5795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5795,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 5664,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5656,
											"end": 5795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5656,
											"end": 5795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5383,
											"end": 5802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5383,
											"end": 5802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 6048,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 5808,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 5982,
											"name": "PUSH",
											"source": 8,
											"value": "4D616E6167656456657374696E6757616C6C65743A2076657374696E67206D61"
										},
										{
											"begin": 5944,
											"end": 5945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5932,
											"end": 5946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5925,
											"end": 5983,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6017,
											"end": 6040,
											"name": "PUSH",
											"source": 8,
											"value": "6E61676572206973207A65726F20616464726573730000000000000000000000"
										},
										{
											"begin": 6012,
											"end": 6014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6010,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5993,
											"end": 6041,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 6048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 6048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6420,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 6054,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6281,
											"end": 6283,
											"name": "PUSH",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 6276,
											"end": 6279,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 6217,
											"end": 6284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6217,
											"end": 6284,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6217,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6210,
											"end": 6284,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6210,
											"end": 6284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6293,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 6382,
											"end": 6385,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6293,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 6293,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6293,
											"end": 6386,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 6293,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6413,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6402,
											"end": 6414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6395,
											"end": 6414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6420,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6420,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6420,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6426,
											"end": 6845,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6426,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6632,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6619,
											"end": 6628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6633,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6679,
											"end": 6688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6673,
											"end": 6677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6669,
											"end": 6689,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6665,
											"end": 6666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6650,
											"end": 6667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6643,
											"end": 6690,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6833,
											"end": 6837,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 6707,
											"end": 6838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6838,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 6707,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6699,
											"end": 6838,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6699,
											"end": 6838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6426,
											"end": 6845,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6426,
											"end": 6845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6426,
											"end": 6845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6426,
											"end": 6845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6851,
											"end": 7087,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 6851,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6991,
											"end": 7025,
											"name": "PUSH",
											"source": 8,
											"value": "4D616E6167656456657374696E6757616C6C65743A2062656E65666963696172"
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 6985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 6989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6968,
											"end": 7026,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7060,
											"end": 7079,
											"name": "PUSH",
											"source": 8,
											"value": "79206973207A65726F2061646472657373000000000000000000000000000000"
										},
										{
											"begin": 7055,
											"end": 7057,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7047,
											"end": 7053,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7043,
											"end": 7058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7036,
											"end": 7080,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6851,
											"end": 7087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6851,
											"end": 7087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7459,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 7093,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7235,
											"end": 7238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "PUSH",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 7315,
											"end": 7318,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 7256,
											"end": 7323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7256,
											"end": 7323,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7256,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7249,
											"end": 7323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7249,
											"end": 7323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 7421,
											"end": 7424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 7332,
											"end": 7425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7332,
											"end": 7425,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 7332,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7450,
											"end": 7452,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7448,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7441,
											"end": 7453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7434,
											"end": 7453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7434,
											"end": 7453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7465,
											"end": 7884,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 7465,
											"end": 7884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7631,
											"end": 7635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7669,
											"end": 7671,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7658,
											"end": 7667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7654,
											"end": 7672,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7718,
											"end": 7727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7712,
											"end": 7716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7689,
											"end": 7706,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7682,
											"end": 7729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7746,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7872,
											"end": 7876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7746,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 7746,
											"end": 7877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7746,
											"end": 7877,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7746,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7465,
											"end": 7884,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7465,
											"end": 7884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7465,
											"end": 7884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7465,
											"end": 7884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 8012,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 7890,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7963,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7981,
											"end": 7986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7963,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7963,
											"end": 7987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7963,
											"end": 7987,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7963,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 7961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 7988,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7943,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 7943,
											"end": 8006,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8002,
											"end": 8003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7992,
											"end": 8004,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7943,
											"end": 8006,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 7943,
											"end": 8006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 8012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 8012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8161,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 8018,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8075,
											"end": 8080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 8149,
											"end": 8154,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 8122,
											"end": 8155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8122,
											"end": 8155,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 8122,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8161,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8161,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8018,
											"end": 8161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8518,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 8167,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8237,
											"end": 8243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8286,
											"end": 8288,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8274,
											"end": 8283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8265,
											"end": 8272,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8261,
											"end": 8284,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8289,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8373,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 8254,
											"end": 8373,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8292,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 8292,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 8292,
											"end": 8371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8292,
											"end": 8371,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 8292,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8373,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 8254,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 8493,
											"end": 8500,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8484,
											"end": 8490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8482,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8469,
											"end": 8491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8437,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 8437,
											"end": 8501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8437,
											"end": 8501,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 8437,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8427,
											"end": 8501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8427,
											"end": 8501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8511,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8518,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8518,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8524,
											"end": 8718,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 8524,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8564,
											"end": 8568,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 8602,
											"end": 8603,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 8584,
											"end": 8604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8604,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 8584,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8579,
											"end": 8604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8579,
											"end": 8604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8618,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 8636,
											"end": 8637,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8618,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 8618,
											"end": 8638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8618,
											"end": 8638,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 8618,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8613,
											"end": 8638,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8613,
											"end": 8638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8663,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8659,
											"end": 8660,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8655,
											"end": 8664,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8647,
											"end": 8664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8686,
											"end": 8687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8680,
											"end": 8684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8677,
											"end": 8688,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 8691,
											"end": 8709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 8674,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8524,
											"end": 8718,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8524,
											"end": 8718,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8524,
											"end": 8718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8524,
											"end": 8718,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8524,
											"end": 8718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8724,
											"end": 9056,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 8724,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8845,
											"end": 8849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8872,
											"end": 8881,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 8964,
											"end": 8965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8953,
											"end": 8962,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8949,
											"end": 8966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8940,
											"end": 8946,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 8896,
											"end": 8967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8896,
											"end": 8967,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 8896,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8977,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9034,
											"end": 9043,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9030,
											"end": 9048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9021,
											"end": 9027,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8977,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 8977,
											"end": 9049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8977,
											"end": 9049,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 8977,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8724,
											"end": 9056,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8724,
											"end": 9056,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8724,
											"end": 9056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8724,
											"end": 9056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8724,
											"end": 9056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8724,
											"end": 9056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9472,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 9062,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9102,
											"end": 9109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9125,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 9143,
											"end": 9144,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9125,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9125,
											"end": 9145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9125,
											"end": 9145,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 9125,
											"end": 9145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9145,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9159,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9159,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9159,
											"end": 9179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9159,
											"end": 9179,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 9159,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9179,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9211,
											"end": 9212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9207,
											"end": 9216,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9236,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 9254,
											"end": 9265,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9236,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9236,
											"end": 9266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9236,
											"end": 9266,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 9236,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9415,
											"end": 9416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9402,
											"end": 9417,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9399,
											"end": 9400,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9396,
											"end": 9418,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9376,
											"end": 9377,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9369,
											"end": 9378,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9349,
											"end": 9432,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9326,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 9326,
											"end": 9465,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 9445,
											"end": 9463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 9445,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9326,
											"end": 9465,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 9326,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9110,
											"end": 9472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9472,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9062,
											"end": 9472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9478,
											"end": 9658,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 9478,
											"end": 9658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9526,
											"end": 9603,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9523,
											"end": 9524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9516,
											"end": 9604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9623,
											"end": 9627,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9620,
											"end": 9621,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9613,
											"end": 9628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9647,
											"end": 9651,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9644,
											"end": 9645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9637,
											"end": 9652,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9849,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 9664,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9704,
											"end": 9705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9721,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 9739,
											"end": 9740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9721,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9721,
											"end": 9741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9721,
											"end": 9741,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 9721,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9741,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9716,
											"end": 9741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 9773,
											"end": 9774,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9755,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9775,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 9755,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9750,
											"end": 9775,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9750,
											"end": 9775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9794,
											"end": 9795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9784,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 9784,
											"end": 9819,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9799,
											"end": 9817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 9799,
											"end": 9817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9817,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 9799,
											"end": 9817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9784,
											"end": 9819,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 9784,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9841,
											"end": 9842,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9838,
											"end": 9839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9834,
											"end": 9843,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9829,
											"end": 9843,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9829,
											"end": 9843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9849,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9849,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9971,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 9855,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 9925,
											"end": 9946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9946,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 9925,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9918,
											"end": 9923,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9915,
											"end": 9947,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 9905,
											"end": 9965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9959,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 9963,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 9965,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 9905,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10114,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 9977,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10031,
											"end": 10036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10068,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10056,
											"end": 10069,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10047,
											"end": 10069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10047,
											"end": 10069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 10102,
											"end": 10107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 10078,
											"end": 10108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 10078,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10114,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10114,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10114,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9977,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10120,
											"end": 10465,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 10120,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10187,
											"end": 10193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10236,
											"end": 10238,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10224,
											"end": 10233,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10215,
											"end": 10222,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10211,
											"end": 10234,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10239,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10204,
											"end": 10323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10204,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10204,
											"end": 10323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10242,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 10242,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 10242,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10242,
											"end": 10321,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 10242,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10204,
											"end": 10323,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 10204,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 10387,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10448,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 10387,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10377,
											"end": 10448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10377,
											"end": 10448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10120,
											"end": 10465,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10120,
											"end": 10465,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10120,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10120,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10120,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10569,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 10471,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10522,
											"end": 10528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10561,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10550,
											"end": 10562,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10540,
											"end": 10562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10540,
											"end": 10562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10569,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10722,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 10575,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10676,
											"end": 10687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10698,
											"end": 10716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10698,
											"end": 10716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10722,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10575,
											"end": 10722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10728,
											"end": 10867,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 10728,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10817,
											"end": 10823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10807,
											"end": 10810,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10801,
											"end": 10824,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 10858,
											"end": 10859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10849,
											"end": 10855,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10844,
											"end": 10847,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 10856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10833,
											"end": 10860,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10728,
											"end": 10867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10728,
											"end": 10867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10728,
											"end": 10867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10728,
											"end": 10867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10873,
											"end": 11259,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 10873,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11005,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 11037,
											"end": 11042,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11005,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 11005,
											"end": 11043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11005,
											"end": 11043,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 11005,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 11140,
											"end": 11146,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11135,
											"end": 11138,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 11059,
											"end": 11147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 11059,
											"end": 11147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11052,
											"end": 11147,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11052,
											"end": 11147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 11214,
											"end": 11220,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11209,
											"end": 11212,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11202,
											"end": 11206,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11195,
											"end": 11200,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11191,
											"end": 11207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 11156,
											"end": 11221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11221,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 11156,
											"end": 11221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11246,
											"end": 11252,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11241,
											"end": 11244,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11237,
											"end": 11253,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11230,
											"end": 11253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11230,
											"end": 11253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10981,
											"end": 11259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10873,
											"end": 11259,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10873,
											"end": 11259,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10873,
											"end": 11259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10873,
											"end": 11259,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10873,
											"end": 11259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11265,
											"end": 11536,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 11265,
											"end": 11536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11395,
											"end": 11398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 11506,
											"end": 11509,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11497,
											"end": 11503,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11417,
											"end": 11510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 11417,
											"end": 11510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11417,
											"end": 11510,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 11417,
											"end": 11510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11410,
											"end": 11510,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11410,
											"end": 11510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11527,
											"end": 11530,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11520,
											"end": 11530,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11520,
											"end": 11530,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11265,
											"end": 11536,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11265,
											"end": 11536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11265,
											"end": 11536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11265,
											"end": 11536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11265,
											"end": 11536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"ManagedVestingWallet/ManagedVestingWallet.sol.sol",
								"ManagedVestingWallet/VestingWallet.sol",
								"ManagedVestingWallet/interfaces/IVestingManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"duration()": "0fb5a6b4",
							"initialize(address,address)": "485cc955",
							"releasable(address)": "a3f8eace",
							"release(address)": "19165587",
							"released(address)": "9852595c",
							"start()": "be9a6555",
							"vestedAmount(address,uint64)": "810ec23b",
							"vestingManager()": "db27b8dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vestingManager_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract derived from @openzeppelin\\\\VestingWallet and handles the vesting of Eth and ERC20 tokens for a given beneficiary. Start and duration can be configured by VestingManager.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"details\":\"Getter for the beneficiary address.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"}},\"title\":\"ManagedVestingWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":\"ManagedVestingWallet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ManagedVestingWallet/ManagedVestingWallet.sol.sol\":{\"keccak256\":\"0xa640a92ac4f8e342708c178c21b50b95822dcc945af65a1a79798b14f87c2907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96c287fd56bedafdd165a075be28b7613c500c6158b17fcc1f108808f179222a\",\"dweb:/ipfs/QmR8GKCop5xFqSP2kMq4TMSwSHdPUdzQrVxFURxx666nNe\"]},\"ManagedVestingWallet/VestingWallet.sol\":{\"keccak256\":\"0x2b0cec8d4fdded12a248919a10ba669085aa5bdc3411c12adaec8feb331272ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cd4f6f7fdec33feaedfbaba634fdfe6041f7c9ea971959767fe75df36e65a72\",\"dweb:/ipfs/Qmb1Ja3Gk8vZVQd7mwMMspTLaYGpjL23ZZtu5iQSuFKrWk\"]},\"ManagedVestingWallet/interfaces/IVestingManager.sol\":{\"keccak256\":\"0x0267d169a2a0ee959e0ffe7f14e0d7800222f66ec6aa9159708e21b1f6a37376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77049e92183c20158b5d5fefa40f7a56a85ca2027dc6ba1917593a3e7f435005\",\"dweb:/ipfs/QmbTEcyZ5tXYusdHFq4y1NQAANhCg6dq1biM1Nn8n2L6xi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 824,
								"contract": "ManagedVestingWallet/ManagedVestingWallet.sol.sol:ManagedVestingWallet",
								"label": "_erc20Released",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 695,
								"contract": "ManagedVestingWallet/ManagedVestingWallet.sol.sol:ManagedVestingWallet",
								"label": "_vestingManager",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 697,
								"contract": "ManagedVestingWallet/ManagedVestingWallet.sol.sol:ManagedVestingWallet",
								"label": "_beneficiary",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ManagedVestingWallet/VestingWallet.sol": {
				"VestingWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Released",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "releasable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "released",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "timestamp",
									"type": "uint64"
								}
							],
							"name": "vestedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is modified openzeppelin contract - to minimize gas native assets removed.  This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens can be given to this contract, which will release the token to the beneficiary following a given vesting schedule. The vesting schedule is customizable through the {vestedAmount} function. Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"beneficiary()": {
								"details": "Getter for the beneficiary address."
							},
							"duration()": {
								"details": "Getter for the vesting duration."
							},
							"releasable(address)": {
								"details": "Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract."
							},
							"release(address)": {
								"details": "Release the tokens that have already vested. Emits a {ERC20Released} event."
							},
							"released(address)": {
								"details": "Amount of token already released"
							},
							"start()": {
								"details": "Getter for the start timestamp."
							},
							"vestedAmount(address,uint64)": {
								"details": "Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
							}
						},
						"title": "VestingWallet",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"duration()": "0fb5a6b4",
							"releasable(address)": "a3f8eace",
							"release(address)": "19165587",
							"released(address)": "9852595c",
							"start()": "be9a6555",
							"vestedAmount(address,uint64)": "810ec23b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Released\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is modified openzeppelin contract - to minimize gas native assets removed.  This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens can be given to this contract, which will release the token to the beneficiary following a given vesting schedule. The vesting schedule is customizable through the {vestedAmount} function. Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning. Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly) be immediately releasable.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"details\":\"Getter for the beneficiary address.\"},\"duration()\":{\"details\":\"Getter for the vesting duration.\"},\"releasable(address)\":{\"details\":\"Getter for the amount of releasable `token` tokens. `token` should be the address of an IERC20 contract.\"},\"release(address)\":{\"details\":\"Release the tokens that have already vested. Emits a {ERC20Released} event.\"},\"released(address)\":{\"details\":\"Amount of token already released\"},\"start()\":{\"details\":\"Getter for the start timestamp.\"},\"vestedAmount(address,uint64)\":{\"details\":\"Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve.\"}},\"title\":\"VestingWallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ManagedVestingWallet/VestingWallet.sol\":\"VestingWallet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ManagedVestingWallet/VestingWallet.sol\":{\"keccak256\":\"0x2b0cec8d4fdded12a248919a10ba669085aa5bdc3411c12adaec8feb331272ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cd4f6f7fdec33feaedfbaba634fdfe6041f7c9ea971959767fe75df36e65a72\",\"dweb:/ipfs/Qmb1Ja3Gk8vZVQd7mwMMspTLaYGpjL23ZZtu5iQSuFKrWk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 824,
								"contract": "ManagedVestingWallet/VestingWallet.sol:VestingWallet",
								"label": "_erc20Released",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ManagedVestingWallet/interfaces/IVestingManager.sol": {
				"IVestingManager": {
					"abi": [
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"name": "setDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"name": "setStart",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "start",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"duration()": "0fb5a6b4",
							"setDuration(uint64)": "4b852c03",
							"setStart(uint64)": "8d562866",
							"start()": "be9a6555"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"setStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ManagedVestingWallet/interfaces/IVestingManager.sol\":\"IVestingManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ManagedVestingWallet/interfaces/IVestingManager.sol\":{\"keccak256\":\"0x0267d169a2a0ee959e0ffe7f14e0d7800222f66ec6aa9159708e21b1f6a37376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77049e92183c20158b5d5fefa40f7a56a85ca2027dc6ba1917593a3e7f435005\",\"dweb:/ipfs/QmbTEcyZ5tXYusdHFq4y1NQAANhCg6dq1biM1Nn8n2L6xi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							686
						]
					},
					"id": 687,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 659,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 686,
							"linearizedBaseContracts": [
								686
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 664,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 663,
												"id": 666,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 686,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 673,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 672,
												"id": 675,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 686,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 681,
												"id": 683,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 686,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 687,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"ManagedVestingWallet/ManagedVestingWallet.sol.sol": {
				"ast": {
					"absolutePath": "ManagedVestingWallet/ManagedVestingWallet.sol.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"Context": [
							686
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"IVestingManager": [
							1007
						],
						"ManagedVestingWallet": [
							806
						],
						"SafeERC20": [
							403
						],
						"VestingWallet": [
							984
						]
					},
					"id": 807,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 688,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "ManagedVestingWallet/VestingWallet.sol",
							"file": "./VestingWallet.sol",
							"id": 689,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 807,
							"sourceUnit": 985,
							"src": "57:29:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ManagedVestingWallet/interfaces/IVestingManager.sol",
							"file": "./interfaces/IVestingManager.sol",
							"id": 690,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 807,
							"sourceUnit": 1008,
							"src": "88:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 692,
										"name": "VestingWallet",
										"nameLocations": [
											"399:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 984,
										"src": "399:13:5"
									},
									"id": 693,
									"nodeType": "InheritanceSpecifier",
									"src": "399:13:5"
								}
							],
							"canonicalName": "ManagedVestingWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "132:233:5",
								"text": " @title ManagedVestingWallet\n @dev This contract derived from @openzeppelin\\VestingWallet and handles the vesting of Eth and ERC20 tokens for a given beneficiary.\n Start and duration can be configured by VestingManager."
							},
							"fullyImplemented": true,
							"id": 806,
							"linearizedBaseContracts": [
								806,
								984,
								686
							],
							"name": "ManagedVestingWallet",
							"nameLocation": "375:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 695,
									"mutability": "mutable",
									"name": "_vestingManager",
									"nameLocation": "436:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "420:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 694,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "420:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 697,
									"mutability": "mutable",
									"name": "_beneficiary",
									"nameLocation": "473:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "457:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 696,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "457:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 699,
									"mutability": "immutable",
									"name": "_factory",
									"nameLocation": "518:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 806,
									"src": "492:34:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 698,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "492:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "554:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 702,
																"name": "_factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "572:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 703,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "584:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "588:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "584:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "572:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d616e6167656456657374696e6757616c6c65743a206f6e6c7920666163746f7279",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "596:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006",
																"typeString": "literal_string \"ManagedVestingWallet: only factory\""
															},
															"value": "ManagedVestingWallet: only factory"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8053f476b64fd4b04f9be50b80618fd91ea2b6dd55dfb3001c7e188241e5006",
																"typeString": "literal_string \"ManagedVestingWallet: only factory\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "564:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "564:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "564:69:5"
											},
											{
												"id": 709,
												"nodeType": "PlaceholderStatement",
												"src": "643:1:5"
											}
										]
									},
									"id": 711,
									"name": "onlyFactory",
									"nameLocation": "542:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:5"
									},
									"src": "533:118:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "671:38:5",
										"statements": [
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 714,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "681:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 715,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "692:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "696:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "692:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "681:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "681:21:5"
											}
										]
									},
									"id": 720,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:2:5"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "671:0:5"
									},
									"scope": 806,
									"src": "657:52:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										836
									],
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "779:64:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 727,
																	"name": "_vestingManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "812:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 726,
																"name": "IVestingManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "796:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IVestingManager_$1007_$",
																	"typeString": "type(contract IVestingManager)"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "796:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVestingManager_$1007",
																"typeString": "contract IVestingManager"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "829:5:5",
														"memberName": "start",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "796:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
															"typeString": "function () view external returns (uint64)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "796:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 725,
												"id": 731,
												"nodeType": "Return",
												"src": "789:47:5"
											}
										]
									},
									"functionSelector": "be9a6555",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "724:5:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 722,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "752:8:5"
									},
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:2:5"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "770:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:9:5"
									},
									"scope": 806,
									"src": "715:128:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "916:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 740,
																	"name": "_vestingManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "949:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 739,
																"name": "IVestingManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "933:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IVestingManager_$1007_$",
																	"typeString": "type(contract IVestingManager)"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "933:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVestingManager_$1007",
																"typeString": "contract IVestingManager"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "966:8:5",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 996,
														"src": "933:41:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
															"typeString": "function () view external returns (uint64)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "933:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 738,
												"id": 744,
												"nodeType": "Return",
												"src": "926:50:5"
											}
										]
									},
									"functionSelector": "0fb5a6b4",
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "duration",
									"nameLocation": "858:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 735,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "889:8:5"
									},
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "866:2:5"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "907:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:9:5"
									},
									"scope": 806,
									"src": "849:134:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										830
									],
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "1059:36:5",
										"statements": [
											{
												"expression": {
													"id": 752,
													"name": "_beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 697,
													"src": "1076:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 751,
												"id": 753,
												"nodeType": "Return",
												"src": "1069:19:5"
											}
										]
									},
									"functionSelector": "38af3eed",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "998:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 748,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1032:8:5"
									},
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:2:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "1050:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:9:5"
									},
									"scope": 806,
									"src": "989:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "1157:39:5",
										"statements": [
											{
												"expression": {
													"id": 760,
													"name": "_vestingManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 695,
													"src": "1174:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 759,
												"id": 761,
												"nodeType": "Return",
												"src": "1167:22:5"
											}
										]
									},
									"functionSelector": "db27b8dd",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestingManager",
									"nameLocation": "1110:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:2:5"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1148:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:9:5"
									},
									"scope": 806,
									"src": "1101:95:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "1303:311:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 775,
																"name": "vestingManager_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "1321:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1348:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1340:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 776,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1340:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1340:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1321:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d616e6167656456657374696e6757616c6c65743a2076657374696e67206d616e61676572206973207a65726f2061646472657373",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1352:55:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24",
																"typeString": "literal_string \"ManagedVestingWallet: vesting manager is zero address\""
															},
															"value": "ManagedVestingWallet: vesting manager is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a5426f35874955b9ae04300355e97049444b1cddd9b69eb7f6007674822de24",
																"typeString": "literal_string \"ManagedVestingWallet: vesting manager is zero address\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1313:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1313:95:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "1313:95:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 785,
																"name": "beneficiary_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "1426:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1450:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1442:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 786,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1442:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1442:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1426:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d616e6167656456657374696e6757616c6c65743a2062656e6566696369617279206973207a65726f2061646472657373",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1454:51:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf",
																"typeString": "literal_string \"ManagedVestingWallet: beneficiary is zero address\""
															},
															"value": "ManagedVestingWallet: beneficiary is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d271bd3bcadfb2163fb7ae1b67dd2480a3342f1ad661dcdf1762e06dfb140aaf",
																"typeString": "literal_string \"ManagedVestingWallet: beneficiary is zero address\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1418:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:88:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "1418:88:5"
											},
											{
												"expression": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 794,
														"name": "_vestingManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "1516:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 795,
														"name": "vestingManager_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "1534:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1516:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "1516:33:5"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 798,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "1559:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 799,
														"name": "beneficiary_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1574:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1559:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "1559:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1603:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 773,
												"id": 803,
												"nodeType": "Return",
												"src": "1596:11:5"
											}
										]
									},
									"functionSelector": "485cc955",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 770,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 769,
												"name": "onlyFactory",
												"nameLocations": [
													"1276:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 711,
												"src": "1276:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1276:11:5"
										}
									],
									"name": "initialize",
									"nameLocation": "1211:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "beneficiary_",
												"nameLocation": "1230:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1222:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "vestingManager_",
												"nameLocation": "1252:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1244:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:47:5"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "1297:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:5"
									},
									"scope": 806,
									"src": "1202:412:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 807,
							"src": "366:1250:5",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": [
								820
							]
						}
					],
					"src": "32:1584:5"
				},
				"id": 5
			},
			"ManagedVestingWallet/VestingWallet.sol": {
				"ast": {
					"absolutePath": "ManagedVestingWallet/VestingWallet.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"Context": [
							686
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						],
						"VestingWallet": [
							984
						]
					},
					"id": 985,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 808,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 809,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 985,
							"sourceUnit": 404,
							"src": "57:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 810,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 985,
							"sourceUnit": 657,
							"src": "123:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 811,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 985,
							"sourceUnit": 687,
							"src": "175:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 813,
										"name": "Context",
										"nameLocations": [
											"965:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 686,
										"src": "965:7:6"
									},
									"id": 814,
									"nodeType": "InheritanceSpecifier",
									"src": "965:7:6"
								}
							],
							"canonicalName": "VestingWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "228:701:6",
								"text": " @title VestingWallet\n @dev This is modified openzeppelin contract - to minimize gas native assets removed.\n \n This contract handles the vesting of Eth and ERC20 tokens for a given beneficiary. Custody of multiple tokens\n can be given to this contract, which will release the token to the beneficiary following a given vesting schedule.\n The vesting schedule is customizable through the {vestedAmount} function.\n Any token transferred to this contract will follow the vesting schedule as if they were locked from the beginning.\n Consequently, if the vesting has already started, any amount of tokens sent to this contract will (at least partly)\n be immediately releasable."
							},
							"fullyImplemented": false,
							"id": 984,
							"linearizedBaseContracts": [
								984,
								686
							],
							"name": "VestingWallet",
							"nameLocation": "948:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "c0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b",
									"id": 820,
									"name": "ERC20Released",
									"nameLocation": "985:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1015:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "999:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1030:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1022:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:39:6"
									},
									"src": "979:59:6"
								},
								{
									"constant": false,
									"id": 824,
									"mutability": "mutable",
									"name": "_erc20Released",
									"nameLocation": "1080:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 984,
									"src": "1044:50:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 823,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 821,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1052:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1044:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 822,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1063:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "1101:59:6",
										"text": " @dev Getter for the beneficiary address."
									},
									"functionSelector": "38af3eed",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1174:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1185:2:6"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "1217:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:9:6"
									},
									"scope": 984,
									"src": "1165:61:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "1232:55:6",
										"text": " @dev Getter for the start timestamp."
									},
									"functionSelector": "be9a6555",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "1301:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "1338:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:9:6"
									},
									"scope": 984,
									"src": "1292:55:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "1353:56:6",
										"text": " @dev Getter for the vesting duration."
									},
									"functionSelector": "0fb5a6b4",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "duration",
									"nameLocation": "1423:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:2:6"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1463:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:9:6"
									},
									"scope": 984,
									"src": "1414:59:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "1611:45:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 850,
														"name": "_erc20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "1628:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 852,
													"indexExpression": {
														"id": 851,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "1643:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1628:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 849,
												"id": 853,
												"nodeType": "Return",
												"src": "1621:28:6"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "1479:56:6",
										"text": " @dev Amount of token already released"
									},
									"functionSelector": "9852595c",
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "released",
									"nameLocation": "1549:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1566:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1558:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:15:6"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "1602:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1601:9:6"
									},
									"scope": 984,
									"src": "1540:116:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "1875:86:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 864,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "1905:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 867,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1919:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1925:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1919:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1912:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 865,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "1912:6:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1912:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 863,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "1892:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint64_$returns$_t_uint256_$",
																"typeString": "function (address,uint64) view returns (uint256)"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1892:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 872,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "1948:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 871,
															"name": "released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "1939:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1939:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1892:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 862,
												"id": 875,
												"nodeType": "Return",
												"src": "1885:69:6"
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "1662:135:6",
										"text": " @dev Getter for the amount of releasable `token` tokens. `token` should be the address of an\n IERC20 contract."
									},
									"functionSelector": "a3f8eace",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "releasable",
									"nameLocation": "1811:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1830:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "1822:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:15:6"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "1866:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:9:6"
									},
									"scope": 984,
									"src": "1802:159:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "2132:205:6",
										"statements": [
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2150:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 911,
														"src": "2142:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 883,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2142:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"arguments": [
														{
															"id": 886,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "2170:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 885,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "2159:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2142:34:6"
											},
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 889,
															"name": "_erc20Released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "2186:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 891,
														"indexExpression": {
															"id": 890,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "2201:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2186:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 892,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "2211:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2186:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "2186:31:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 896,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "2246:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "2253:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 895,
														"name": "ERC20Released",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2232:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "EmitStatement",
												"src": "2227:33:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 904,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 880,
																	"src": "2300:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 903,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2293:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2293:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 906,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "2308:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2308:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "2323:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 900,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "2270:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$403_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2280:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "2270:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2270:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "2270:60:6"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "1967:113:6",
										"text": " @dev Release the tokens that have already vested.\n Emits a {ERC20Released} event."
									},
									"functionSelector": "19165587",
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "2094:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2110:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2102:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2102:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2101:15:6"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2132:0:6"
									},
									"scope": 984,
									"src": "2085:252:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "2571:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 929,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2637:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_VestingWallet_$984",
																					"typeString": "contract VestingWallet"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_VestingWallet_$984",
																					"typeString": "contract VestingWallet"
																				}
																			],
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2629:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 927,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2629:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2629:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 924,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 915,
																				"src": "2612:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 923,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2605:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2605:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2619:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "2605:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2605:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 933,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "2655:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 932,
																	"name": "released",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "2646:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2646:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2605:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 936,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "2663:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 922,
														"name": "_vestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "2588:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint64) view returns (uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2588:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 921,
												"id": 938,
												"nodeType": "Return",
												"src": "2581:92:6"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "2343:130:6",
										"text": " @dev Calculates the amount of tokens that has already vested. Default implementation is a linear vesting curve."
									},
									"functionSelector": "810ec23b",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vestedAmount",
									"nameLocation": "2487:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2500:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2522:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2515:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 916,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2515:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:33:6"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "2562:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2561:9:6"
									},
									"scope": 984,
									"src": "2478:202:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "2984:257:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 950,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "2998:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 951,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "3010:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3010:7:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2998:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 957,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3062:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 958,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "3074:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3074:7:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 960,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "3084:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3074:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3062:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 979,
														"nodeType": "Block",
														"src": "3149:86:6",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 967,
																					"name": "totalAllocation",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "3171:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 971,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 968,
																								"name": "timestamp",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 945,
																								"src": "3190:9:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint64",
																									"typeString": "uint64"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 969,
																									"name": "start",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 836,
																									"src": "3202:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																										"typeString": "function () view returns (uint256)"
																									}
																								},
																								"id": 970,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3202:7:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3190:19:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 972,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3189:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3171:39:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 974,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3170:41:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 975,
																			"name": "duration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "3214:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3214:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3170:54:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 949,
																"id": 978,
																"nodeType": "Return",
																"src": "3163:61:6"
															}
														]
													},
													"id": 980,
													"nodeType": "IfStatement",
													"src": "3058:177:6",
													"trueBody": {
														"id": 966,
														"nodeType": "Block",
														"src": "3096:47:6",
														"statements": [
															{
																"expression": {
																	"id": 964,
																	"name": "totalAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "3117:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 949,
																"id": 965,
																"nodeType": "Return",
																"src": "3110:22:6"
															}
														]
													}
												},
												"id": 981,
												"nodeType": "IfStatement",
												"src": "2994:241:6",
												"trueBody": {
													"id": 956,
													"nodeType": "Block",
													"src": "3019:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3040:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 949,
															"id": 955,
															"nodeType": "Return",
															"src": "3033:8:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "2686:184:6",
										"text": " @dev Virtual implementation of the vesting formula. This returns the amount vested, as a function of time, for\n an asset given its total historical allocation."
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vestingSchedule",
									"nameLocation": "2884:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "totalAllocation",
												"nameLocation": "2909:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2901:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2933:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2926:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 944,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2926:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:43:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2975:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:9:6"
									},
									"scope": 984,
									"src": "2875:366:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 985,
							"src": "930:2313:6",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": [
								820
							]
						}
					],
					"src": "32:3211:6"
				},
				"id": 6
			},
			"ManagedVestingWallet/interfaces/IVestingManager.sol": {
				"ast": {
					"absolutePath": "ManagedVestingWallet/interfaces/IVestingManager.sol",
					"exportedSymbols": {
						"IVestingManager": [
							1007
						]
					},
					"id": 1008,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 986,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVestingManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1007,
							"linearizedBaseContracts": [
								1007
							],
							"name": "IVestingManager",
							"nameLocation": "67:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "be9a6555",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "start",
									"nameLocation": "98:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "103:2:7"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "129:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 988,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "129:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "128:8:7"
									},
									"scope": 1007,
									"src": "89:48:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0fb5a6b4",
									"id": 996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "duration",
									"nameLocation": "151:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "159:2:7"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "185:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 993,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "185:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:8:7"
									},
									"scope": 1007,
									"src": "142:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8d562866",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setStart",
									"nameLocation": "207:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "216:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 997,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "216:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:8:7"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "232:0:7"
									},
									"scope": 1007,
									"src": "198:35:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b852c03",
									"id": 1006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDuration",
									"nameLocation": "247:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "259:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1002,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "259:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:8:7"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:0:7"
									},
									"scope": 1007,
									"src": "238:38:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1008,
							"src": "57:221:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:246:7"
				},
				"id": 7
			}
		}
	}
}