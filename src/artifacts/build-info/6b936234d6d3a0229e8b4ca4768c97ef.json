{
	"id": "6b936234d6d3a0229e8b4ca4768c97ef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/VestingToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport {IERC20, SafeERC20} from \"../contracts/token/ERC20/utils/SafeERC20.sol\";\n// import {Initializable} from \"../contracts/proxy/utils/Initializable.sol\";\nimport {Initializable} from     \"../upgradeable/contracts/proxy/utils/Initializable.sol\";\nimport {ERC20Upgradeable} from \"../upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\";\n// import {ERC20} from \"../contracts/token/ERC20/ERC20.sol\";\nimport {Vesting, Schedule} from \"./IVestingToken.sol\";\n\n/**\n * @title Контракт share-токена (вестинг-токен)\n * @notice Отвечает за логику блокировки/разблокировки средств\n * @dev Код предоставлен исключительно в ознакомительных целях и не протестирован\n * Из контракта убрано все лишнее, включая некоторые проверки, геттеры/сеттеры и события\n */\ncontract VestingToken is Initializable, ERC20Upgradeable {\n    using SafeERC20 for IERC20;\n\n    uint256 private constant BASIS_POINTS = 10_000;\n\n    address private _minter;\n    address private _vestingManager;\n    IERC20 private _baseToken;\n    Vesting private _vesting;\n    uint256 private _initialLockedSupply;\n\n    constructor() {\n        _disableInitializers();\n    }\n\n    mapping(address => uint256) private _initialLocked;\n    mapping(address => uint256) private _released;\n\n    // region - Errors\n\n    /////////////////////\n    //      Errors     //\n    /////////////////////\n\n    error OnlyMinter();\n    error OnlyVestingManager();\n    error NotEnoughTokensToClaim();\n    error StartTimeAlreadyElapsed();\n    error CliffBeforeStartTime();\n    error IncorrectSchedulePortions();\n    error IncorrectScheduleTime(uint256 incorrectTime);\n    error TransfersNotAllowed();\n    error MintingAfterCliffIsForbidden();\n\n    // endregion\n\n    // region - Modifiers\n\n    modifier onlyMinter() {\n        if (msg.sender != _minter) {\n            revert OnlyMinter();\n        }\n\n        _;\n    }\n\n    modifier onlyVestingManager() {\n        if (msg.sender != _vestingManager) {\n            revert OnlyVestingManager();\n        }\n\n        _;\n    }\n\n    // endregion\n\n    // region - Initialize\n\n    /**\n     * @notice Так как это прокси, нужно выполнить инициализацию\n     * @dev Создается и инициализируется только контрактом VestingManager\n     */\n    function initialize(string calldata name, string calldata symbol, address minter, address baseToken)\n        public\n        initializer\n    {\n        __ERC20_init(name, symbol);\n\n        _minter = minter;\n        _baseToken = IERC20(baseToken);\n        _vestingManager = msg.sender;\n    }\n\n    // endregion\n\n    // region - Set vesting schedule\n\n    /**\n     * @notice Установка расписания также выполняется контрактом VestingManager\n     * @dev Здесь важно проверить что расписание было передано корректное\n     */\n    function setVestingSchedule(uint256 startTime, uint256 cliff, Schedule[] calldata schedule)\n        external\n        onlyVestingManager\n    {\n        uint256 scheduleLength = schedule.length;\n\n        _checkVestingSchedule(startTime, cliff, schedule, scheduleLength);\n\n        _vesting.startTime = startTime;\n        _vesting.cliff = cliff;\n\n        for (uint256 i = 0; i < scheduleLength; i++) {\n            _vesting.schedule.push(schedule[i]);\n        }\n    }\n\n    function _checkVestingSchedule(\n        uint256 startTime,\n        uint256 cliff,\n        Schedule[] calldata schedule,\n        uint256 scheduleLength\n    ) private view {\n        if (startTime < block.timestamp) {\n            revert StartTimeAlreadyElapsed();\n        }\n\n        if (startTime > cliff) {\n            revert CliffBeforeStartTime();\n        }\n\n        uint256 totalPercent;\n\n        for (uint256 i = 0; i < scheduleLength; i++) {\n            totalPercent += schedule[i].portion;\n\n            bool isEndTimeOutOfOrder = (i != 0) && schedule[i - 1].endTime >= schedule[i].endTime;\n\n            if (cliff >= schedule[i].endTime || isEndTimeOutOfOrder) {\n                revert IncorrectScheduleTime(schedule[i].endTime);\n            }\n        }\n\n        if (totalPercent != BASIS_POINTS) {\n            revert IncorrectSchedulePortions();\n        }\n    }\n\n    // endregion\n\n    // region - Mint\n\n    /**\n     * @notice Списываем токен который будем блокировать и минтим share-токен\n     */\n    function mint(address to, uint256 amount) external onlyMinter {\n        if (block.timestamp >= _vesting.cliff) {\n            revert MintingAfterCliffIsForbidden();\n        }\n\n        _baseToken.safeTransferFrom(msg.sender, address(this), amount);\n\n        _mint(to, amount);\n\n        _initialLocked[to] += amount;\n        _initialLockedSupply += amount;\n    }\n\n    // endregion\n\n    // region - Claim\n\n    /**\n     * @notice Сжигаем share-токен и переводим бенефициару разблокированные базовые токены\n     */\n    function claim() external {\n        uint256 releasable = availableBalanceOf(msg.sender);\n\n        if (releasable == 0) {\n            revert NotEnoughTokensToClaim();\n        }\n\n        _released[msg.sender] += releasable;\n\n        _burn(msg.sender, releasable);\n        _baseToken.safeTransfer(msg.sender, releasable);\n    }\n\n    // endregion\n\n    // region - Vesting getters\n\n    function getVestingSchedule() public view returns (Vesting memory) {\n        return _vesting;\n    }\n\n    function unlockedSupply() external view returns (uint256) {\n        return _totalUnlocked();\n    }\n\n    function lockedSupply() external view returns (uint256) {\n        return _initialLockedSupply - _totalUnlocked();\n    }\n\n    function availableBalanceOf(address account) public view returns (uint256 releasable) {\n        releasable = _unlockedOf(account) - _released[account];\n    }\n\n    // endregion\n\n    // region - Private functions\n\n    function _unlockedOf(address account) private view returns (uint256) {\n        return _computeUnlocked(_initialLocked[account], block.timestamp);\n    }\n\n    function _totalUnlocked() private view returns (uint256) {\n        return _computeUnlocked(_initialLockedSupply, block.timestamp);\n    }\n\n    /**\n     * @notice Основная функция для расчета разблокированных токенов\n     * @dev Проверяется сколько прошло полных периодов и сколько времени прошло\n     * после последнего полного периода.\n     */\n    function _computeUnlocked(uint256 lockedTokens, uint256 time) private view returns (uint256 unlockedTokens) {\n        if (time < _vesting.cliff) {\n            return 0;\n        }\n\n        uint256 currentPeriodStart = _vesting.cliff;\n        Schedule[] memory schedule = _vesting.schedule;\n        uint256 scheduleLength = schedule.length;\n\n        for (uint256 i = 0; i < scheduleLength; i++) {\n            Schedule memory currentPeriod = schedule[i];\n            uint256 currentPeriodEnd = currentPeriod.endTime;\n            uint256 currentPeriodPortion = currentPeriod.portion;\n\n            if (time < currentPeriodEnd) {\n                uint256 elapsedPeriodTime = time - currentPeriodStart;\n                uint256 periodDuration = currentPeriodEnd - currentPeriodStart;\n\n                unlockedTokens +=\n                    (lockedTokens * elapsedPeriodTime * currentPeriodPortion) / (periodDuration * BASIS_POINTS);\n                break;\n            } else {\n                unlockedTokens += (lockedTokens * currentPeriodPortion) / BASIS_POINTS;\n                currentPeriodStart = currentPeriodEnd;\n            }\n        }\n    }\n\n    /**\n     * @notice Трансферить токены нельзя, только минтить и сжигать\n     */\n    // function _beforeTokenTransfer(address from, address to, uint256 amount) internal override {\n    //     super._beforeTokenTransfer(from, to, amount);\n\n    //     if (from != address(0) && to != address(0)) {\n    //         revert TransfersNotAllowed();\n    //     }\n    // }\n\n    // endregion\n}\n"
			},
			"src/IVestingToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nstruct Schedule {\n    uint256 endTime;\n    uint256 portion;\n}\n\nstruct Vesting {\n    uint256 startTime;\n    uint256 cliff;\n    Schedule[] schedule;\n}\n\ninterface IVestingToken {\n    function initialize(\n        string calldata name,\n        string calldata symbol,\n        address minter,\n        address token\n    ) external;\n\n    function setVestingSchedule(\n        uint256 startTime,\n        uint256 cliff,\n        Schedule[] calldata schedule\n    ) external;\n\n    function mint(address to, uint256 amount) external;\n\n    function getVestingSchedule() external view returns (Vesting memory);\n}\n"
			},
			"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../../../../contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"../../../../contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"../../../../contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"upgradeable/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\nimport \"./InitializableStorage.sol\";\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    // struct InitializableStorage {\n    //     /**\n    //      * @dev Indicates that the contract has been initialized.\n    //      */\n    //     uint64 _initialized;\n    //     /**\n    //      * @dev Indicates that the contract is in the process of being initialized.\n    //      */\n    //     bool _initializing;\n    // }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"upgradeable/contracts/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"upgradeable/contracts/proxy/utils/InitializableStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n   \n   struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }"
			},
			"contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n}\n"
			},
			"contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/ERC20/utils/SafeERC20.sol\":750:8178  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":750:8178  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202d987df556fcf3eae5bcbfca20456db878ab539d884d8fc48509e91fcd0ba61c64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202d987df556fcf3eae5bcbfca20456db878ab539d884d8fc48509e91fcd0ba61c64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D SWAP9 PUSH30 0xF556FCF3EAE5BCBFCA20456DB878AB539D884D8FC48509E91FCD0BA61C64 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "750:7428:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202d987df556fcf3eae5bcbfca20456db878ab539d884d8fc48509e91fcd0ba61c64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D SWAP9 PUSH30 0xF556FCF3EAE5BCBFCA20456DB878AB539D884D8FC48509E91FCD0BA61C64 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "750:7428:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 750,
									"end": 8178,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d987df556fcf3eae5bcbfca20456db878ab539d884d8fc48509e91fcd0ba61c64736f6c63430008190033",
									".code": [
										{
											"begin": 750,
											"end": 8178,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8178,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8178,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8178,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 8178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 8178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 8178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 750,
											"end": 8178,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/interfaces/IERC1363.sol",
								"contracts/interfaces/IERC165.sol",
								"contracts/interfaces/IERC20.sol",
								"contracts/interfaces/draft-IERC6093.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/token/ERC20/utils/SafeERC20.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Errors.sol",
								"contracts/utils/introspection/IERC165.sol",
								"src/IVestingToken.sol",
								"src/VestingToken.sol",
								"upgradeable/contracts/proxy/utils/Initializable.sol",
								"upgradeable/contracts/proxy/utils/InitializableStorage.sol",
								"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
								"upgradeable/contracts/utils/ContextUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Address.sol\":233:6063  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Address.sol\":233:6063  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f3121a82a2f5d73d75845d308482816ae1e708441f0d1ea6d17a1e59bd8ad57e64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f3121a82a2f5d73d75845d308482816ae1e708441f0d1ea6d17a1e59bd8ad57e64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SLT BYTE DUP3 LOG2 CREATE2 0xD7 RETURNDATASIZE PUSH22 0x845D308482816AE1E708441F0D1EA6D17A1E59BD8AD5 PUSH31 0x64736F6C634300081900330000000000000000000000000000000000000000 ",
							"sourceMap": "233:5830:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f3121a82a2f5d73d75845d308482816ae1e708441f0d1ea6d17a1e59bd8ad57e64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SLT BYTE DUP3 LOG2 CREATE2 0xD7 RETURNDATASIZE PUSH22 0x845D308482816AE1E708441F0D1EA6D17A1E59BD8AD5 PUSH31 0x64736F6C634300081900330000000000000000000000000000000000000000 ",
							"sourceMap": "233:5830:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6063,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3121a82a2f5d73d75845d308482816ae1e708441f0d1ea6d17a1e59bd8ad57e64736f6c63430008190033",
									".code": [
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6063,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/interfaces/IERC1363.sol",
								"contracts/interfaces/IERC165.sol",
								"contracts/interfaces/IERC20.sol",
								"contracts/interfaces/draft-IERC6093.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/token/ERC20/utils/SafeERC20.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Errors.sol",
								"contracts/utils/introspection/IERC165.sol",
								"src/IVestingToken.sol",
								"src/VestingToken.sol",
								"upgradeable/contracts/proxy/utils/Initializable.sol",
								"upgradeable/contracts/proxy/utils/InitializableStorage.sol",
								"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
								"upgradeable/contracts/utils/ContextUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality.",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Errors.sol\":314:696  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Errors.sol\":314:696  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205846d806d4ffe0873355211519a51e9f0b7193719b02c8914bfef94128dea41264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205846d806d4ffe0873355211519a51e9f0b7193719b02c8914bfef94128dea41264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC CHAINID 0xD8 MOD 0xD4 SELFDESTRUCT 0xE0 DUP8 CALLER SSTORE 0x21 ISZERO NOT 0xA5 0x1E SWAP16 SIGNEXTEND PUSH18 0x93719B02C8914BFEF94128DEA41264736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "314:382:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205846d806d4ffe0873355211519a51e9f0b7193719b02c8914bfef94128dea41264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC CHAINID 0xD8 MOD 0xD4 SELFDESTRUCT 0xE0 DUP8 CALLER SSTORE 0x21 ISZERO NOT 0xA5 0x1E SWAP16 SIGNEXTEND PUSH18 0x93719B02C8914BFEF94128DEA41264736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "314:382:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 314,
									"end": 696,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205846d806d4ffe0873355211519a51e9f0b7193719b02c8914bfef94128dea41264736f6c63430008190033",
									".code": [
										{
											"begin": 314,
											"end": 696,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 314,
											"end": 696,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 314,
											"end": 696,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 314,
											"end": 696,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 314,
											"end": 696,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 314,
											"end": 696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 314,
											"end": 696,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 696,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 314,
											"end": 696,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"contracts/interfaces/IERC1363.sol",
								"contracts/interfaces/IERC165.sol",
								"contracts/interfaces/IERC20.sol",
								"contracts/interfaces/draft-IERC6093.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/token/ERC20/utils/SafeERC20.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Errors.sol",
								"contracts/utils/introspection/IERC165.sol",
								"src/IVestingToken.sol",
								"src/VestingToken.sol",
								"upgradeable/contracts/proxy/utils/Initializable.sol",
								"upgradeable/contracts/proxy/utils/InitializableStorage.sol",
								"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
								"upgradeable/contracts/utils/ContextUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality.\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/IVestingToken.sol": {
				"IVestingToken": {
					"abi": [
						{
							"inputs": [],
							"name": "getVestingSchedule",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "cliff",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "endTime",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "portion",
													"type": "uint256"
												}
											],
											"internalType": "struct Schedule[]",
											"name": "schedule",
											"type": "tuple[]"
										}
									],
									"internalType": "struct Vesting",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliff",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "portion",
											"type": "uint256"
										}
									],
									"internalType": "struct Schedule[]",
									"name": "schedule",
									"type": "tuple[]"
								}
							],
							"name": "setVestingSchedule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getVestingSchedule()": "3a05f0d8",
							"initialize(string,string,address,address)": "8f15b414",
							"mint(address,uint256)": "40c10f19",
							"setVestingSchedule(uint256,uint256,(uint256,uint256)[])": "43e8be32"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getVestingSchedule\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"portion\",\"type\":\"uint256\"}],\"internalType\":\"struct Schedule[]\",\"name\":\"schedule\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Vesting\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"portion\",\"type\":\"uint256\"}],\"internalType\":\"struct Schedule[]\",\"name\":\"schedule\",\"type\":\"tuple[]\"}],\"name\":\"setVestingSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IVestingToken.sol\":\"IVestingToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/IVestingToken.sol\":{\"keccak256\":\"0x2cad48b2342daf84c93169f521b5c77cbd621e1fbee9b4ac4e8ed10d01e0473f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be3abb4136cb9c74775cc2642530d2777ad949044d55ab4affe10e533b1a298\",\"dweb:/ipfs/QmNwMFhm1BvCEm2wxyf1ycfynrrwdkGP4e5C9Sdc2AdmU9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/VestingToken.sol": {
				"VestingToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CliffBeforeStartTime",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IncorrectSchedulePortions",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "incorrectTime",
									"type": "uint256"
								}
							],
							"name": "IncorrectScheduleTime",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintingAfterCliffIsForbidden",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotEnoughTokensToClaim",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyMinter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyVestingManager",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StartTimeAlreadyElapsed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransfersNotAllowed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "availableBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "releasable",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVestingSchedule",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "startTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "cliff",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "endTime",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "portion",
													"type": "uint256"
												}
											],
											"internalType": "struct Schedule[]",
											"name": "schedule",
											"type": "tuple[]"
										}
									],
									"internalType": "struct Vesting",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "baseToken",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockedSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cliff",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "endTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "portion",
											"type": "uint256"
										}
									],
									"internalType": "struct Schedule[]",
									"name": "schedule",
									"type": "tuple[]"
								}
							],
							"name": "setVestingSchedule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockedSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Код предоставлен исключительно в ознакомительных целях и не протестирован Из контракта убрано все лишнее, включая некоторые проверки, геттеры/сеттеры и события",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"initialize(string,string,address,address)": {
								"details": "Создается и инициализируется только контрактом VestingManager"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"setVestingSchedule(uint256,uint256,(uint256,uint256)[])": {
								"details": "Здесь важно проверить что расписание было передано корректное"
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "Контракт share-токена (вестинг-токен)",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/VestingToken.sol\":1013:8399  contract VestingToken is Initializable, ERC20Upgradeable {... */\n  mstore(0x40, 0x80)\n    /* \"src/VestingToken.sol\":1332:1385  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/VestingToken.sol\":1356:1378  _disableInitializers() */\n  tag_4\n    /* \"src/VestingToken.sol\":1356:1376  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"src/VestingToken.sol\":1356:1378  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"src/VestingToken.sol\":1013:8399  contract VestingToken is Initializable, ERC20Upgradeable {... */\n  jump(tag_6)\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7778:8200  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7893:7923  InitializableStorage storage $ */\n  0x00\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7926:7952  _getInitializableStorage() */\n  tag_8\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7926:7950  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7926:7952  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7893:7952  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7967:7968  $ */\n  dup1\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7967:7982  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7963:8039  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8005:8028  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7963:8039  if ($._initializing) {... */\ntag_10:\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8070:8086  type(uint64).max */\n  0xffffffffffffffff\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8052:8086  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8052:8053  $ */\n  dup2\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8052:8066  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8052:8086  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8048:8194  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8119:8135  type(uint64).max */\n  0xffffffffffffffff\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8102:8103  $ */\n  dup2\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8102:8116  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8102:8135  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8154:8183  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8166:8182  type(uint64).max */\n  0xffffffffffffffff\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8154:8183  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8048:8194  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7827:8200  {... */\n  pop\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7778:8200  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8804:8974  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8862:8892  InitializableStorage storage $ */\n  0x00\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8937:8958  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8927:8958  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8804:8974  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/VestingToken.sol\":1013:8399  contract VestingToken is Initializable, ERC20Upgradeable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/VestingToken.sol\":1013:8399  contract VestingToken is Initializable, ERC20Upgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x43e8be32\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xca5c7b91\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xfd3d27b8\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x43e8be32\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8f15b414\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x25d998bb\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x25d998bb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3a05f0d8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2710:2854  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5204:5390  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3890:4042  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5982:6226  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/VestingToken.sol\":5974:6131  function availableBalanceOf(address account) public view returns (uint256 releasable) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3748:3830  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/VestingToken.sol\":5640:5739  function getVestingSchedule() public view returns (Vesting memory) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/VestingToken.sol\":4684:5043  function mint(address to, uint256 amount) external onlyMinter {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"src/VestingToken.sol\":3163:3624  function setVestingSchedule(uint256 startTime, uint256 cliff, Schedule[] calldata schedule)... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"src/VestingToken.sol\":5259:5583  function claim() external {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4100:4271  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/VestingToken.sol\":2544:2832  function initialize(string calldata name, string calldata symbol, address minter, address baseToken)... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2967:3115  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4466:4644  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/VestingToken.sol\":5849:5968  function lockedSupply() external view returns (uint256) {... */\n    tag_17:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4702:4897  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/VestingToken.sol\":5745:5843  function unlockedSupply() external view returns (uint256) {... */\n    tag_19:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2710:2854  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2755:2768  string memory */\n      0x60\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2780:2802  ERC20Storage storage $ */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2805:2823  _getERC20Storage() */\n      tag_91\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2805:2821  _getERC20Storage */\n      tag_92\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2805:2823  _getERC20Storage() */\n      jump\t// in\n    tag_91:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2780:2823  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2840:2841  $ */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2840:2847  $._name */\n      0x03\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2833:2847  return $._name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2710:2854  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5204:5390  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5277:5281  bool */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5293:5306  address owner */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5309:5321  _msgSender() */\n      tag_100\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5309:5319  _msgSender */\n      tag_101\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5309:5321  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5293:5321  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5331:5362  _approve(owner, spender, value) */\n      tag_102\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5340:5345  owner */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5347:5354  spender */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5356:5361  value */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5331:5339  _approve */\n      tag_103\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5331:5362  _approve(owner, spender, value) */\n      jump\t// in\n    tag_102:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5379:5383  true */\n      0x01\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5372:5383  return true */\n      swap2\n      pop\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5204:5390  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3890:4042  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3942:3949  uint256 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3961:3983  ERC20Storage storage $ */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3986:4004  _getERC20Storage() */\n      tag_105\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3986:4002  _getERC20Storage */\n      tag_92\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3986:4004  _getERC20Storage() */\n      jump\t// in\n    tag_105:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3961:4004  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4021:4022  $ */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4021:4035  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4014:4035  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3890:4042  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5982:6226  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6069:6073  bool */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6085:6100  address spender */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6103:6115  _msgSender() */\n      tag_107\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6103:6113  _msgSender */\n      tag_101\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6103:6115  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6085:6115  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6125:6162  _spendAllowance(from, spender, value) */\n      tag_108\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6141:6145  from */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6147:6154  spender */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6156:6161  value */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6125:6140  _spendAllowance */\n      tag_109\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6125:6162  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_108:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6172:6198  _transfer(from, to, value) */\n      tag_110\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6182:6186  from */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6188:6190  to */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6192:6197  value */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6172:6181  _transfer */\n      tag_111\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6172:6198  _transfer(from, to, value) */\n      jump\t// in\n    tag_110:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6215:6219  true */\n      0x01\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6208:6219  return true */\n      swap2\n      pop\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":5982:6226  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":5974:6131  function availableBalanceOf(address account) public view returns (uint256 releasable) {... */\n    tag_45:\n        /* \"src/VestingToken.sol\":6040:6058  uint256 releasable */\n      0x00\n        /* \"src/VestingToken.sol\":6106:6115  _released */\n      0x08\n        /* \"src/VestingToken.sol\":6106:6124  _released[account] */\n      0x00\n        /* \"src/VestingToken.sol\":6116:6123  account */\n      dup4\n        /* \"src/VestingToken.sol\":6106:6124  _released[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/VestingToken.sol\":6083:6103  _unlockedOf(account) */\n      tag_113\n        /* \"src/VestingToken.sol\":6095:6102  account */\n      dup4\n        /* \"src/VestingToken.sol\":6083:6094  _unlockedOf */\n      tag_114\n        /* \"src/VestingToken.sol\":6083:6103  _unlockedOf(account) */\n      jump\t// in\n    tag_113:\n        /* \"src/VestingToken.sol\":6083:6124  _unlockedOf(account) - _released[account] */\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"src/VestingToken.sol\":6070:6124  releasable = _unlockedOf(account) - _released[account] */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":5974:6131  function availableBalanceOf(address account) public view returns (uint256 releasable) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3748:3830  function decimals() public view virtual returns (uint8) {... */\n    tag_48:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3797:3802  uint8 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3821:3823  18 */\n      0x12\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3814:3823  return 18 */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3748:3830  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"src/VestingToken.sol\":5640:5739  function getVestingSchedule() public view returns (Vesting memory) {... */\n    tag_52:\n        /* \"src/VestingToken.sol\":5691:5705  Vesting memory */\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"src/VestingToken.sol\":5724:5732  _vesting */\n      0x03\n        /* \"src/VestingToken.sol\":5717:5732  return _vesting */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_121:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_122\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_121)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":5640:5739  function getVestingSchedule() public view returns (Vesting memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/VestingToken.sol\":4684:5043  function mint(address to, uint256 amount) external onlyMinter {... */\n    tag_57:\n        /* \"src/VestingToken.sol\":2031:2038  _minter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/VestingToken.sol\":2017:2038  msg.sender != _minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/VestingToken.sol\":2017:2027  msg.sender */\n      caller\n        /* \"src/VestingToken.sol\":2017:2038  msg.sender != _minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/VestingToken.sol\":2013:2084  if (msg.sender != _minter) {... */\n      tag_125\n      jumpi\n        /* \"src/VestingToken.sol\":2061:2073  OnlyMinter() */\n      mload(0x40)\n      0x9cdc2ed500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/VestingToken.sol\":2013:2084  if (msg.sender != _minter) {... */\n    tag_125:\n        /* \"src/VestingToken.sol\":4779:4787  _vesting */\n      0x03\n        /* \"src/VestingToken.sol\":4779:4793  _vesting.cliff */\n      0x01\n      add\n      sload\n        /* \"src/VestingToken.sol\":4760:4775  block.timestamp */\n      timestamp\n        /* \"src/VestingToken.sol\":4760:4793  block.timestamp >= _vesting.cliff */\n      lt\n        /* \"src/VestingToken.sol\":4756:4857  if (block.timestamp >= _vesting.cliff) {... */\n      tag_127\n      jumpi\n        /* \"src/VestingToken.sol\":4816:4846  MintingAfterCliffIsForbidden() */\n      mload(0x40)\n      0xd45c7f9500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/VestingToken.sol\":4756:4857  if (block.timestamp >= _vesting.cliff) {... */\n    tag_127:\n        /* \"src/VestingToken.sol\":4867:4929  _baseToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_128\n        /* \"src/VestingToken.sol\":4895:4905  msg.sender */\n      caller\n        /* \"src/VestingToken.sol\":4915:4919  this */\n      address\n        /* \"src/VestingToken.sol\":4922:4928  amount */\n      dup4\n        /* \"src/VestingToken.sol\":4867:4877  _baseToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/VestingToken.sol\":4867:4894  _baseToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_129\n      swap1\n        /* \"src/VestingToken.sol\":4867:4929  _baseToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"src/VestingToken.sol\":4940:4957  _mint(to, amount) */\n      tag_130\n        /* \"src/VestingToken.sol\":4946:4948  to */\n      dup3\n        /* \"src/VestingToken.sol\":4950:4956  amount */\n      dup3\n        /* \"src/VestingToken.sol\":4940:4945  _mint */\n      tag_131\n        /* \"src/VestingToken.sol\":4940:4957  _mint(to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"src/VestingToken.sol\":4990:4996  amount */\n      dup1\n        /* \"src/VestingToken.sol\":4968:4982  _initialLocked */\n      0x07\n        /* \"src/VestingToken.sol\":4968:4986  _initialLocked[to] */\n      0x00\n        /* \"src/VestingToken.sol\":4983:4985  to */\n      dup5\n        /* \"src/VestingToken.sol\":4968:4986  _initialLocked[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/VestingToken.sol\":4968:4996  _initialLocked[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/VestingToken.sol\":5030:5036  amount */\n      dup1\n        /* \"src/VestingToken.sol\":5006:5026  _initialLockedSupply */\n      0x06\n      0x00\n        /* \"src/VestingToken.sol\":5006:5036  _initialLockedSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_134\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_134:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/VestingToken.sol\":4684:5043  function mint(address to, uint256 amount) external onlyMinter {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":3163:3624  function setVestingSchedule(uint256 startTime, uint256 cliff, Schedule[] calldata schedule)... */\n    tag_61:\n        /* \"src/VestingToken.sol\":2166:2181  _vestingManager */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/VestingToken.sol\":2152:2181  msg.sender != _vestingManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/VestingToken.sol\":2152:2162  msg.sender */\n      caller\n        /* \"src/VestingToken.sol\":2152:2181  msg.sender != _vestingManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/VestingToken.sol\":2148:2235  if (msg.sender != _vestingManager) {... */\n      tag_136\n      jumpi\n        /* \"src/VestingToken.sol\":2204:2224  OnlyVestingManager() */\n      mload(0x40)\n      0x8eccd8b900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/VestingToken.sol\":2148:2235  if (msg.sender != _vestingManager) {... */\n    tag_136:\n        /* \"src/VestingToken.sol\":3313:3335  uint256 scheduleLength */\n      0x00\n        /* \"src/VestingToken.sol\":3338:3346  schedule */\n      dup3\n      dup3\n        /* \"src/VestingToken.sol\":3338:3353  schedule.length */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":3313:3353  uint256 scheduleLength = schedule.length */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":3364:3429  _checkVestingSchedule(startTime, cliff, schedule, scheduleLength) */\n      tag_138\n        /* \"src/VestingToken.sol\":3386:3395  startTime */\n      dup6\n        /* \"src/VestingToken.sol\":3397:3402  cliff */\n      dup6\n        /* \"src/VestingToken.sol\":3404:3412  schedule */\n      dup6\n      dup6\n        /* \"src/VestingToken.sol\":3414:3428  scheduleLength */\n      dup6\n        /* \"src/VestingToken.sol\":3364:3385  _checkVestingSchedule */\n      tag_139\n        /* \"src/VestingToken.sol\":3364:3429  _checkVestingSchedule(startTime, cliff, schedule, scheduleLength) */\n      jump\t// in\n    tag_138:\n        /* \"src/VestingToken.sol\":3461:3470  startTime */\n      dup5\n        /* \"src/VestingToken.sol\":3440:3448  _vesting */\n      0x03\n        /* \"src/VestingToken.sol\":3440:3458  _vesting.startTime */\n      0x00\n      add\n        /* \"src/VestingToken.sol\":3440:3470  _vesting.startTime = startTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/VestingToken.sol\":3497:3502  cliff */\n      dup4\n        /* \"src/VestingToken.sol\":3480:3488  _vesting */\n      0x03\n        /* \"src/VestingToken.sol\":3480:3494  _vesting.cliff */\n      0x01\n      add\n        /* \"src/VestingToken.sol\":3480:3502  _vesting.cliff = cliff */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/VestingToken.sol\":3518:3527  uint256 i */\n      0x00\n        /* \"src/VestingToken.sol\":3513:3618  for (uint256 i = 0; i < scheduleLength; i++) {... */\n    tag_140:\n        /* \"src/VestingToken.sol\":3537:3551  scheduleLength */\n      dup2\n        /* \"src/VestingToken.sol\":3533:3534  i */\n      dup2\n        /* \"src/VestingToken.sol\":3533:3551  i < scheduleLength */\n      lt\n        /* \"src/VestingToken.sol\":3513:3618  for (uint256 i = 0; i < scheduleLength; i++) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"src/VestingToken.sol\":3572:3580  _vesting */\n      0x03\n        /* \"src/VestingToken.sol\":3572:3589  _vesting.schedule */\n      0x02\n      add\n        /* \"src/VestingToken.sol\":3595:3603  schedule */\n      dup5\n      dup5\n        /* \"src/VestingToken.sol\":3604:3605  i */\n      dup4\n        /* \"src/VestingToken.sol\":3595:3606  schedule[i] */\n      dup2\n      dup2\n      lt\n      tag_143\n      jumpi\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n    tag_143:\n      swap1\n      pop\n      0x40\n      mul\n      add\n        /* \"src/VestingToken.sol\":3572:3607  _vesting.schedule.push(schedule[i]) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      dup2\n      dup2\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      pop\n      pop\n        /* \"src/VestingToken.sol\":3553:3556  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/VestingToken.sol\":3513:3618  for (uint256 i = 0; i < scheduleLength; i++) {... */\n      jump(tag_140)\n    tag_141:\n      pop\n        /* \"src/VestingToken.sol\":3303:3624  {... */\n      pop\n        /* \"src/VestingToken.sol\":3163:3624  function setVestingSchedule(uint256 startTime, uint256 cliff, Schedule[] calldata schedule)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":5259:5583  function claim() external {... */\n    tag_63:\n        /* \"src/VestingToken.sol\":5295:5313  uint256 releasable */\n      0x00\n        /* \"src/VestingToken.sol\":5316:5346  availableBalanceOf(msg.sender) */\n      tag_150\n        /* \"src/VestingToken.sol\":5335:5345  msg.sender */\n      caller\n        /* \"src/VestingToken.sol\":5316:5334  availableBalanceOf */\n      tag_45\n        /* \"src/VestingToken.sol\":5316:5346  availableBalanceOf(msg.sender) */\n      jump\t// in\n    tag_150:\n        /* \"src/VestingToken.sol\":5295:5346  uint256 releasable = availableBalanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":5375:5376  0 */\n      0x00\n        /* \"src/VestingToken.sol\":5361:5371  releasable */\n      dup2\n        /* \"src/VestingToken.sol\":5361:5376  releasable == 0 */\n      sub\n        /* \"src/VestingToken.sol\":5357:5434  if (releasable == 0) {... */\n      tag_151\n      jumpi\n        /* \"src/VestingToken.sol\":5399:5423  NotEnoughTokensToClaim() */\n      mload(0x40)\n      0x08bc1cf600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/VestingToken.sol\":5357:5434  if (releasable == 0) {... */\n    tag_151:\n        /* \"src/VestingToken.sol\":5469:5479  releasable */\n      dup1\n        /* \"src/VestingToken.sol\":5444:5453  _released */\n      0x08\n        /* \"src/VestingToken.sol\":5444:5465  _released[msg.sender] */\n      0x00\n        /* \"src/VestingToken.sol\":5454:5464  msg.sender */\n      caller\n        /* \"src/VestingToken.sol\":5444:5465  _released[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/VestingToken.sol\":5444:5479  _released[msg.sender] += releasable */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/VestingToken.sol\":5490:5519  _burn(msg.sender, releasable) */\n      tag_153\n        /* \"src/VestingToken.sol\":5496:5506  msg.sender */\n      caller\n        /* \"src/VestingToken.sol\":5508:5518  releasable */\n      dup3\n        /* \"src/VestingToken.sol\":5490:5495  _burn */\n      tag_154\n        /* \"src/VestingToken.sol\":5490:5519  _burn(msg.sender, releasable) */\n      jump\t// in\n    tag_153:\n        /* \"src/VestingToken.sol\":5529:5576  _baseToken.safeTransfer(msg.sender, releasable) */\n      tag_155\n        /* \"src/VestingToken.sol\":5553:5563  msg.sender */\n      caller\n        /* \"src/VestingToken.sol\":5565:5575  releasable */\n      dup3\n        /* \"src/VestingToken.sol\":5529:5539  _baseToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/VestingToken.sol\":5529:5552  _baseToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_156\n      swap1\n        /* \"src/VestingToken.sol\":5529:5576  _baseToken.safeTransfer(msg.sender, releasable) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"src/VestingToken.sol\":5285:5583  {... */\n      pop\n        /* \"src/VestingToken.sol\":5259:5583  function claim() external {... */\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4100:4271  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4165:4172  uint256 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4184:4206  ERC20Storage storage $ */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4209:4227  _getERC20Storage() */\n      tag_158\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4209:4225  _getERC20Storage */\n      tag_92\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4209:4227  _getERC20Storage() */\n      jump\t// in\n    tag_158:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4184:4227  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4244:4245  $ */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4244:4255  $._balances */\n      0x00\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4244:4264  $._balances[account] */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4256:4263  account */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4244:4264  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4237:4264  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4100:4271  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":2544:2832  function initialize(string calldata name, string calldata symbol, address minter, address baseToken)... */\n    tag_71:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4225:4255  InitializableStorage storage $ */\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4258:4284  _getInitializableStorage() */\n      tag_160\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4258:4282  _getInitializableStorage */\n      tag_161\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4258:4284  _getInitializableStorage() */\n      jump\t// in\n    tag_160:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4225:4284  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4346:4365  bool isTopLevelCall */\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4369:4370  $ */\n      dup2\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4369:4384  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4368:4384  !$._initializing */\n      iszero\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4346:4384  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4394:4412  uint64 initialized */\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4415:4416  $ */\n      dup3\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4415:4429  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4394:4429  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4773:4790  bool initialSetup */\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4808:4809  0 */\n      dup1\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4793:4804  initialized */\n      dup3\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4793:4809  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4793:4827  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_162\n      jumpi\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4813:4827  isTopLevelCall */\n      dup3\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4793:4827  initialized == 0 && isTopLevelCall */\n    tag_162:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4773:4827  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4837:4854  bool construction */\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4872:4873  1 */\n      0x01\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4857:4868  initialized */\n      dup4\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4857:4873  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4857:4907  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_163\n      jumpi\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4906:4907  0 */\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4885:4889  this */\n      address\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4877:4902  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4877:4907  address(this).code.length == 0 */\n      eq\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4857:4907  initialized == 1 && address(this).code.length == 0 */\n    tag_163:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4837:4907  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4923:4935  initialSetup */\n      dup2\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4922:4935  !initialSetup */\n      iszero\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4922:4952  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_164\n      jumpi\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4940:4952  construction */\n      dup1\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4939:4952  !construction */\n      iszero\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4922:4952  !initialSetup && !construction */\n    tag_164:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4918:5009  if (!initialSetup && !construction) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4975:4998  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4918:5009  if (!initialSetup && !construction) {... */\n    tag_165:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5035:5036  1 */\n      0x01\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5018:5019  $ */\n      dup6\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5018:5032  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5018:5036  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5050:5064  isTopLevelCall */\n      dup4\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5046:5113  if (isTopLevelCall) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5098:5102  true */\n      0x01\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5080:5081  $ */\n      dup6\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5080:5095  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5080:5102  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5046:5113  if (isTopLevelCall) {... */\n    tag_166:\n        /* \"src/VestingToken.sol\":2694:2720  __ERC20_init(name, symbol) */\n      tag_168\n        /* \"src/VestingToken.sol\":2707:2711  name */\n      dup12\n      dup12\n        /* \"src/VestingToken.sol\":2694:2720  __ERC20_init(name, symbol) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/VestingToken.sol\":2713:2719  symbol */\n      dup11\n      dup11\n        /* \"src/VestingToken.sol\":2694:2720  __ERC20_init(name, symbol) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/VestingToken.sol\":2694:2706  __ERC20_init */\n      tag_169\n        /* \"src/VestingToken.sol\":2694:2720  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_168:\n        /* \"src/VestingToken.sol\":2741:2747  minter */\n      dup7\n        /* \"src/VestingToken.sol\":2731:2738  _minter */\n      0x00\n      dup1\n        /* \"src/VestingToken.sol\":2731:2747  _minter = minter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/VestingToken.sol\":2777:2786  baseToken */\n      dup6\n        /* \"src/VestingToken.sol\":2757:2767  _baseToken */\n      0x02\n      0x00\n        /* \"src/VestingToken.sol\":2757:2787  _baseToken = IERC20(baseToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/VestingToken.sol\":2815:2825  msg.sender */\n      caller\n        /* \"src/VestingToken.sol\":2797:2812  _vestingManager */\n      0x01\n      0x00\n        /* \"src/VestingToken.sol\":2797:2825  _vestingManager = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5137:5151  isTopLevelCall */\n      dup4\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5133:5234  if (isTopLevelCall) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5185:5190  false */\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5167:5168  $ */\n      dup6\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5167:5182  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5167:5190  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5209:5223  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5221:5222  1 */\n      0x01\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5209:5223  Initialized(1) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":5133:5234  if (isTopLevelCall) {... */\n    tag_170:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":4159:5240  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/VestingToken.sol\":2544:2832  function initialize(string calldata name, string calldata symbol, address minter, address baseToken)... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2967:3115  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3014:3027  string memory */\n      0x60\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3039:3061  ERC20Storage storage $ */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3064:3082  _getERC20Storage() */\n      tag_174\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3064:3080  _getERC20Storage */\n      tag_92\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3064:3082  _getERC20Storage() */\n      jump\t// in\n    tag_174:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3039:3082  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3099:3100  $ */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3099:3108  $._symbol */\n      0x04\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":3092:3108  return $._symbol */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_94\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_94\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2967:3115  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4466:4644  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4535:4539  bool */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4551:4564  address owner */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4567:4579  _msgSender() */\n      tag_181\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4567:4577  _msgSender */\n      tag_101\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4567:4579  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4551:4579  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4589:4616  _transfer(owner, to, value) */\n      tag_182\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4599:4604  owner */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4606:4608  to */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4610:4615  value */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4589:4598  _transfer */\n      tag_111\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4589:4616  _transfer(owner, to, value) */\n      jump\t// in\n    tag_182:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4633:4637  true */\n      0x01\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4626:4637  return true */\n      swap2\n      pop\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4466:4644  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":5849:5968  function lockedSupply() external view returns (uint256) {... */\n    tag_80:\n        /* \"src/VestingToken.sol\":5896:5903  uint256 */\n      0x00\n        /* \"src/VestingToken.sol\":5945:5961  _totalUnlocked() */\n      tag_184\n        /* \"src/VestingToken.sol\":5945:5959  _totalUnlocked */\n      tag_185\n        /* \"src/VestingToken.sol\":5945:5961  _totalUnlocked() */\n      jump\t// in\n    tag_184:\n        /* \"src/VestingToken.sol\":5922:5942  _initialLockedSupply */\n      sload(0x06)\n        /* \"src/VestingToken.sol\":5922:5961  _initialLockedSupply - _totalUnlocked() */\n      tag_186\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_186:\n        /* \"src/VestingToken.sol\":5915:5961  return _initialLockedSupply - _totalUnlocked() */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":5849:5968  function lockedSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4702:4897  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4782:4789  uint256 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4801:4823  ERC20Storage storage $ */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4826:4844  _getERC20Storage() */\n      tag_188\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4826:4842  _getERC20Storage */\n      tag_92\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4826:4844  _getERC20Storage() */\n      jump\t// in\n    tag_188:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4801:4844  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4861:4862  $ */\n      dup1\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4861:4874  $._allowances */\n      0x01\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4861:4881  $._allowances[owner] */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4875:4880  owner */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4861:4881  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4861:4890  $._allowances[owner][spender] */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4882:4889  spender */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4861:4890  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4854:4890  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":4702:4897  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":5745:5843  function unlockedSupply() external view returns (uint256) {... */\n    tag_88:\n        /* \"src/VestingToken.sol\":5794:5801  uint256 */\n      0x00\n        /* \"src/VestingToken.sol\":5820:5836  _totalUnlocked() */\n      tag_190\n        /* \"src/VestingToken.sol\":5820:5834  _totalUnlocked */\n      tag_185\n        /* \"src/VestingToken.sol\":5820:5836  _totalUnlocked() */\n      jump\t// in\n    tag_190:\n        /* \"src/VestingToken.sol\":5813:5836  return _totalUnlocked() */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":5745:5843  function unlockedSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":1941:2094  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_92:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":1991:2013  ERC20Storage storage $ */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2058:2078  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2048:2078  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":1941:2094  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeable/contracts/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_101:\n        /* \"upgradeable/contracts/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"upgradeable/contracts/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"upgradeable/contracts/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"upgradeable/contracts/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9995:10123  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_103:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":10079:10116  _approve(owner, spender, value, true) */\n      tag_194\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":10088:10093  owner */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":10095:10102  spender */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":10104:10109  value */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":10111:10115  true */\n      0x01\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":10079:10087  _approve */\n      tag_195\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":10079:10116  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_194:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9995:10123  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11739:12216  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_109:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11838:11862  uint256 currentAllowance */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11865:11890  allowance(owner, spender) */\n      tag_197\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11875:11880  owner */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11882:11889  spender */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11865:11874  allowance */\n      tag_85\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11865:11890  allowance(owner, spender) */\n      jump\t// in\n    tag_197:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11838:11890  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11924:11941  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11904:11920  currentAllowance */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11904:11941  currentAllowance != type(uint256).max */\n      eq\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11900:12210  if (currentAllowance != type(uint256).max) {... */\n      tag_198\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11980:11985  value */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11961:11977  currentAllowance */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11961:11985  currentAllowance < value */\n      lt\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11957:12087  if (currentAllowance < value) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12039:12046  spender */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12048:12064  currentAllowance */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12066:12071  value */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12012:12072  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11957:12087  if (currentAllowance < value) {... */\n    tag_199:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12128:12185  _approve(owner, spender, currentAllowance - value, false) */\n      tag_202\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12137:12142  owner */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12144:12151  spender */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12172:12177  value */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12153:12169  currentAllowance */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12153:12177  currentAllowance - value */\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12179:12184  false */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12128:12136  _approve */\n      tag_195\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":12128:12185  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_202:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11900:12210  if (currentAllowance != type(uint256).max) {... */\n    tag_198:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11828:12216  {... */\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11739:12216  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6599:6899  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_111:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6698:6699  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6682:6700  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6682:6686  from */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6682:6700  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6678:6764  if (from == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6750:6751  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6723:6753  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6678:6764  if (from == address(0)) {... */\n    tag_204:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6791:6792  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6777:6793  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6777:6779  to */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6777:6793  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6773:6859  if (to == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6845:6846  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6816:6848  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6773:6859  if (to == address(0)) {... */\n    tag_207:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6868:6892  _update(from, to, value) */\n      tag_209\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6876:6880  from */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6882:6884  to */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6886:6891  value */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6868:6875  _update */\n      tag_210\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6868:6892  _update(from, to, value) */\n      jump\t// in\n    tag_209:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":6599:6899  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":6190:6341  function _unlockedOf(address account) private view returns (uint256) {... */\n    tag_114:\n        /* \"src/VestingToken.sol\":6250:6257  uint256 */\n      0x00\n        /* \"src/VestingToken.sol\":6276:6334  _computeUnlocked(_initialLocked[account], block.timestamp) */\n      tag_212\n        /* \"src/VestingToken.sol\":6293:6307  _initialLocked */\n      0x07\n        /* \"src/VestingToken.sol\":6293:6316  _initialLocked[account] */\n      0x00\n        /* \"src/VestingToken.sol\":6308:6315  account */\n      dup5\n        /* \"src/VestingToken.sol\":6293:6316  _initialLocked[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/VestingToken.sol\":6318:6333  block.timestamp */\n      timestamp\n        /* \"src/VestingToken.sol\":6276:6292  _computeUnlocked */\n      tag_213\n        /* \"src/VestingToken.sol\":6276:6334  _computeUnlocked(_initialLocked[account], block.timestamp) */\n      jump\t// in\n    tag_212:\n        /* \"src/VestingToken.sol\":6269:6334  return _computeUnlocked(_initialLocked[account], block.timestamp) */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":6190:6341  function _unlockedOf(address account) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_129:\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_215\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_216\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_218\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8727:8935  function _mint(address account, uint256 value) internal {... */\n    tag_131:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8816:8817  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8797:8818  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8797:8804  account */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8797:8818  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8793:8884  if (account == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8870:8871  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8841:8873  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8793:8884  if (account == address(0)) {... */\n    tag_220:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8893:8928  _update(address(0), account, value) */\n      tag_222\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8909:8910  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8913:8920  account */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8922:8927  value */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8893:8900  _update */\n      tag_210\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8893:8928  _update(address(0), account, value) */\n      jump\t// in\n    tag_222:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8727:8935  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":3630:4495  function _checkVestingSchedule(... */\n    tag_139:\n        /* \"src/VestingToken.sol\":3826:3841  block.timestamp */\n      timestamp\n        /* \"src/VestingToken.sol\":3814:3823  startTime */\n      dup6\n        /* \"src/VestingToken.sol\":3814:3841  startTime < block.timestamp */\n      lt\n        /* \"src/VestingToken.sol\":3810:3900  if (startTime < block.timestamp) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"src/VestingToken.sol\":3864:3889  StartTimeAlreadyElapsed() */\n      mload(0x40)\n      0xc18dfcc200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/VestingToken.sol\":3810:3900  if (startTime < block.timestamp) {... */\n    tag_224:\n        /* \"src/VestingToken.sol\":3926:3931  cliff */\n      dup4\n        /* \"src/VestingToken.sol\":3914:3923  startTime */\n      dup6\n        /* \"src/VestingToken.sol\":3914:3931  startTime > cliff */\n      gt\n        /* \"src/VestingToken.sol\":3910:3987  if (startTime > cliff) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"src/VestingToken.sol\":3954:3976  CliffBeforeStartTime() */\n      mload(0x40)\n      0x8147e9e200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/VestingToken.sol\":3910:3987  if (startTime > cliff) {... */\n    tag_225:\n        /* \"src/VestingToken.sol\":3997:4017  uint256 totalPercent */\n      0x00\n        /* \"src/VestingToken.sol\":4033:4042  uint256 i */\n      dup1\n        /* \"src/VestingToken.sol\":4045:4046  0 */\n      0x00\n        /* \"src/VestingToken.sol\":4033:4046  uint256 i = 0 */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":4028:4386  for (uint256 i = 0; i < scheduleLength; i++) {... */\n    tag_226:\n        /* \"src/VestingToken.sol\":4052:4066  scheduleLength */\n      dup3\n        /* \"src/VestingToken.sol\":4048:4049  i */\n      dup2\n        /* \"src/VestingToken.sol\":4048:4066  i < scheduleLength */\n      lt\n        /* \"src/VestingToken.sol\":4028:4386  for (uint256 i = 0; i < scheduleLength; i++) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"src/VestingToken.sol\":4103:4111  schedule */\n      dup5\n      dup5\n        /* \"src/VestingToken.sol\":4112:4113  i */\n      dup3\n        /* \"src/VestingToken.sol\":4103:4114  schedule[i] */\n      dup2\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_230\n      tag_145\n      jump\t// in\n    tag_230:\n    tag_229:\n      swap1\n      pop\n      0x40\n      mul\n      add\n        /* \"src/VestingToken.sol\":4103:4122  schedule[i].portion */\n      0x20\n      add\n      calldataload\n        /* \"src/VestingToken.sol\":4087:4122  totalPercent += schedule[i].portion */\n      dup3\n      tag_231\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_231:\n      swap2\n      pop\n        /* \"src/VestingToken.sol\":4137:4161  bool isEndTimeOutOfOrder */\n      0x00\n        /* \"src/VestingToken.sol\":4170:4171  0 */\n      dup1\n        /* \"src/VestingToken.sol\":4165:4166  i */\n      dup3\n        /* \"src/VestingToken.sol\":4165:4171  i != 0 */\n      eq\n      iszero\n        /* \"src/VestingToken.sol\":4164:4222  (i != 0) && schedule[i - 1].endTime >= schedule[i].endTime */\n      dup1\n      iszero\n      tag_232\n      jumpi\n      pop\n        /* \"src/VestingToken.sol\":4203:4211  schedule */\n      dup6\n      dup6\n        /* \"src/VestingToken.sol\":4212:4213  i */\n      dup4\n        /* \"src/VestingToken.sol\":4203:4214  schedule[i] */\n      dup2\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_234\n      tag_145\n      jump\t// in\n    tag_234:\n    tag_233:\n      swap1\n      pop\n      0x40\n      mul\n      add\n        /* \"src/VestingToken.sol\":4203:4222  schedule[i].endTime */\n      0x00\n      add\n      calldataload\n        /* \"src/VestingToken.sol\":4176:4184  schedule */\n      dup7\n      dup7\n        /* \"src/VestingToken.sol\":4189:4190  1 */\n      0x01\n        /* \"src/VestingToken.sol\":4185:4186  i */\n      dup6\n        /* \"src/VestingToken.sol\":4185:4190  i - 1 */\n      tag_235\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_235:\n        /* \"src/VestingToken.sol\":4176:4191  schedule[i - 1] */\n      dup2\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_237\n      tag_145\n      jump\t// in\n    tag_237:\n    tag_236:\n      swap1\n      pop\n      0x40\n      mul\n      add\n        /* \"src/VestingToken.sol\":4176:4199  schedule[i - 1].endTime */\n      0x00\n      add\n      calldataload\n        /* \"src/VestingToken.sol\":4176:4222  schedule[i - 1].endTime >= schedule[i].endTime */\n      lt\n      iszero\n        /* \"src/VestingToken.sol\":4164:4222  (i != 0) && schedule[i - 1].endTime >= schedule[i].endTime */\n    tag_232:\n        /* \"src/VestingToken.sol\":4137:4222  bool isEndTimeOutOfOrder = (i != 0) && schedule[i - 1].endTime >= schedule[i].endTime */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":4250:4258  schedule */\n      dup6\n      dup6\n        /* \"src/VestingToken.sol\":4259:4260  i */\n      dup4\n        /* \"src/VestingToken.sol\":4250:4261  schedule[i] */\n      dup2\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_239\n      tag_145\n      jump\t// in\n    tag_239:\n    tag_238:\n      swap1\n      pop\n      0x40\n      mul\n      add\n        /* \"src/VestingToken.sol\":4250:4269  schedule[i].endTime */\n      0x00\n      add\n      calldataload\n        /* \"src/VestingToken.sol\":4241:4246  cliff */\n      dup8\n        /* \"src/VestingToken.sol\":4241:4269  cliff >= schedule[i].endTime */\n      lt\n      iszero\n        /* \"src/VestingToken.sol\":4241:4292  cliff >= schedule[i].endTime || isEndTimeOutOfOrder */\n      dup1\n      tag_240\n      jumpi\n      pop\n        /* \"src/VestingToken.sol\":4273:4292  isEndTimeOutOfOrder */\n      dup1\n        /* \"src/VestingToken.sol\":4241:4292  cliff >= schedule[i].endTime || isEndTimeOutOfOrder */\n    tag_240:\n        /* \"src/VestingToken.sol\":4237:4376  if (cliff >= schedule[i].endTime || isEndTimeOutOfOrder) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"src/VestingToken.sol\":4341:4349  schedule */\n      dup6\n      dup6\n        /* \"src/VestingToken.sol\":4350:4351  i */\n      dup4\n        /* \"src/VestingToken.sol\":4341:4352  schedule[i] */\n      dup2\n      dup2\n      lt\n      tag_242\n      jumpi\n      tag_243\n      tag_145\n      jump\t// in\n    tag_243:\n    tag_242:\n      swap1\n      pop\n      0x40\n      mul\n      add\n        /* \"src/VestingToken.sol\":4341:4360  schedule[i].endTime */\n      0x00\n      add\n      calldataload\n        /* \"src/VestingToken.sol\":4319:4361  IncorrectScheduleTime(schedule[i].endTime) */\n      mload(0x40)\n      0x1a3250bd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/VestingToken.sol\":4237:4376  if (cliff >= schedule[i].endTime || isEndTimeOutOfOrder) {... */\n    tag_241:\n        /* \"src/VestingToken.sol\":4073:4386  {... */\n      pop\n        /* \"src/VestingToken.sol\":4068:4071  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/VestingToken.sol\":4028:4386  for (uint256 i = 0; i < scheduleLength; i++) {... */\n      jump(tag_226)\n    tag_227:\n      pop\n        /* \"src/VestingToken.sol\":1149:1155  10_000 */\n      0x2710\n        /* \"src/VestingToken.sol\":4400:4412  totalPercent */\n      dup2\n        /* \"src/VestingToken.sol\":4400:4428  totalPercent != BASIS_POINTS */\n      eq\n        /* \"src/VestingToken.sol\":4396:4489  if (totalPercent != BASIS_POINTS) {... */\n      tag_245\n      jumpi\n        /* \"src/VestingToken.sol\":4451:4478  IncorrectSchedulePortions() */\n      mload(0x40)\n      0xc45b8e2700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/VestingToken.sol\":4396:4489  if (totalPercent != BASIS_POINTS) {... */\n    tag_245:\n        /* \"src/VestingToken.sol\":3800:4495  {... */\n      pop\n        /* \"src/VestingToken.sol\":3630:4495  function _checkVestingSchedule(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9253:9459  function _burn(address account, uint256 value) internal {... */\n    tag_154:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9342:9343  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9323:9344  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9323:9330  account */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9323:9344  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9319:9408  if (account == address(0)) {... */\n      tag_247\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9394:9395  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9367:9397  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9319:9408  if (account == address(0)) {... */\n    tag_247:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9417:9452  _update(account, address(0), value) */\n      tag_249\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9425:9432  account */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9442:9443  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9446:9451  value */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9417:9424  _update */\n      tag_210\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9417:9452  _update(account, address(0), value) */\n      jump\t// in\n    tag_249:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":9253:9459  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_156:\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_251\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_252\n      swap3\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_218\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8804:8974  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_161:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8862:8892  InitializableStorage storage $ */\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8937:8958  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8927:8958  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8804:8974  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2276:2423  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_169:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":6998:7018  _checkInitializing() */\n      tag_256\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":6998:7016  _checkInitializing */\n      tag_257\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":6998:7018  _checkInitializing() */\n      jump\t// in\n    tag_256:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2378:2416  __ERC20_init_unchained(name_, symbol_) */\n      tag_259\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2401:2406  name_ */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2408:2415  symbol_ */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2378:2400  __ERC20_init_unchained */\n      tag_260\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2378:2416  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_259:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2276:2423  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":6347:6483  function _totalUnlocked() private view returns (uint256) {... */\n    tag_185:\n        /* \"src/VestingToken.sol\":6395:6402  uint256 */\n      0x00\n        /* \"src/VestingToken.sol\":6421:6476  _computeUnlocked(_initialLockedSupply, block.timestamp) */\n      tag_262\n        /* \"src/VestingToken.sol\":6438:6458  _initialLockedSupply */\n      sload(0x06)\n        /* \"src/VestingToken.sol\":6460:6475  block.timestamp */\n      timestamp\n        /* \"src/VestingToken.sol\":6421:6437  _computeUnlocked */\n      tag_213\n        /* \"src/VestingToken.sol\":6421:6476  _computeUnlocked(_initialLockedSupply, block.timestamp) */\n      jump\t// in\n    tag_262:\n        /* \"src/VestingToken.sol\":6414:6476  return _computeUnlocked(_initialLockedSupply, block.timestamp) */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":6347:6483  function _totalUnlocked() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":10970:11457  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_195:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11078:11100  ERC20Storage storage $ */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11103:11121  _getERC20Storage() */\n      tag_264\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11103:11119  _getERC20Storage */\n      tag_92\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11103:11121  _getERC20Storage() */\n      jump\t// in\n    tag_264:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11078:11121  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11152:11153  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11135:11154  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11135:11140  owner */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11135:11154  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11131:11220  if (owner == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11206:11207  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11177:11209  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11131:11220  if (owner == address(0)) {... */\n    tag_265:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11252:11253  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11233:11254  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11233:11240  spender */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11233:11254  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11229:11319  if (spender == address(0)) {... */\n      tag_267\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11305:11306  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11277:11308  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11229:11319  if (spender == address(0)) {... */\n    tag_267:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11360:11365  value */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11328:11329  $ */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11328:11341  $._allowances */\n      0x01\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11328:11348  $._allowances[owner] */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11342:11347  owner */\n      dup8\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11328:11348  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11328:11357  $._allowances[owner][spender] */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11349:11356  spender */\n      dup7\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11328:11357  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11328:11365  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11379:11388  emitEvent */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11375:11451  if (emitEvent) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11425:11432  spender */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11409:11440  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11418:11423  owner */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11409:11440  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11434:11439  value */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11409:11440  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_270\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11375:11451  if (emitEvent) {... */\n    tag_269:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":11068:11457  {... */\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":10970:11457  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7214:8384  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_210:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7299:7321  ERC20Storage storage $ */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7324:7342  _getERC20Storage() */\n      tag_272\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7324:7340  _getERC20Storage */\n      tag_92\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7324:7342  _getERC20Storage() */\n      jump\t// in\n    tag_272:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7299:7342  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7372:7373  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7356:7374  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7356:7360  from */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7356:7374  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7352:7898  if (from == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7510:7515  value */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7492:7493  $ */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7492:7506  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7492:7515  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_274\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_274:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7352:7898  if (from == address(0)) {... */\n      jump(tag_275)\n    tag_273:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7546:7565  uint256 fromBalance */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7568:7569  $ */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7568:7579  $._balances */\n      0x00\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7568:7585  $._balances[from] */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7580:7584  from */\n      dup7\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7568:7585  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7546:7585  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7617:7622  value */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7603:7614  fromBalance */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7603:7622  fromBalance < value */\n      lt\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7599:7714  if (fromBalance < value) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7674:7678  from */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7680:7691  fromBalance */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7693:7698  value */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7649:7699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7599:7714  if (fromBalance < value) {... */\n    tag_276:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7868:7873  value */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7854:7865  fromBalance */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7854:7873  fromBalance - value */\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7834:7835  $ */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7834:7845  $._balances */\n      0x00\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7834:7851  $._balances[from] */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7846:7850  from */\n      dup8\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7834:7851  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7834:7873  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7532:7898  {... */\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7352:7898  if (from == address(0)) {... */\n    tag_275:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7926:7927  0 */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7912:7928  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7912:7914  to */\n      dup4\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7912:7928  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7908:8337  if (to == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8093:8098  value */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8075:8076  $ */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8075:8089  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8075:8098  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7908:8337  if (to == address(0)) {... */\n      jump(tag_279)\n    tag_278:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8307:8312  value */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8288:8289  $ */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8288:8299  $._balances */\n      0x00\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8288:8303  $._balances[to] */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8300:8302  to */\n      dup6\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8288:8303  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8288:8312  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7908:8337  if (to == address(0)) {... */\n    tag_279:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8367:8369  to */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8352:8377  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8361:8365  from */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8352:8377  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8371:8376  value */\n      dup5\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":8352:8377  Transfer(from, to, value) */\n      mload(0x40)\n      tag_280\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7289:8384  {... */\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":7214:8384  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/VestingToken.sol\":6831:7970  function _computeUnlocked(uint256 lockedTokens, uint256 time) private view returns (uint256 unlockedTokens) {... */\n    tag_213:\n        /* \"src/VestingToken.sol\":6915:6937  uint256 unlockedTokens */\n      0x00\n        /* \"src/VestingToken.sol\":6960:6968  _vesting */\n      0x03\n        /* \"src/VestingToken.sol\":6960:6974  _vesting.cliff */\n      0x01\n      add\n      sload\n        /* \"src/VestingToken.sol\":6953:6957  time */\n      dup3\n        /* \"src/VestingToken.sol\":6953:6974  time < _vesting.cliff */\n      lt\n        /* \"src/VestingToken.sol\":6949:7009  if (time < _vesting.cliff) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"src/VestingToken.sol\":6997:6998  0 */\n      0x00\n        /* \"src/VestingToken.sol\":6990:6998  return 0 */\n      swap1\n      pop\n      jump(tag_281)\n        /* \"src/VestingToken.sol\":6949:7009  if (time < _vesting.cliff) {... */\n    tag_282:\n        /* \"src/VestingToken.sol\":7019:7045  uint256 currentPeriodStart */\n      0x00\n        /* \"src/VestingToken.sol\":7048:7056  _vesting */\n      0x03\n        /* \"src/VestingToken.sol\":7048:7062  _vesting.cliff */\n      0x01\n      add\n      sload\n        /* \"src/VestingToken.sol\":7019:7062  uint256 currentPeriodStart = _vesting.cliff */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":7072:7098  Schedule[] memory schedule */\n      0x00\n        /* \"src/VestingToken.sol\":7101:7109  _vesting */\n      0x03\n        /* \"src/VestingToken.sol\":7101:7118  _vesting.schedule */\n      0x02\n      add\n        /* \"src/VestingToken.sol\":7072:7118  Schedule[] memory schedule = _vesting.schedule */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_283:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_284\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_283)\n    tag_284:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":7128:7150  uint256 scheduleLength */\n      0x00\n        /* \"src/VestingToken.sol\":7153:7161  schedule */\n      dup2\n        /* \"src/VestingToken.sol\":7153:7168  schedule.length */\n      mload\n        /* \"src/VestingToken.sol\":7128:7168  uint256 scheduleLength = schedule.length */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":7184:7193  uint256 i */\n      0x00\n        /* \"src/VestingToken.sol\":7179:7964  for (uint256 i = 0; i < scheduleLength; i++) {... */\n    tag_286:\n        /* \"src/VestingToken.sol\":7203:7217  scheduleLength */\n      dup2\n        /* \"src/VestingToken.sol\":7199:7200  i */\n      dup2\n        /* \"src/VestingToken.sol\":7199:7217  i < scheduleLength */\n      lt\n        /* \"src/VestingToken.sol\":7179:7964  for (uint256 i = 0; i < scheduleLength; i++) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"src/VestingToken.sol\":7238:7267  Schedule memory currentPeriod */\n      0x00\n        /* \"src/VestingToken.sol\":7270:7278  schedule */\n      dup4\n        /* \"src/VestingToken.sol\":7279:7280  i */\n      dup3\n        /* \"src/VestingToken.sol\":7270:7281  schedule[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_289\n      jumpi\n      tag_290\n      tag_145\n      jump\t// in\n    tag_290:\n    tag_289:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/VestingToken.sol\":7238:7281  Schedule memory currentPeriod = schedule[i] */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":7295:7319  uint256 currentPeriodEnd */\n      0x00\n        /* \"src/VestingToken.sol\":7322:7335  currentPeriod */\n      dup2\n        /* \"src/VestingToken.sol\":7322:7343  currentPeriod.endTime */\n      0x00\n      add\n      mload\n        /* \"src/VestingToken.sol\":7295:7343  uint256 currentPeriodEnd = currentPeriod.endTime */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":7357:7385  uint256 currentPeriodPortion */\n      0x00\n        /* \"src/VestingToken.sol\":7388:7401  currentPeriod */\n      dup3\n        /* \"src/VestingToken.sol\":7388:7409  currentPeriod.portion */\n      0x20\n      add\n      mload\n        /* \"src/VestingToken.sol\":7357:7409  uint256 currentPeriodPortion = currentPeriod.portion */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":7435:7451  currentPeriodEnd */\n      dup2\n        /* \"src/VestingToken.sol\":7428:7432  time */\n      dup10\n        /* \"src/VestingToken.sol\":7428:7451  time < currentPeriodEnd */\n      lt\n        /* \"src/VestingToken.sol\":7424:7954  if (time < currentPeriodEnd) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"src/VestingToken.sol\":7471:7496  uint256 elapsedPeriodTime */\n      0x00\n        /* \"src/VestingToken.sol\":7506:7524  currentPeriodStart */\n      dup8\n        /* \"src/VestingToken.sol\":7499:7503  time */\n      dup11\n        /* \"src/VestingToken.sol\":7499:7524  time - currentPeriodStart */\n      tag_292\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_292:\n        /* \"src/VestingToken.sol\":7471:7524  uint256 elapsedPeriodTime = time - currentPeriodStart */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":7542:7564  uint256 periodDuration */\n      0x00\n        /* \"src/VestingToken.sol\":7586:7604  currentPeriodStart */\n      dup9\n        /* \"src/VestingToken.sol\":7567:7583  currentPeriodEnd */\n      dup5\n        /* \"src/VestingToken.sol\":7567:7604  currentPeriodEnd - currentPeriodStart */\n      tag_293\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_293:\n        /* \"src/VestingToken.sol\":7542:7604  uint256 periodDuration = currentPeriodEnd - currentPeriodStart */\n      swap1\n      pop\n        /* \"src/VestingToken.sol\":1149:1155  10_000 */\n      0x2710\n        /* \"src/VestingToken.sol\":7722:7736  periodDuration */\n      dup2\n        /* \"src/VestingToken.sol\":7722:7751  periodDuration * BASIS_POINTS */\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"src/VestingToken.sol\":7697:7717  currentPeriodPortion */\n      dup4\n        /* \"src/VestingToken.sol\":7677:7694  elapsedPeriodTime */\n      dup4\n        /* \"src/VestingToken.sol\":7662:7674  lockedTokens */\n      dup15\n        /* \"src/VestingToken.sol\":7662:7694  lockedTokens * elapsedPeriodTime */\n      tag_296\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_296:\n        /* \"src/VestingToken.sol\":7662:7717  lockedTokens * elapsedPeriodTime * currentPeriodPortion */\n      tag_297\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_297:\n        /* \"src/VestingToken.sol\":7661:7752  (lockedTokens * elapsedPeriodTime * currentPeriodPortion) / (periodDuration * BASIS_POINTS) */\n      tag_298\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"src/VestingToken.sol\":7623:7752  unlockedTokens +=... */\n      dup11\n      tag_300\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_300:\n      swap10\n      pop\n        /* \"src/VestingToken.sol\":7770:7775  break */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_287)\n        /* \"src/VestingToken.sol\":7424:7954  if (time < currentPeriodEnd) {... */\n    tag_291:\n        /* \"src/VestingToken.sol\":1149:1155  10_000 */\n      0x2710\n        /* \"src/VestingToken.sol\":7848:7868  currentPeriodPortion */\n      dup2\n        /* \"src/VestingToken.sol\":7833:7845  lockedTokens */\n      dup12\n        /* \"src/VestingToken.sol\":7833:7868  lockedTokens * currentPeriodPortion */\n      tag_302\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_302:\n        /* \"src/VestingToken.sol\":7832:7884  (lockedTokens * currentPeriodPortion) / BASIS_POINTS */\n      tag_303\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_303:\n        /* \"src/VestingToken.sol\":7814:7884  unlockedTokens += (lockedTokens * currentPeriodPortion) / BASIS_POINTS */\n      dup9\n      tag_304\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_304:\n      swap8\n      pop\n        /* \"src/VestingToken.sol\":7923:7939  currentPeriodEnd */\n      dup2\n        /* \"src/VestingToken.sol\":7902:7939  currentPeriodStart = currentPeriodEnd */\n      swap7\n      pop\n        /* \"src/VestingToken.sol\":7224:7964  {... */\n      pop\n      pop\n      pop\n        /* \"src/VestingToken.sol\":7219:7222  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/VestingToken.sol\":7179:7964  for (uint256 i = 0; i < scheduleLength; i++) {... */\n      jump(tag_286)\n    tag_287:\n      pop\n        /* \"src/VestingToken.sol\":6939:7970  {... */\n      pop\n      pop\n      pop\n        /* \"src/VestingToken.sol\":6831:7970  function _computeUnlocked(uint256 lockedTokens, uint256 time) private view returns (uint256 unlockedTokens) {... */\n    tag_281:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6468:7097  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_218:\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6887:6910  bytes memory returndata */\n      0x00\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6913:6946  address(token).functionCall(data) */\n      tag_306\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6941:6945  data */\n      dup3\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6921:6926  token */\n      dup5\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6913:6940  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_307\n      swap1\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6913:6946  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_306:\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6887:6946  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6981:6982  0 */\n      0x00\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6960:6970  returndata */\n      dup2\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6960:6977  returndata.length */\n      mload\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6960:6982  returndata.length != 0 */\n      eq\n      iszero\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6960:7017  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6998:7008  returndata */\n      dup1\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6987:7017  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_309\n      swap2\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6986:7017  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6960:7017  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_308:\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6956:7091  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":7073:7078  token */\n      dup3\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":7040:7080  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6956:7091  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_311:\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6538:7097  {... */\n      pop\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":6468:7097  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7151:7292  function _checkInitializing() internal view virtual {... */\n    tag_257:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7218:7235  _isInitializing() */\n      tag_314\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7218:7233  _isInitializing */\n      tag_315\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7218:7235  _isInitializing() */\n      jump\t// in\n    tag_314:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7213:7286  if (!_isInitializing()) {... */\n      tag_316\n      jumpi\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7258:7275  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7213:7286  if (!_isInitializing()) {... */\n    tag_316:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":7151:7292  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2429:2645  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_260:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":6998:7018  _checkInitializing() */\n      tag_318\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":6998:7016  _checkInitializing */\n      tag_257\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":6998:7018  _checkInitializing() */\n      jump\t// in\n    tag_318:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2541:2563  ERC20Storage storage $ */\n      0x00\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2566:2584  _getERC20Storage() */\n      tag_320\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2566:2582  _getERC20Storage */\n      tag_92\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2566:2584  _getERC20Storage() */\n      jump\t// in\n    tag_320:\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2541:2584  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2604:2609  name_ */\n      dup3\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2594:2595  $ */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2594:2601  $._name */\n      0x03\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2594:2609  $._name = name_ */\n      swap1\n      dup2\n      tag_321\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2631:2638  symbol_ */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2619:2620  $ */\n      dup2\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2619:2628  $._symbol */\n      0x04\n      add\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2619:2638  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_323\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_323:\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2531:2645  {... */\n      pop\n        /* \"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":2429:2645  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Address.sol\":2484:2635  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_307:\n        /* \"contracts/utils/Address.sol\":2559:2571  bytes memory */\n      0x60\n        /* \"contracts/utils/Address.sol\":2590:2628  functionCallWithValue(target, data, 0) */\n      tag_325\n        /* \"contracts/utils/Address.sol\":2612:2618  target */\n      dup4\n        /* \"contracts/utils/Address.sol\":2620:2624  data */\n      dup4\n        /* \"contracts/utils/Address.sol\":2626:2627  0 */\n      0x00\n        /* \"contracts/utils/Address.sol\":2590:2611  functionCallWithValue */\n      tag_326\n        /* \"contracts/utils/Address.sol\":2590:2628  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_325:\n        /* \"contracts/utils/Address.sol\":2583:2628  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"contracts/utils/Address.sol\":2484:2635  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8554:8674  function _isInitializing() internal view returns (bool) {... */\n    tag_315:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8604:8608  bool */\n      0x00\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8627:8653  _getInitializableStorage() */\n      tag_328\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8627:8651  _getInitializableStorage */\n      tag_161\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8627:8653  _getInitializableStorage() */\n      jump\t// in\n    tag_328:\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8627:8667  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8620:8667  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"upgradeable/contracts/proxy/utils/Initializable.sol\":8554:8674  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/utils/Address.sol\":2959:3366  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_326:\n        /* \"contracts/utils/Address.sol\":3058:3070  bytes memory */\n      0x60\n        /* \"contracts/utils/Address.sol\":3110:3115  value */\n      dup2\n        /* \"contracts/utils/Address.sol\":3086:3107  address(this).balance */\n      selfbalance\n        /* \"contracts/utils/Address.sol\":3086:3115  address(this).balance < value */\n      lt\n        /* \"contracts/utils/Address.sol\":3082:3205  if (address(this).balance < value) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"contracts/utils/Address.sol\":3165:3186  address(this).balance */\n      selfbalance\n        /* \"contracts/utils/Address.sol\":3188:3193  value */\n      dup3\n        /* \"contracts/utils/Address.sol\":3138:3194  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap3\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/Address.sol\":3082:3205  if (address(this).balance < value) {... */\n    tag_330:\n        /* \"contracts/utils/Address.sol\":3215:3227  bool success */\n      0x00\n        /* \"contracts/utils/Address.sol\":3229:3252  bytes memory returndata */\n      dup1\n        /* \"contracts/utils/Address.sol\":3256:3262  target */\n      dup6\n        /* \"contracts/utils/Address.sol\":3256:3267  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/Address.sol\":3275:3280  value */\n      dup5\n        /* \"contracts/utils/Address.sol\":3282:3286  data */\n      dup7\n        /* \"contracts/utils/Address.sol\":3256:3287  target.call{value: value}(data) */\n      mload(0x40)\n      tag_333\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_337\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_336)\n    tag_337:\n      0x60\n      swap2\n      pop\n    tag_336:\n      pop\n        /* \"contracts/utils/Address.sol\":3214:3287  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/utils/Address.sol\":3304:3359  verifyCallResultFromTarget(target, success, returndata) */\n      tag_338\n        /* \"contracts/utils/Address.sol\":3331:3337  target */\n      dup7\n        /* \"contracts/utils/Address.sol\":3339:3346  success */\n      dup4\n        /* \"contracts/utils/Address.sol\":3348:3358  returndata */\n      dup4\n        /* \"contracts/utils/Address.sol\":3304:3330  verifyCallResultFromTarget */\n      tag_339\n        /* \"contracts/utils/Address.sol\":3304:3359  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_338:\n        /* \"contracts/utils/Address.sol\":3297:3359  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/utils/Address.sol\":2959:3366  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_339:\n        /* \"contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_341\n      jumpi\n        /* \"contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_342\n        /* \"contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_343\n        /* \"contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_342:\n        /* \"contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_344)\n    tag_341:\n        /* \"contracts/utils/Address.sol\":4862:4863  0 */\n      0x00\n        /* \"contracts/utils/Address.sol\":4841:4851  returndata */\n      dup3\n        /* \"contracts/utils/Address.sol\":4841:4858  returndata.length */\n      mload\n        /* \"contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      eq\n        /* \"contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_345\n      jumpi\n      pop\n        /* \"contracts/utils/Address.sol\":4889:4890  0 */\n      0x00\n        /* \"contracts/utils/Address.sol\":4867:4873  target */\n      dup5\n        /* \"contracts/utils/Address.sol\":4867:4885  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      eq\n        /* \"contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_345:\n        /* \"contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"contracts/utils/Address.sol\":4934:4940  target */\n      dup4\n        /* \"contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_346:\n        /* \"contracts/utils/Address.sol\":4976:4986  returndata */\n      dup2\n        /* \"contracts/utils/Address.sol\":4969:4986  return returndata */\n      swap1\n      pop\n      jump(tag_340)\n        /* \"contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_344:\n        /* \"contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_340:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Address.sol\":5543:6061  function _revert(bytes memory returndata) private pure {... */\n    tag_343:\n        /* \"contracts/utils/Address.sol\":5694:5695  0 */\n      0x00\n        /* \"contracts/utils/Address.sol\":5674:5684  returndata */\n      dup2\n        /* \"contracts/utils/Address.sol\":5674:5691  returndata.length */\n      mload\n        /* \"contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      gt\n        /* \"contracts/utils/Address.sol\":5670:6055  if (returndata.length > 0) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"contracts/utils/Address.sol\":5902:5912  returndata */\n      dup1\n        /* \"contracts/utils/Address.sol\":5896:5913  mload(returndata) */\n      mload\n        /* \"contracts/utils/Address.sol\":5958:5973  returndata_size */\n      dup1\n        /* \"contracts/utils/Address.sol\":5945:5955  returndata */\n      dup3\n        /* \"contracts/utils/Address.sol\":5941:5943  32 */\n      0x20\n        /* \"contracts/utils/Address.sol\":5937:5956  add(32, returndata) */\n      add\n        /* \"contracts/utils/Address.sol\":5930:5974  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/utils/Address.sol\":5670:6055  if (returndata.length > 0) {... */\n    tag_349:\n        /* \"contracts/utils/Address.sol\":6025:6044  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_351:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_352:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_353:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_354:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_355:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_426\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_351\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":711:782   */\n      tag_427\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_352\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_428\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_353\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":881:910   */\n      tag_429\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_354\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_431\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_355\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_357:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_358:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_359:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_360:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_437\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_359\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_361:\n        /* \"#utility.yul\":1876:1900   */\n      tag_439\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_360\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_440:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_362:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_442\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_361\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_363:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_364:\n        /* \"#utility.yul\":2232:2256   */\n      tag_445\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_363\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_446:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_365:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_448\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_364\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_451\n      tag_357\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":2525:2644   */\n    tag_450:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_452\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_362\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_453\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_365\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_366:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_367:\n        /* \"#utility.yul\":3089:3110   */\n      tag_456\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_366\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_458\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_367\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_368:\n        /* \"#utility.yul\":3426:3450   */\n      tag_460\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_363\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_36:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_462\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_368\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_39:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_465\n      tag_357\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3801:3920   */\n    tag_464:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_466\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_362\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_467\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_362\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_468\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_365\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4645   */\n    tag_44:\n        /* \"#utility.yul\":4375:4381   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4403:4410   */\n      dup5\n        /* \"#utility.yul\":4399:4422   */\n      sub\n        /* \"#utility.yul\":4395:4427   */\n      slt\n        /* \"#utility.yul\":4392:4511   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":4430:4509   */\n      tag_471\n      tag_357\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4392:4511   */\n    tag_470:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4575:4628   */\n      tag_472\n        /* \"#utility.yul\":4620:4627   */\n      dup5\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup6\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_362\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4521:4638   */\n      pop\n        /* \"#utility.yul\":4316:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_369:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_370:\n        /* \"#utility.yul\":4826:4848   */\n      tag_475\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_369\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_50:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_477\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_370\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5189   */\n    tag_371:\n        /* \"#utility.yul\":5158:5182   */\n      tag_479\n        /* \"#utility.yul\":5176:5181   */\n      dup2\n        /* \"#utility.yul\":5158:5182   */\n      tag_363\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":5153:5156   */\n      dup3\n        /* \"#utility.yul\":5146:5183   */\n      mstore\n        /* \"#utility.yul\":5081:5189   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5195:5335   */\n    tag_372:\n        /* \"#utility.yul\":5288:5294   */\n      0x00\n        /* \"#utility.yul\":5322:5327   */\n      dup2\n        /* \"#utility.yul\":5316:5328   */\n      mload\n        /* \"#utility.yul\":5306:5328   */\n      swap1\n      pop\n        /* \"#utility.yul\":5195:5335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5341:5541   */\n    tag_373:\n        /* \"#utility.yul\":5456:5467   */\n      0x00\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5485:5488   */\n      dup3\n        /* \"#utility.yul\":5478:5497   */\n      mstore\n        /* \"#utility.yul\":5530:5534   */\n      0x20\n        /* \"#utility.yul\":5525:5528   */\n      dup3\n        /* \"#utility.yul\":5521:5535   */\n      add\n        /* \"#utility.yul\":5506:5535   */\n      swap1\n      pop\n        /* \"#utility.yul\":5341:5541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5547:5705   */\n    tag_374:\n        /* \"#utility.yul\":5640:5644   */\n      0x00\n        /* \"#utility.yul\":5663:5666   */\n      dup2\n        /* \"#utility.yul\":5655:5666   */\n      swap1\n      pop\n        /* \"#utility.yul\":5693:5697   */\n      0x20\n        /* \"#utility.yul\":5688:5691   */\n      dup3\n        /* \"#utility.yul\":5684:5698   */\n      add\n        /* \"#utility.yul\":5676:5698   */\n      swap1\n      pop\n        /* \"#utility.yul\":5547:5705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5753:6258   */\n    tag_375:\n        /* \"#utility.yul\":5892:5896   */\n      0x40\n        /* \"#utility.yul\":5887:5890   */\n      dup3\n        /* \"#utility.yul\":5883:5897   */\n      add\n        /* \"#utility.yul\":5982:5986   */\n      0x00\n        /* \"#utility.yul\":5975:5980   */\n      dup3\n        /* \"#utility.yul\":5971:5987   */\n      add\n        /* \"#utility.yul\":5965:5988   */\n      mload\n        /* \"#utility.yul\":6001:6064   */\n      tag_484\n        /* \"#utility.yul\":6058:6062   */\n      0x00\n        /* \"#utility.yul\":6053:6056   */\n      dup6\n        /* \"#utility.yul\":6049:6063   */\n      add\n        /* \"#utility.yul\":6035:6047   */\n      dup3\n        /* \"#utility.yul\":6001:6064   */\n      tag_371\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":5907:6074   */\n      pop\n        /* \"#utility.yul\":6159:6163   */\n      0x20\n        /* \"#utility.yul\":6152:6157   */\n      dup3\n        /* \"#utility.yul\":6148:6164   */\n      add\n        /* \"#utility.yul\":6142:6165   */\n      mload\n        /* \"#utility.yul\":6178:6241   */\n      tag_485\n        /* \"#utility.yul\":6235:6239   */\n      0x20\n        /* \"#utility.yul\":6230:6233   */\n      dup6\n        /* \"#utility.yul\":6226:6240   */\n      add\n        /* \"#utility.yul\":6212:6224   */\n      dup3\n        /* \"#utility.yul\":6178:6241   */\n      tag_371\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6084:6251   */\n      pop\n        /* \"#utility.yul\":5861:6258   */\n      pop\n        /* \"#utility.yul\":5753:6258   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6264:6547   */\n    tag_376:\n        /* \"#utility.yul\":6385:6395   */\n      0x00\n        /* \"#utility.yul\":6406:6504   */\n      tag_487\n        /* \"#utility.yul\":6500:6503   */\n      dup4\n        /* \"#utility.yul\":6492:6498   */\n      dup4\n        /* \"#utility.yul\":6406:6504   */\n      tag_375\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":6536:6540   */\n      0x40\n        /* \"#utility.yul\":6531:6534   */\n      dup4\n        /* \"#utility.yul\":6527:6541   */\n      add\n        /* \"#utility.yul\":6513:6541   */\n      swap1\n      pop\n        /* \"#utility.yul\":6264:6547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6553:6692   */\n    tag_377:\n        /* \"#utility.yul\":6649:6653   */\n      0x00\n        /* \"#utility.yul\":6681:6685   */\n      0x20\n        /* \"#utility.yul\":6676:6679   */\n      dup3\n        /* \"#utility.yul\":6672:6686   */\n      add\n        /* \"#utility.yul\":6664:6686   */\n      swap1\n      pop\n        /* \"#utility.yul\":6553:6692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6744:7664   */\n    tag_378:\n        /* \"#utility.yul\":6905:6908   */\n      0x00\n        /* \"#utility.yul\":6934:7014   */\n      tag_490\n        /* \"#utility.yul\":7008:7013   */\n      dup3\n        /* \"#utility.yul\":6934:7014   */\n      tag_372\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7030:7132   */\n      tag_491\n        /* \"#utility.yul\":7125:7131   */\n      dup2\n        /* \"#utility.yul\":7120:7123   */\n      dup6\n        /* \"#utility.yul\":7030:7132   */\n      tag_373\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7023:7132   */\n      swap4\n      pop\n        /* \"#utility.yul\":7156:7238   */\n      tag_492\n        /* \"#utility.yul\":7232:7237   */\n      dup4\n        /* \"#utility.yul\":7156:7238   */\n      tag_374\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7261:7268   */\n      dup1\n        /* \"#utility.yul\":7292:7293   */\n      0x00\n        /* \"#utility.yul\":7277:7639   */\n    tag_493:\n        /* \"#utility.yul\":7302:7308   */\n      dup4\n        /* \"#utility.yul\":7299:7300   */\n      dup2\n        /* \"#utility.yul\":7296:7309   */\n      lt\n        /* \"#utility.yul\":7277:7639   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":7378:7384   */\n      dup2\n        /* \"#utility.yul\":7372:7385   */\n      mload\n        /* \"#utility.yul\":7405:7520   */\n      tag_496\n        /* \"#utility.yul\":7516:7519   */\n      dup9\n        /* \"#utility.yul\":7501:7514   */\n      dup3\n        /* \"#utility.yul\":7405:7520   */\n      tag_376\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7398:7520   */\n      swap8\n      pop\n        /* \"#utility.yul\":7543:7629   */\n      tag_497\n        /* \"#utility.yul\":7622:7628   */\n      dup4\n        /* \"#utility.yul\":7543:7629   */\n      tag_377\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7533:7629   */\n      swap3\n      pop\n        /* \"#utility.yul\":7337:7639   */\n      pop\n        /* \"#utility.yul\":7324:7325   */\n      0x01\n        /* \"#utility.yul\":7321:7322   */\n      dup2\n        /* \"#utility.yul\":7317:7326   */\n      add\n        /* \"#utility.yul\":7312:7326   */\n      swap1\n      pop\n        /* \"#utility.yul\":7277:7639   */\n      jump(tag_493)\n    tag_495:\n        /* \"#utility.yul\":7281:7295   */\n      pop\n        /* \"#utility.yul\":7655:7658   */\n      dup6\n        /* \"#utility.yul\":7648:7658   */\n      swap4\n      pop\n        /* \"#utility.yul\":6910:7664   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6744:7664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7710:8582   */\n    tag_379:\n        /* \"#utility.yul\":7829:7832   */\n      0x00\n        /* \"#utility.yul\":7865:7869   */\n      0x60\n        /* \"#utility.yul\":7860:7863   */\n      dup4\n        /* \"#utility.yul\":7856:7870   */\n      add\n        /* \"#utility.yul\":7957:7961   */\n      0x00\n        /* \"#utility.yul\":7950:7955   */\n      dup4\n        /* \"#utility.yul\":7946:7962   */\n      add\n        /* \"#utility.yul\":7940:7963   */\n      mload\n        /* \"#utility.yul\":7976:8039   */\n      tag_499\n        /* \"#utility.yul\":8033:8037   */\n      0x00\n        /* \"#utility.yul\":8028:8031   */\n      dup7\n        /* \"#utility.yul\":8024:8038   */\n      add\n        /* \"#utility.yul\":8010:8022   */\n      dup3\n        /* \"#utility.yul\":7976:8039   */\n      tag_371\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7880:8049   */\n      pop\n        /* \"#utility.yul\":8132:8136   */\n      0x20\n        /* \"#utility.yul\":8125:8130   */\n      dup4\n        /* \"#utility.yul\":8121:8137   */\n      add\n        /* \"#utility.yul\":8115:8138   */\n      mload\n        /* \"#utility.yul\":8151:8214   */\n      tag_500\n        /* \"#utility.yul\":8208:8212   */\n      0x20\n        /* \"#utility.yul\":8203:8206   */\n      dup7\n        /* \"#utility.yul\":8199:8213   */\n      add\n        /* \"#utility.yul\":8185:8197   */\n      dup3\n        /* \"#utility.yul\":8151:8214   */\n      tag_371\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8059:8224   */\n      pop\n        /* \"#utility.yul\":8310:8314   */\n      0x40\n        /* \"#utility.yul\":8303:8308   */\n      dup4\n        /* \"#utility.yul\":8299:8315   */\n      add\n        /* \"#utility.yul\":8293:8316   */\n      mload\n        /* \"#utility.yul\":8363:8366   */\n      dup5\n        /* \"#utility.yul\":8357:8361   */\n      dup3\n        /* \"#utility.yul\":8353:8367   */\n      sub\n        /* \"#utility.yul\":8346:8350   */\n      0x40\n        /* \"#utility.yul\":8341:8344   */\n      dup7\n        /* \"#utility.yul\":8337:8351   */\n      add\n        /* \"#utility.yul\":8330:8368   */\n      mstore\n        /* \"#utility.yul\":8389:8544   */\n      tag_501\n        /* \"#utility.yul\":8539:8543   */\n      dup3\n        /* \"#utility.yul\":8525:8537   */\n      dup3\n        /* \"#utility.yul\":8389:8544   */\n      tag_378\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":8381:8544   */\n      swap2\n      pop\n        /* \"#utility.yul\":8234:8555   */\n      pop\n        /* \"#utility.yul\":8572:8576   */\n      dup1\n        /* \"#utility.yul\":8565:8576   */\n      swap2\n      pop\n        /* \"#utility.yul\":7834:8582   */\n      pop\n        /* \"#utility.yul\":7710:8582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8588:8961   */\n    tag_54:\n        /* \"#utility.yul\":8731:8735   */\n      0x00\n        /* \"#utility.yul\":8769:8771   */\n      0x20\n        /* \"#utility.yul\":8758:8767   */\n      dup3\n        /* \"#utility.yul\":8754:8772   */\n      add\n        /* \"#utility.yul\":8746:8772   */\n      swap1\n      pop\n        /* \"#utility.yul\":8818:8827   */\n      dup2\n        /* \"#utility.yul\":8812:8816   */\n      dup2\n        /* \"#utility.yul\":8808:8828   */\n      sub\n        /* \"#utility.yul\":8804:8805   */\n      0x00\n        /* \"#utility.yul\":8793:8802   */\n      dup4\n        /* \"#utility.yul\":8789:8806   */\n      add\n        /* \"#utility.yul\":8782:8829   */\n      mstore\n        /* \"#utility.yul\":8846:8954   */\n      tag_503\n        /* \"#utility.yul\":8949:8953   */\n      dup2\n        /* \"#utility.yul\":8940:8946   */\n      dup5\n        /* \"#utility.yul\":8846:8954   */\n      tag_379\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8838:8954   */\n      swap1\n      pop\n        /* \"#utility.yul\":8588:8961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8967:9084   */\n    tag_380:\n        /* \"#utility.yul\":9076:9077   */\n      0x00\n        /* \"#utility.yul\":9073:9074   */\n      dup1\n        /* \"#utility.yul\":9066:9078   */\n      revert\n        /* \"#utility.yul\":9090:9207   */\n    tag_381:\n        /* \"#utility.yul\":9199:9200   */\n      0x00\n        /* \"#utility.yul\":9196:9197   */\n      dup1\n        /* \"#utility.yul\":9189:9201   */\n      revert\n        /* \"#utility.yul\":9213:9330   */\n    tag_382:\n        /* \"#utility.yul\":9322:9323   */\n      0x00\n        /* \"#utility.yul\":9319:9320   */\n      dup1\n        /* \"#utility.yul\":9312:9324   */\n      revert\n        /* \"#utility.yul\":9361:9957   */\n    tag_383:\n        /* \"#utility.yul\":9462:9470   */\n      0x00\n        /* \"#utility.yul\":9472:9478   */\n      dup1\n        /* \"#utility.yul\":9522:9525   */\n      dup4\n        /* \"#utility.yul\":9515:9519   */\n      0x1f\n        /* \"#utility.yul\":9507:9513   */\n      dup5\n        /* \"#utility.yul\":9503:9520   */\n      add\n        /* \"#utility.yul\":9499:9526   */\n      slt\n        /* \"#utility.yul\":9489:9611   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":9530:9609   */\n      tag_509\n      tag_380\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9489:9611   */\n    tag_508:\n        /* \"#utility.yul\":9643:9649   */\n      dup3\n        /* \"#utility.yul\":9630:9650   */\n      calldataload\n        /* \"#utility.yul\":9620:9650   */\n      swap1\n      pop\n        /* \"#utility.yul\":9673:9691   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9665:9671   */\n      dup2\n        /* \"#utility.yul\":9662:9692   */\n      gt\n        /* \"#utility.yul\":9659:9776   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":9695:9774   */\n      tag_511\n      tag_381\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":9659:9776   */\n    tag_510:\n        /* \"#utility.yul\":9809:9813   */\n      0x20\n        /* \"#utility.yul\":9801:9807   */\n      dup4\n        /* \"#utility.yul\":9797:9814   */\n      add\n        /* \"#utility.yul\":9785:9814   */\n      swap2\n      pop\n        /* \"#utility.yul\":9863:9866   */\n      dup4\n        /* \"#utility.yul\":9855:9859   */\n      0x40\n        /* \"#utility.yul\":9847:9853   */\n      dup3\n        /* \"#utility.yul\":9843:9860   */\n      mul\n        /* \"#utility.yul\":9833:9841   */\n      dup4\n        /* \"#utility.yul\":9829:9861   */\n      add\n        /* \"#utility.yul\":9826:9867   */\n      gt\n        /* \"#utility.yul\":9823:9951   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":9870:9949   */\n      tag_513\n      tag_382\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9823:9951   */\n    tag_512:\n        /* \"#utility.yul\":9361:9957   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9963:10868   */\n    tag_60:\n        /* \"#utility.yul\":10095:10101   */\n      0x00\n        /* \"#utility.yul\":10103:10109   */\n      dup1\n        /* \"#utility.yul\":10111:10117   */\n      0x00\n        /* \"#utility.yul\":10119:10125   */\n      dup1\n        /* \"#utility.yul\":10168:10170   */\n      0x60\n        /* \"#utility.yul\":10156:10165   */\n      dup6\n        /* \"#utility.yul\":10147:10154   */\n      dup8\n        /* \"#utility.yul\":10143:10166   */\n      sub\n        /* \"#utility.yul\":10139:10171   */\n      slt\n        /* \"#utility.yul\":10136:10255   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":10174:10253   */\n      tag_516\n      tag_357\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10136:10255   */\n    tag_515:\n        /* \"#utility.yul\":10294:10295   */\n      0x00\n        /* \"#utility.yul\":10319:10372   */\n      tag_517\n        /* \"#utility.yul\":10364:10371   */\n      dup8\n        /* \"#utility.yul\":10355:10361   */\n      dup3\n        /* \"#utility.yul\":10344:10353   */\n      dup9\n        /* \"#utility.yul\":10340:10362   */\n      add\n        /* \"#utility.yul\":10319:10372   */\n      tag_365\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":10309:10372   */\n      swap5\n      pop\n        /* \"#utility.yul\":10265:10382   */\n      pop\n        /* \"#utility.yul\":10421:10423   */\n      0x20\n        /* \"#utility.yul\":10447:10500   */\n      tag_518\n        /* \"#utility.yul\":10492:10499   */\n      dup8\n        /* \"#utility.yul\":10483:10489   */\n      dup3\n        /* \"#utility.yul\":10472:10481   */\n      dup9\n        /* \"#utility.yul\":10468:10490   */\n      add\n        /* \"#utility.yul\":10447:10500   */\n      tag_365\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10437:10500   */\n      swap4\n      pop\n        /* \"#utility.yul\":10392:10510   */\n      pop\n        /* \"#utility.yul\":10577:10579   */\n      0x40\n        /* \"#utility.yul\":10566:10575   */\n      dup6\n        /* \"#utility.yul\":10562:10580   */\n      add\n        /* \"#utility.yul\":10549:10581   */\n      calldataload\n        /* \"#utility.yul\":10608:10626   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10600:10606   */\n      dup2\n        /* \"#utility.yul\":10597:10627   */\n      gt\n        /* \"#utility.yul\":10594:10711   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":10630:10709   */\n      tag_520\n      tag_358\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10594:10711   */\n    tag_519:\n        /* \"#utility.yul\":10743:10851   */\n      tag_521\n        /* \"#utility.yul\":10843:10850   */\n      dup8\n        /* \"#utility.yul\":10834:10840   */\n      dup3\n        /* \"#utility.yul\":10823:10832   */\n      dup9\n        /* \"#utility.yul\":10819:10841   */\n      add\n        /* \"#utility.yul\":10743:10851   */\n      tag_383\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10725:10851   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":10520:10861   */\n      pop\n        /* \"#utility.yul\":9963:10868   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10888:11441   */\n    tag_384:\n        /* \"#utility.yul\":10946:10954   */\n      0x00\n        /* \"#utility.yul\":10956:10962   */\n      dup1\n        /* \"#utility.yul\":11006:11009   */\n      dup4\n        /* \"#utility.yul\":10999:11003   */\n      0x1f\n        /* \"#utility.yul\":10991:10997   */\n      dup5\n        /* \"#utility.yul\":10987:11004   */\n      add\n        /* \"#utility.yul\":10983:11010   */\n      slt\n        /* \"#utility.yul\":10973:11095   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":11014:11093   */\n      tag_524\n      tag_380\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10973:11095   */\n    tag_523:\n        /* \"#utility.yul\":11127:11133   */\n      dup3\n        /* \"#utility.yul\":11114:11134   */\n      calldataload\n        /* \"#utility.yul\":11104:11134   */\n      swap1\n      pop\n        /* \"#utility.yul\":11157:11175   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11149:11155   */\n      dup2\n        /* \"#utility.yul\":11146:11176   */\n      gt\n        /* \"#utility.yul\":11143:11260   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":11179:11258   */\n      tag_526\n      tag_381\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11143:11260   */\n    tag_525:\n        /* \"#utility.yul\":11293:11297   */\n      0x20\n        /* \"#utility.yul\":11285:11291   */\n      dup4\n        /* \"#utility.yul\":11281:11298   */\n      add\n        /* \"#utility.yul\":11269:11298   */\n      swap2\n      pop\n        /* \"#utility.yul\":11347:11350   */\n      dup4\n        /* \"#utility.yul\":11339:11343   */\n      0x01\n        /* \"#utility.yul\":11331:11337   */\n      dup3\n        /* \"#utility.yul\":11327:11344   */\n      mul\n        /* \"#utility.yul\":11317:11325   */\n      dup4\n        /* \"#utility.yul\":11313:11345   */\n      add\n        /* \"#utility.yul\":11310:11351   */\n      gt\n        /* \"#utility.yul\":11307:11435   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":11354:11433   */\n      tag_528\n      tag_382\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11307:11435   */\n    tag_527:\n        /* \"#utility.yul\":10888:11441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11447:12612   */\n    tag_70:\n        /* \"#utility.yul\":11557:11563   */\n      0x00\n        /* \"#utility.yul\":11565:11571   */\n      dup1\n        /* \"#utility.yul\":11573:11579   */\n      0x00\n        /* \"#utility.yul\":11581:11587   */\n      dup1\n        /* \"#utility.yul\":11589:11595   */\n      0x00\n        /* \"#utility.yul\":11597:11603   */\n      dup1\n        /* \"#utility.yul\":11646:11649   */\n      0x80\n        /* \"#utility.yul\":11634:11643   */\n      dup8\n        /* \"#utility.yul\":11625:11632   */\n      dup10\n        /* \"#utility.yul\":11621:11644   */\n      sub\n        /* \"#utility.yul\":11617:11650   */\n      slt\n        /* \"#utility.yul\":11614:11734   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":11653:11732   */\n      tag_531\n      tag_357\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11614:11734   */\n    tag_530:\n        /* \"#utility.yul\":11801:11802   */\n      0x00\n        /* \"#utility.yul\":11790:11799   */\n      dup8\n        /* \"#utility.yul\":11786:11803   */\n      add\n        /* \"#utility.yul\":11773:11804   */\n      calldataload\n        /* \"#utility.yul\":11831:11849   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11823:11829   */\n      dup2\n        /* \"#utility.yul\":11820:11850   */\n      gt\n        /* \"#utility.yul\":11817:11934   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":11853:11932   */\n      tag_533\n      tag_358\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11817:11934   */\n    tag_532:\n        /* \"#utility.yul\":11966:12031   */\n      tag_534\n        /* \"#utility.yul\":12023:12030   */\n      dup10\n        /* \"#utility.yul\":12014:12020   */\n      dup3\n        /* \"#utility.yul\":12003:12012   */\n      dup11\n        /* \"#utility.yul\":11999:12021   */\n      add\n        /* \"#utility.yul\":11966:12031   */\n      tag_384\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11948:12031   */\n      swap7\n      pop\n      swap7\n      pop\n        /* \"#utility.yul\":11744:12041   */\n      pop\n        /* \"#utility.yul\":12108:12110   */\n      0x20\n        /* \"#utility.yul\":12097:12106   */\n      dup8\n        /* \"#utility.yul\":12093:12111   */\n      add\n        /* \"#utility.yul\":12080:12112   */\n      calldataload\n        /* \"#utility.yul\":12139:12157   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12131:12137   */\n      dup2\n        /* \"#utility.yul\":12128:12158   */\n      gt\n        /* \"#utility.yul\":12125:12242   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":12161:12240   */\n      tag_536\n      tag_358\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12125:12242   */\n    tag_535:\n        /* \"#utility.yul\":12274:12339   */\n      tag_537\n        /* \"#utility.yul\":12331:12338   */\n      dup10\n        /* \"#utility.yul\":12322:12328   */\n      dup3\n        /* \"#utility.yul\":12311:12320   */\n      dup11\n        /* \"#utility.yul\":12307:12329   */\n      add\n        /* \"#utility.yul\":12274:12339   */\n      tag_384\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12256:12339   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":12051:12349   */\n      pop\n        /* \"#utility.yul\":12388:12390   */\n      0x40\n        /* \"#utility.yul\":12414:12467   */\n      tag_538\n        /* \"#utility.yul\":12459:12466   */\n      dup10\n        /* \"#utility.yul\":12450:12456   */\n      dup3\n        /* \"#utility.yul\":12439:12448   */\n      dup11\n        /* \"#utility.yul\":12435:12457   */\n      add\n        /* \"#utility.yul\":12414:12467   */\n      tag_362\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12404:12467   */\n      swap3\n      pop\n        /* \"#utility.yul\":12359:12477   */\n      pop\n        /* \"#utility.yul\":12516:12518   */\n      0x60\n        /* \"#utility.yul\":12542:12595   */\n      tag_539\n        /* \"#utility.yul\":12587:12594   */\n      dup10\n        /* \"#utility.yul\":12578:12584   */\n      dup3\n        /* \"#utility.yul\":12567:12576   */\n      dup11\n        /* \"#utility.yul\":12563:12585   */\n      add\n        /* \"#utility.yul\":12542:12595   */\n      tag_362\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":12532:12595   */\n      swap2\n      pop\n        /* \"#utility.yul\":12487:12605   */\n      pop\n        /* \"#utility.yul\":11447:12612   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":12618:13092   */\n    tag_84:\n        /* \"#utility.yul\":12686:12692   */\n      0x00\n        /* \"#utility.yul\":12694:12700   */\n      dup1\n        /* \"#utility.yul\":12743:12745   */\n      0x40\n        /* \"#utility.yul\":12731:12740   */\n      dup4\n        /* \"#utility.yul\":12722:12729   */\n      dup6\n        /* \"#utility.yul\":12718:12741   */\n      sub\n        /* \"#utility.yul\":12714:12746   */\n      slt\n        /* \"#utility.yul\":12711:12830   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":12749:12828   */\n      tag_542\n      tag_357\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12711:12830   */\n    tag_541:\n        /* \"#utility.yul\":12869:12870   */\n      0x00\n        /* \"#utility.yul\":12894:12947   */\n      tag_543\n        /* \"#utility.yul\":12939:12946   */\n      dup6\n        /* \"#utility.yul\":12930:12936   */\n      dup3\n        /* \"#utility.yul\":12919:12928   */\n      dup7\n        /* \"#utility.yul\":12915:12937   */\n      add\n        /* \"#utility.yul\":12894:12947   */\n      tag_362\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":12884:12947   */\n      swap3\n      pop\n        /* \"#utility.yul\":12840:12957   */\n      pop\n        /* \"#utility.yul\":12996:12998   */\n      0x20\n        /* \"#utility.yul\":13022:13075   */\n      tag_544\n        /* \"#utility.yul\":13067:13074   */\n      dup6\n        /* \"#utility.yul\":13058:13064   */\n      dup3\n        /* \"#utility.yul\":13047:13056   */\n      dup7\n        /* \"#utility.yul\":13043:13065   */\n      add\n        /* \"#utility.yul\":13022:13075   */\n      tag_362\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13012:13075   */\n      swap2\n      pop\n        /* \"#utility.yul\":12967:13085   */\n      pop\n        /* \"#utility.yul\":12618:13092   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13098:13278   */\n    tag_385:\n        /* \"#utility.yul\":13146:13223   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13143:13144   */\n      0x00\n        /* \"#utility.yul\":13136:13224   */\n      mstore\n        /* \"#utility.yul\":13243:13247   */\n      0x22\n        /* \"#utility.yul\":13240:13241   */\n      0x04\n        /* \"#utility.yul\":13233:13248   */\n      mstore\n        /* \"#utility.yul\":13267:13271   */\n      0x24\n        /* \"#utility.yul\":13264:13265   */\n      0x00\n        /* \"#utility.yul\":13257:13272   */\n      revert\n        /* \"#utility.yul\":13284:13604   */\n    tag_94:\n        /* \"#utility.yul\":13328:13334   */\n      0x00\n        /* \"#utility.yul\":13365:13366   */\n      0x02\n        /* \"#utility.yul\":13359:13363   */\n      dup3\n        /* \"#utility.yul\":13355:13367   */\n      div\n        /* \"#utility.yul\":13345:13367   */\n      swap1\n      pop\n        /* \"#utility.yul\":13412:13413   */\n      0x01\n        /* \"#utility.yul\":13406:13410   */\n      dup3\n        /* \"#utility.yul\":13402:13414   */\n      and\n        /* \"#utility.yul\":13433:13451   */\n      dup1\n        /* \"#utility.yul\":13423:13504   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":13489:13493   */\n      0x7f\n        /* \"#utility.yul\":13481:13487   */\n      dup3\n        /* \"#utility.yul\":13477:13494   */\n      and\n        /* \"#utility.yul\":13467:13494   */\n      swap2\n      pop\n        /* \"#utility.yul\":13423:13504   */\n    tag_547:\n        /* \"#utility.yul\":13551:13553   */\n      0x20\n        /* \"#utility.yul\":13543:13549   */\n      dup3\n        /* \"#utility.yul\":13540:13554   */\n      lt\n        /* \"#utility.yul\":13520:13538   */\n      dup2\n        /* \"#utility.yul\":13517:13555   */\n      sub\n        /* \"#utility.yul\":13514:13598   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":13570:13588   */\n      tag_549\n      tag_385\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13514:13598   */\n    tag_548:\n        /* \"#utility.yul\":13335:13604   */\n      pop\n        /* \"#utility.yul\":13284:13604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13610:13790   */\n    tag_386:\n        /* \"#utility.yul\":13658:13735   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13655:13656   */\n      0x00\n        /* \"#utility.yul\":13648:13736   */\n      mstore\n        /* \"#utility.yul\":13755:13759   */\n      0x11\n        /* \"#utility.yul\":13752:13753   */\n      0x04\n        /* \"#utility.yul\":13745:13760   */\n      mstore\n        /* \"#utility.yul\":13779:13783   */\n      0x24\n        /* \"#utility.yul\":13776:13777   */\n      0x00\n        /* \"#utility.yul\":13769:13784   */\n      revert\n        /* \"#utility.yul\":13796:13990   */\n    tag_116:\n        /* \"#utility.yul\":13836:13840   */\n      0x00\n        /* \"#utility.yul\":13856:13876   */\n      tag_552\n        /* \"#utility.yul\":13874:13875   */\n      dup3\n        /* \"#utility.yul\":13856:13876   */\n      tag_363\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13851:13876   */\n      swap2\n      pop\n        /* \"#utility.yul\":13890:13910   */\n      tag_553\n        /* \"#utility.yul\":13908:13909   */\n      dup4\n        /* \"#utility.yul\":13890:13910   */\n      tag_363\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":13885:13910   */\n      swap3\n      pop\n        /* \"#utility.yul\":13934:13935   */\n      dup3\n        /* \"#utility.yul\":13931:13932   */\n      dup3\n        /* \"#utility.yul\":13927:13936   */\n      sub\n        /* \"#utility.yul\":13919:13936   */\n      swap1\n      pop\n        /* \"#utility.yul\":13958:13959   */\n      dup2\n        /* \"#utility.yul\":13952:13956   */\n      dup2\n        /* \"#utility.yul\":13949:13960   */\n      gt\n        /* \"#utility.yul\":13946:13983   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":13963:13981   */\n      tag_555\n      tag_386\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13946:13983   */\n    tag_554:\n        /* \"#utility.yul\":13796:13990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13996:14187   */\n    tag_133:\n        /* \"#utility.yul\":14036:14039   */\n      0x00\n        /* \"#utility.yul\":14055:14075   */\n      tag_557\n        /* \"#utility.yul\":14073:14074   */\n      dup3\n        /* \"#utility.yul\":14055:14075   */\n      tag_363\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":14050:14075   */\n      swap2\n      pop\n        /* \"#utility.yul\":14089:14109   */\n      tag_558\n        /* \"#utility.yul\":14107:14108   */\n      dup4\n        /* \"#utility.yul\":14089:14109   */\n      tag_363\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14084:14109   */\n      swap3\n      pop\n        /* \"#utility.yul\":14132:14133   */\n      dup3\n        /* \"#utility.yul\":14129:14130   */\n      dup3\n        /* \"#utility.yul\":14125:14134   */\n      add\n        /* \"#utility.yul\":14118:14134   */\n      swap1\n      pop\n        /* \"#utility.yul\":14153:14156   */\n      dup1\n        /* \"#utility.yul\":14150:14151   */\n      dup3\n        /* \"#utility.yul\":14147:14157   */\n      gt\n        /* \"#utility.yul\":14144:14180   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":14160:14178   */\n      tag_560\n      tag_386\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14144:14180   */\n    tag_559:\n        /* \"#utility.yul\":13996:14187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14193:14373   */\n    tag_145:\n        /* \"#utility.yul\":14241:14318   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14238:14239   */\n      0x00\n        /* \"#utility.yul\":14231:14319   */\n      mstore\n        /* \"#utility.yul\":14338:14342   */\n      0x32\n        /* \"#utility.yul\":14335:14336   */\n      0x04\n        /* \"#utility.yul\":14328:14343   */\n      mstore\n        /* \"#utility.yul\":14362:14366   */\n      0x24\n        /* \"#utility.yul\":14359:14360   */\n      0x00\n        /* \"#utility.yul\":14352:14367   */\n      revert\n        /* \"#utility.yul\":14565:14751   */\n    tag_388:\n        /* \"#utility.yul\":14610:14621   */\n      0x00\n        /* \"#utility.yul\":14659:14662   */\n      dup2\n        /* \"#utility.yul\":14646:14663   */\n      calldataload\n        /* \"#utility.yul\":14672:14705   */\n      tag_564\n        /* \"#utility.yul\":14699:14704   */\n      dup2\n        /* \"#utility.yul\":14672:14705   */\n      tag_364\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14739:14744   */\n      dup1\n        /* \"#utility.yul\":14715:14744   */\n      swap2\n      pop\n        /* \"#utility.yul\":14622:14751   */\n      pop\n        /* \"#utility.yul\":14565:14751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14757:14849   */\n    tag_389:\n        /* \"#utility.yul\":14789:14797   */\n      0x00\n        /* \"#utility.yul\":14836:14841   */\n      dup2\n        /* \"#utility.yul\":14833:14834   */\n      0x00\n        /* \"#utility.yul\":14829:14842   */\n      shl\n        /* \"#utility.yul\":14808:14842   */\n      swap1\n      pop\n        /* \"#utility.yul\":14757:14849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14855:15145   */\n    tag_390:\n        /* \"#utility.yul\":14913:14919   */\n      0x00\n        /* \"#utility.yul\":14942:15008   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15029:15051   */\n      tag_567\n        /* \"#utility.yul\":15042:15050   */\n      dup5\n        /* \"#utility.yul\":15029:15051   */\n      tag_389\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15017:15051   */\n      swap4\n      pop\n        /* \"#utility.yul\":15084:15088   */\n      dup1\n        /* \"#utility.yul\":15080:15089   */\n      not\n        /* \"#utility.yul\":15073:15078   */\n      dup4\n        /* \"#utility.yul\":15069:15090   */\n      and\n        /* \"#utility.yul\":15060:15090   */\n      swap3\n      pop\n        /* \"#utility.yul\":15133:15137   */\n      dup1\n        /* \"#utility.yul\":15123:15131   */\n      dup5\n        /* \"#utility.yul\":15119:15138   */\n      and\n        /* \"#utility.yul\":15112:15117   */\n      dup4\n        /* \"#utility.yul\":15109:15139   */\n      or\n        /* \"#utility.yul\":15099:15139   */\n      swap2\n      pop\n        /* \"#utility.yul\":14920:15145   */\n      pop\n        /* \"#utility.yul\":14855:15145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15151:15211   */\n    tag_391:\n        /* \"#utility.yul\":15179:15182   */\n      0x00\n        /* \"#utility.yul\":15200:15205   */\n      dup2\n        /* \"#utility.yul\":15193:15205   */\n      swap1\n      pop\n        /* \"#utility.yul\":15151:15211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15217:15359   */\n    tag_392:\n        /* \"#utility.yul\":15267:15276   */\n      0x00\n        /* \"#utility.yul\":15300:15353   */\n      tag_570\n        /* \"#utility.yul\":15318:15352   */\n      tag_571\n        /* \"#utility.yul\":15327:15351   */\n      tag_572\n        /* \"#utility.yul\":15345:15350   */\n      dup5\n        /* \"#utility.yul\":15327:15351   */\n      tag_363\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":15318:15352   */\n      tag_391\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15300:15353   */\n      tag_363\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15287:15353   */\n      swap1\n      pop\n        /* \"#utility.yul\":15217:15359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15365:15440   */\n    tag_393:\n        /* \"#utility.yul\":15408:15411   */\n      0x00\n        /* \"#utility.yul\":15429:15434   */\n      dup2\n        /* \"#utility.yul\":15422:15434   */\n      swap1\n      pop\n        /* \"#utility.yul\":15365:15440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15446:15708   */\n    tag_394:\n        /* \"#utility.yul\":15556:15595   */\n      tag_575\n        /* \"#utility.yul\":15587:15594   */\n      dup3\n        /* \"#utility.yul\":15556:15595   */\n      tag_392\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":15617:15701   */\n      tag_576\n        /* \"#utility.yul\":15659:15700   */\n      tag_577\n        /* \"#utility.yul\":15683:15699   */\n      dup3\n        /* \"#utility.yul\":15659:15700   */\n      tag_393\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":15652:15656   */\n      dup4\n        /* \"#utility.yul\":15646:15657   */\n      sload\n        /* \"#utility.yul\":15617:15701   */\n      tag_390\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":15611:15615   */\n      dup3\n        /* \"#utility.yul\":15604:15702   */\n      sstore\n        /* \"#utility.yul\":15522:15708   */\n      pop\n        /* \"#utility.yul\":15446:15708   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15714:16521   */\n    tag_395:\n        /* \"#utility.yul\":15892:15893   */\n      0x00\n        /* \"#utility.yul\":15886:15890   */\n      dup2\n        /* \"#utility.yul\":15882:15894   */\n      add\n        /* \"#utility.yul\":15938:15939   */\n      0x00\n        /* \"#utility.yul\":15931:15936   */\n      dup4\n        /* \"#utility.yul\":15927:15940   */\n      add\n        /* \"#utility.yul\":15988:16000   */\n      dup1\n        /* \"#utility.yul\":16031:16073   */\n      tag_579\n        /* \"#utility.yul\":16059:16072   */\n      dup2\n        /* \"#utility.yul\":16031:16073   */\n      tag_388\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16014:16073   */\n      swap1\n      pop\n        /* \"#utility.yul\":16087:16165   */\n      tag_580\n        /* \"#utility.yul\":16151:16164   */\n      dup2\n        /* \"#utility.yul\":16139:16149   */\n      dup5\n        /* \"#utility.yul\":16087:16165   */\n      tag_394\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":15849:16176   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16229:16230   */\n      0x01\n        /* \"#utility.yul\":16223:16227   */\n      dup2\n        /* \"#utility.yul\":16219:16231   */\n      add\n        /* \"#utility.yul\":16275:16277   */\n      0x20\n        /* \"#utility.yul\":16268:16273   */\n      dup4\n        /* \"#utility.yul\":16264:16278   */\n      add\n        /* \"#utility.yul\":16326:16338   */\n      dup1\n        /* \"#utility.yul\":16369:16411   */\n      tag_581\n        /* \"#utility.yul\":16397:16410   */\n      dup2\n        /* \"#utility.yul\":16369:16411   */\n      tag_388\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":16352:16411   */\n      swap1\n      pop\n        /* \"#utility.yul\":16425:16503   */\n      tag_582\n        /* \"#utility.yul\":16489:16502   */\n      dup2\n        /* \"#utility.yul\":16477:16487   */\n      dup5\n        /* \"#utility.yul\":16425:16503   */\n      tag_394\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":16186:16514   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15714:16521   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16527:16787   */\n    tag_148:\n        /* \"#utility.yul\":16665:16781   */\n      tag_584\n        /* \"#utility.yul\":16773:16780   */\n      dup3\n        /* \"#utility.yul\":16767:16771   */\n      dup3\n        /* \"#utility.yul\":16665:16781   */\n      tag_395\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":16527:16787   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16793:16878   */\n    tag_396:\n        /* \"#utility.yul\":16838:16845   */\n      0x00\n        /* \"#utility.yul\":16867:16872   */\n      dup2\n        /* \"#utility.yul\":16856:16872   */\n      swap1\n      pop\n        /* \"#utility.yul\":16793:16878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16884:16985   */\n    tag_397:\n        /* \"#utility.yul\":16920:16927   */\n      0x00\n        /* \"#utility.yul\":16960:16978   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16953:16958   */\n      dup3\n        /* \"#utility.yul\":16949:16979   */\n      and\n        /* \"#utility.yul\":16938:16979   */\n      swap1\n      pop\n        /* \"#utility.yul\":16884:16985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16991:17147   */\n    tag_398:\n        /* \"#utility.yul\":17048:17057   */\n      0x00\n        /* \"#utility.yul\":17081:17141   */\n      tag_588\n        /* \"#utility.yul\":17098:17140   */\n      tag_589\n        /* \"#utility.yul\":17107:17139   */\n      tag_590\n        /* \"#utility.yul\":17133:17138   */\n      dup5\n        /* \"#utility.yul\":17107:17139   */\n      tag_396\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":17098:17140   */\n      tag_391\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":17081:17141   */\n      tag_397\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":17068:17141   */\n      swap1\n      pop\n        /* \"#utility.yul\":16991:17147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17153:17298   */\n    tag_399:\n        /* \"#utility.yul\":17247:17291   */\n      tag_592\n        /* \"#utility.yul\":17285:17290   */\n      dup2\n        /* \"#utility.yul\":17247:17291   */\n      tag_398\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":17242:17245   */\n      dup3\n        /* \"#utility.yul\":17235:17292   */\n      mstore\n        /* \"#utility.yul\":17153:17298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17304:17540   */\n    tag_172:\n        /* \"#utility.yul\":17404:17408   */\n      0x00\n        /* \"#utility.yul\":17442:17444   */\n      0x20\n        /* \"#utility.yul\":17431:17440   */\n      dup3\n        /* \"#utility.yul\":17427:17445   */\n      add\n        /* \"#utility.yul\":17419:17445   */\n      swap1\n      pop\n        /* \"#utility.yul\":17455:17533   */\n      tag_594\n        /* \"#utility.yul\":17530:17531   */\n      0x00\n        /* \"#utility.yul\":17519:17528   */\n      dup4\n        /* \"#utility.yul\":17515:17532   */\n      add\n        /* \"#utility.yul\":17506:17512   */\n      dup5\n        /* \"#utility.yul\":17455:17533   */\n      tag_399\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":17304:17540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17546:17664   */\n    tag_400:\n        /* \"#utility.yul\":17633:17657   */\n      tag_596\n        /* \"#utility.yul\":17651:17656   */\n      dup2\n        /* \"#utility.yul\":17633:17657   */\n      tag_360\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":17628:17631   */\n      dup3\n        /* \"#utility.yul\":17621:17658   */\n      mstore\n        /* \"#utility.yul\":17546:17664   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17670:18112   */\n    tag_201:\n        /* \"#utility.yul\":17819:17823   */\n      0x00\n        /* \"#utility.yul\":17857:17859   */\n      0x60\n        /* \"#utility.yul\":17846:17855   */\n      dup3\n        /* \"#utility.yul\":17842:17860   */\n      add\n        /* \"#utility.yul\":17834:17860   */\n      swap1\n      pop\n        /* \"#utility.yul\":17870:17941   */\n      tag_598\n        /* \"#utility.yul\":17938:17939   */\n      0x00\n        /* \"#utility.yul\":17927:17936   */\n      dup4\n        /* \"#utility.yul\":17923:17940   */\n      add\n        /* \"#utility.yul\":17914:17920   */\n      dup7\n        /* \"#utility.yul\":17870:17941   */\n      tag_400\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":17951:18023   */\n      tag_599\n        /* \"#utility.yul\":18019:18021   */\n      0x20\n        /* \"#utility.yul\":18008:18017   */\n      dup4\n        /* \"#utility.yul\":18004:18022   */\n      add\n        /* \"#utility.yul\":17995:18001   */\n      dup6\n        /* \"#utility.yul\":17951:18023   */\n      tag_368\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":18033:18105   */\n      tag_600\n        /* \"#utility.yul\":18101:18103   */\n      0x40\n        /* \"#utility.yul\":18090:18099   */\n      dup4\n        /* \"#utility.yul\":18086:18104   */\n      add\n        /* \"#utility.yul\":18077:18083   */\n      dup5\n        /* \"#utility.yul\":18033:18105   */\n      tag_368\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":17670:18112   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18118:18340   */\n    tag_206:\n        /* \"#utility.yul\":18211:18215   */\n      0x00\n        /* \"#utility.yul\":18249:18251   */\n      0x20\n        /* \"#utility.yul\":18238:18247   */\n      dup3\n        /* \"#utility.yul\":18234:18252   */\n      add\n        /* \"#utility.yul\":18226:18252   */\n      swap1\n      pop\n        /* \"#utility.yul\":18262:18333   */\n      tag_602\n        /* \"#utility.yul\":18330:18331   */\n      0x00\n        /* \"#utility.yul\":18319:18328   */\n      dup4\n        /* \"#utility.yul\":18315:18332   */\n      add\n        /* \"#utility.yul\":18306:18312   */\n      dup5\n        /* \"#utility.yul\":18262:18333   */\n      tag_400\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":18118:18340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18346:18788   */\n    tag_217:\n        /* \"#utility.yul\":18495:18499   */\n      0x00\n        /* \"#utility.yul\":18533:18535   */\n      0x60\n        /* \"#utility.yul\":18522:18531   */\n      dup3\n        /* \"#utility.yul\":18518:18536   */\n      add\n        /* \"#utility.yul\":18510:18536   */\n      swap1\n      pop\n        /* \"#utility.yul\":18546:18617   */\n      tag_604\n        /* \"#utility.yul\":18614:18615   */\n      0x00\n        /* \"#utility.yul\":18603:18612   */\n      dup4\n        /* \"#utility.yul\":18599:18616   */\n      add\n        /* \"#utility.yul\":18590:18596   */\n      dup7\n        /* \"#utility.yul\":18546:18617   */\n      tag_400\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":18627:18699   */\n      tag_605\n        /* \"#utility.yul\":18695:18697   */\n      0x20\n        /* \"#utility.yul\":18684:18693   */\n      dup4\n        /* \"#utility.yul\":18680:18698   */\n      add\n        /* \"#utility.yul\":18671:18677   */\n      dup6\n        /* \"#utility.yul\":18627:18699   */\n      tag_400\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":18709:18781   */\n      tag_606\n        /* \"#utility.yul\":18777:18779   */\n      0x40\n        /* \"#utility.yul\":18766:18775   */\n      dup4\n        /* \"#utility.yul\":18762:18780   */\n      add\n        /* \"#utility.yul\":18753:18759   */\n      dup5\n        /* \"#utility.yul\":18709:18781   */\n      tag_368\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18346:18788   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18794:19126   */\n    tag_253:\n        /* \"#utility.yul\":18915:18919   */\n      0x00\n        /* \"#utility.yul\":18953:18955   */\n      0x40\n        /* \"#utility.yul\":18942:18951   */\n      dup3\n        /* \"#utility.yul\":18938:18956   */\n      add\n        /* \"#utility.yul\":18930:18956   */\n      swap1\n      pop\n        /* \"#utility.yul\":18966:19037   */\n      tag_608\n        /* \"#utility.yul\":19034:19035   */\n      0x00\n        /* \"#utility.yul\":19023:19032   */\n      dup4\n        /* \"#utility.yul\":19019:19036   */\n      add\n        /* \"#utility.yul\":19010:19016   */\n      dup6\n        /* \"#utility.yul\":18966:19037   */\n      tag_400\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":19047:19119   */\n      tag_609\n        /* \"#utility.yul\":19115:19117   */\n      0x20\n        /* \"#utility.yul\":19104:19113   */\n      dup4\n        /* \"#utility.yul\":19100:19118   */\n      add\n        /* \"#utility.yul\":19091:19097   */\n      dup5\n        /* \"#utility.yul\":19047:19119   */\n      tag_368\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":18794:19126   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19132:19542   */\n    tag_295:\n        /* \"#utility.yul\":19172:19179   */\n      0x00\n        /* \"#utility.yul\":19195:19215   */\n      tag_611\n        /* \"#utility.yul\":19213:19214   */\n      dup3\n        /* \"#utility.yul\":19195:19215   */\n      tag_363\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":19190:19215   */\n      swap2\n      pop\n        /* \"#utility.yul\":19229:19249   */\n      tag_612\n        /* \"#utility.yul\":19247:19248   */\n      dup4\n        /* \"#utility.yul\":19229:19249   */\n      tag_363\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":19224:19249   */\n      swap3\n      pop\n        /* \"#utility.yul\":19284:19285   */\n      dup3\n        /* \"#utility.yul\":19281:19282   */\n      dup3\n        /* \"#utility.yul\":19277:19286   */\n      mul\n        /* \"#utility.yul\":19306:19336   */\n      tag_613\n        /* \"#utility.yul\":19324:19335   */\n      dup2\n        /* \"#utility.yul\":19306:19336   */\n      tag_363\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":19295:19336   */\n      swap2\n      pop\n        /* \"#utility.yul\":19485:19486   */\n      dup3\n        /* \"#utility.yul\":19476:19483   */\n      dup3\n        /* \"#utility.yul\":19472:19487   */\n      div\n        /* \"#utility.yul\":19469:19470   */\n      dup5\n        /* \"#utility.yul\":19466:19488   */\n      eq\n        /* \"#utility.yul\":19446:19447   */\n      dup4\n        /* \"#utility.yul\":19439:19448   */\n      iszero\n        /* \"#utility.yul\":19419:19502   */\n      or\n        /* \"#utility.yul\":19396:19535   */\n      tag_614\n      jumpi\n        /* \"#utility.yul\":19515:19533   */\n      tag_615\n      tag_386\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":19396:19535   */\n    tag_614:\n        /* \"#utility.yul\":19180:19542   */\n      pop\n        /* \"#utility.yul\":19132:19542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19548:19728   */\n    tag_401:\n        /* \"#utility.yul\":19596:19673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19593:19594   */\n      0x00\n        /* \"#utility.yul\":19586:19674   */\n      mstore\n        /* \"#utility.yul\":19693:19697   */\n      0x12\n        /* \"#utility.yul\":19690:19691   */\n      0x04\n        /* \"#utility.yul\":19683:19698   */\n      mstore\n        /* \"#utility.yul\":19717:19721   */\n      0x24\n        /* \"#utility.yul\":19714:19715   */\n      0x00\n        /* \"#utility.yul\":19707:19722   */\n      revert\n        /* \"#utility.yul\":19734:19919   */\n    tag_299:\n        /* \"#utility.yul\":19774:19775   */\n      0x00\n        /* \"#utility.yul\":19791:19811   */\n      tag_618\n        /* \"#utility.yul\":19809:19810   */\n      dup3\n        /* \"#utility.yul\":19791:19811   */\n      tag_363\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":19786:19811   */\n      swap2\n      pop\n        /* \"#utility.yul\":19825:19845   */\n      tag_619\n        /* \"#utility.yul\":19843:19844   */\n      dup4\n        /* \"#utility.yul\":19825:19845   */\n      tag_363\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":19820:19845   */\n      swap3\n      pop\n        /* \"#utility.yul\":19864:19865   */\n      dup3\n        /* \"#utility.yul\":19854:19889   */\n      tag_620\n      jumpi\n        /* \"#utility.yul\":19869:19887   */\n      tag_621\n      tag_401\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":19854:19889   */\n    tag_620:\n        /* \"#utility.yul\":19911:19912   */\n      dup3\n        /* \"#utility.yul\":19908:19909   */\n      dup3\n        /* \"#utility.yul\":19904:19913   */\n      div\n        /* \"#utility.yul\":19899:19913   */\n      swap1\n      pop\n        /* \"#utility.yul\":19734:19919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19925:20041   */\n    tag_402:\n        /* \"#utility.yul\":19995:20016   */\n      tag_623\n        /* \"#utility.yul\":20010:20015   */\n      dup2\n        /* \"#utility.yul\":19995:20016   */\n      tag_366\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":19988:19993   */\n      dup2\n        /* \"#utility.yul\":19985:20017   */\n      eq\n        /* \"#utility.yul\":19975:20035   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":20031:20032   */\n      0x00\n        /* \"#utility.yul\":20028:20029   */\n      dup1\n        /* \"#utility.yul\":20021:20033   */\n      revert\n        /* \"#utility.yul\":19975:20035   */\n    tag_624:\n        /* \"#utility.yul\":19925:20041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20047:20184   */\n    tag_403:\n        /* \"#utility.yul\":20101:20106   */\n      0x00\n        /* \"#utility.yul\":20132:20138   */\n      dup2\n        /* \"#utility.yul\":20126:20139   */\n      mload\n        /* \"#utility.yul\":20117:20139   */\n      swap1\n      pop\n        /* \"#utility.yul\":20148:20178   */\n      tag_626\n        /* \"#utility.yul\":20172:20177   */\n      dup2\n        /* \"#utility.yul\":20148:20178   */\n      tag_402\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":20047:20184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20190:20535   */\n    tag_310:\n        /* \"#utility.yul\":20257:20263   */\n      0x00\n        /* \"#utility.yul\":20306:20308   */\n      0x20\n        /* \"#utility.yul\":20294:20303   */\n      dup3\n        /* \"#utility.yul\":20285:20292   */\n      dup5\n        /* \"#utility.yul\":20281:20304   */\n      sub\n        /* \"#utility.yul\":20277:20309   */\n      slt\n        /* \"#utility.yul\":20274:20393   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":20312:20391   */\n      tag_629\n      tag_357\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":20274:20393   */\n    tag_628:\n        /* \"#utility.yul\":20432:20433   */\n      0x00\n        /* \"#utility.yul\":20457:20518   */\n      tag_630\n        /* \"#utility.yul\":20510:20517   */\n      dup5\n        /* \"#utility.yul\":20501:20507   */\n      dup3\n        /* \"#utility.yul\":20490:20499   */\n      dup6\n        /* \"#utility.yul\":20486:20508   */\n      add\n        /* \"#utility.yul\":20457:20518   */\n      tag_403\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":20447:20518   */\n      swap2\n      pop\n        /* \"#utility.yul\":20403:20528   */\n      pop\n        /* \"#utility.yul\":20190:20535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20541:20721   */\n    tag_404:\n        /* \"#utility.yul\":20589:20666   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20586:20587   */\n      0x00\n        /* \"#utility.yul\":20579:20667   */\n      mstore\n        /* \"#utility.yul\":20686:20690   */\n      0x41\n        /* \"#utility.yul\":20683:20684   */\n      0x04\n        /* \"#utility.yul\":20676:20691   */\n      mstore\n        /* \"#utility.yul\":20710:20714   */\n      0x24\n        /* \"#utility.yul\":20707:20708   */\n      0x00\n        /* \"#utility.yul\":20700:20715   */\n      revert\n        /* \"#utility.yul\":20727:20868   */\n    tag_405:\n        /* \"#utility.yul\":20776:20780   */\n      0x00\n        /* \"#utility.yul\":20799:20802   */\n      dup2\n        /* \"#utility.yul\":20791:20802   */\n      swap1\n      pop\n        /* \"#utility.yul\":20822:20825   */\n      dup2\n        /* \"#utility.yul\":20819:20820   */\n      0x00\n        /* \"#utility.yul\":20812:20826   */\n      mstore\n        /* \"#utility.yul\":20856:20860   */\n      0x20\n        /* \"#utility.yul\":20853:20854   */\n      0x00\n        /* \"#utility.yul\":20843:20861   */\n      keccak256\n        /* \"#utility.yul\":20835:20861   */\n      swap1\n      pop\n        /* \"#utility.yul\":20727:20868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20874:20967   */\n    tag_406:\n        /* \"#utility.yul\":20911:20917   */\n      0x00\n        /* \"#utility.yul\":20958:20960   */\n      0x20\n        /* \"#utility.yul\":20953:20955   */\n      0x1f\n        /* \"#utility.yul\":20946:20951   */\n      dup4\n        /* \"#utility.yul\":20942:20956   */\n      add\n        /* \"#utility.yul\":20938:20961   */\n      div\n        /* \"#utility.yul\":20928:20961   */\n      swap1\n      pop\n        /* \"#utility.yul\":20874:20967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20973:21080   */\n    tag_407:\n        /* \"#utility.yul\":21017:21025   */\n      0x00\n        /* \"#utility.yul\":21067:21072   */\n      dup3\n        /* \"#utility.yul\":21061:21065   */\n      dup3\n        /* \"#utility.yul\":21057:21073   */\n      shl\n        /* \"#utility.yul\":21036:21073   */\n      swap1\n      pop\n        /* \"#utility.yul\":20973:21080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21086:21479   */\n    tag_408:\n        /* \"#utility.yul\":21155:21161   */\n      0x00\n        /* \"#utility.yul\":21205:21206   */\n      0x08\n        /* \"#utility.yul\":21193:21203   */\n      dup4\n        /* \"#utility.yul\":21189:21207   */\n      mul\n        /* \"#utility.yul\":21228:21325   */\n      tag_636\n        /* \"#utility.yul\":21258:21324   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21247:21256   */\n      dup3\n        /* \"#utility.yul\":21228:21325   */\n      tag_407\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":21346:21385   */\n      tag_637\n        /* \"#utility.yul\":21376:21384   */\n      dup7\n        /* \"#utility.yul\":21365:21374   */\n      dup4\n        /* \"#utility.yul\":21346:21385   */\n      tag_407\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":21334:21385   */\n      swap6\n      pop\n        /* \"#utility.yul\":21418:21422   */\n      dup1\n        /* \"#utility.yul\":21414:21423   */\n      not\n        /* \"#utility.yul\":21407:21412   */\n      dup5\n        /* \"#utility.yul\":21403:21424   */\n      and\n        /* \"#utility.yul\":21394:21424   */\n      swap4\n      pop\n        /* \"#utility.yul\":21467:21471   */\n      dup1\n        /* \"#utility.yul\":21457:21465   */\n      dup7\n        /* \"#utility.yul\":21453:21472   */\n      and\n        /* \"#utility.yul\":21446:21451   */\n      dup5\n        /* \"#utility.yul\":21443:21473   */\n      or\n        /* \"#utility.yul\":21433:21473   */\n      swap3\n      pop\n        /* \"#utility.yul\":21162:21479   */\n      pop\n      pop\n        /* \"#utility.yul\":21086:21479   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21485:21754   */\n    tag_409:\n        /* \"#utility.yul\":21595:21634   */\n      tag_639\n        /* \"#utility.yul\":21626:21633   */\n      dup4\n        /* \"#utility.yul\":21595:21634   */\n      tag_392\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":21656:21747   */\n      tag_640\n        /* \"#utility.yul\":21705:21746   */\n      tag_641\n        /* \"#utility.yul\":21729:21745   */\n      dup3\n        /* \"#utility.yul\":21705:21746   */\n      tag_393\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":21697:21703   */\n      dup5\n        /* \"#utility.yul\":21690:21694   */\n      dup5\n        /* \"#utility.yul\":21684:21695   */\n      sload\n        /* \"#utility.yul\":21656:21747   */\n      tag_408\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":21650:21654   */\n      dup3\n        /* \"#utility.yul\":21643:21748   */\n      sstore\n        /* \"#utility.yul\":21561:21754   */\n      pop\n        /* \"#utility.yul\":21485:21754   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21760:21833   */\n    tag_410:\n        /* \"#utility.yul\":21805:21808   */\n      0x00\n        /* \"#utility.yul\":21760:21833   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21839:22028   */\n    tag_411:\n        /* \"#utility.yul\":21916:21948   */\n      tag_644\n      tag_410\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":21957:22022   */\n      tag_645\n        /* \"#utility.yul\":22015:22021   */\n      dup2\n        /* \"#utility.yul\":22007:22013   */\n      dup5\n        /* \"#utility.yul\":22001:22005   */\n      dup5\n        /* \"#utility.yul\":21957:22022   */\n      tag_409\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":21892:22028   */\n      pop\n        /* \"#utility.yul\":21839:22028   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22034:22220   */\n    tag_412:\n        /* \"#utility.yul\":22094:22214   */\n    tag_647:\n        /* \"#utility.yul\":22111:22114   */\n      dup2\n        /* \"#utility.yul\":22104:22109   */\n      dup2\n        /* \"#utility.yul\":22101:22115   */\n      lt\n        /* \"#utility.yul\":22094:22214   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":22165:22204   */\n      tag_650\n        /* \"#utility.yul\":22202:22203   */\n      0x00\n        /* \"#utility.yul\":22195:22200   */\n      dup3\n        /* \"#utility.yul\":22165:22204   */\n      tag_411\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":22138:22139   */\n      0x01\n        /* \"#utility.yul\":22131:22136   */\n      dup2\n        /* \"#utility.yul\":22127:22140   */\n      add\n        /* \"#utility.yul\":22118:22140   */\n      swap1\n      pop\n        /* \"#utility.yul\":22094:22214   */\n      jump(tag_647)\n    tag_649:\n        /* \"#utility.yul\":22034:22220   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22226:22769   */\n    tag_413:\n        /* \"#utility.yul\":22327:22329   */\n      0x1f\n        /* \"#utility.yul\":22322:22325   */\n      dup3\n        /* \"#utility.yul\":22319:22330   */\n      gt\n        /* \"#utility.yul\":22316:22762   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":22361:22399   */\n      tag_653\n        /* \"#utility.yul\":22393:22398   */\n      dup2\n        /* \"#utility.yul\":22361:22399   */\n      tag_405\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":22445:22474   */\n      tag_654\n        /* \"#utility.yul\":22463:22473   */\n      dup5\n        /* \"#utility.yul\":22445:22474   */\n      tag_406\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":22435:22443   */\n      dup2\n        /* \"#utility.yul\":22431:22475   */\n      add\n        /* \"#utility.yul\":22628:22630   */\n      0x20\n        /* \"#utility.yul\":22616:22626   */\n      dup6\n        /* \"#utility.yul\":22613:22631   */\n      lt\n        /* \"#utility.yul\":22610:22659   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":22649:22657   */\n      dup2\n        /* \"#utility.yul\":22634:22657   */\n      swap1\n      pop\n        /* \"#utility.yul\":22610:22659   */\n    tag_655:\n        /* \"#utility.yul\":22672:22752   */\n      tag_656\n        /* \"#utility.yul\":22728:22750   */\n      tag_657\n        /* \"#utility.yul\":22746:22749   */\n      dup6\n        /* \"#utility.yul\":22728:22750   */\n      tag_406\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":22718:22726   */\n      dup4\n        /* \"#utility.yul\":22714:22751   */\n      add\n        /* \"#utility.yul\":22701:22712   */\n      dup3\n        /* \"#utility.yul\":22672:22752   */\n      tag_412\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":22331:22762   */\n      pop\n      pop\n        /* \"#utility.yul\":22316:22762   */\n    tag_652:\n        /* \"#utility.yul\":22226:22769   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22775:22892   */\n    tag_414:\n        /* \"#utility.yul\":22829:22837   */\n      0x00\n        /* \"#utility.yul\":22879:22884   */\n      dup3\n        /* \"#utility.yul\":22873:22877   */\n      dup3\n        /* \"#utility.yul\":22869:22885   */\n      shr\n        /* \"#utility.yul\":22848:22885   */\n      swap1\n      pop\n        /* \"#utility.yul\":22775:22892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22898:23067   */\n    tag_415:\n        /* \"#utility.yul\":22942:22948   */\n      0x00\n        /* \"#utility.yul\":22975:23026   */\n      tag_660\n        /* \"#utility.yul\":23023:23024   */\n      0x00\n        /* \"#utility.yul\":23019:23025   */\n      not\n        /* \"#utility.yul\":23011:23016   */\n      dup5\n        /* \"#utility.yul\":23008:23009   */\n      0x08\n        /* \"#utility.yul\":23004:23017   */\n      mul\n        /* \"#utility.yul\":22975:23026   */\n      tag_414\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":22971:23027   */\n      not\n        /* \"#utility.yul\":23056:23060   */\n      dup1\n        /* \"#utility.yul\":23050:23054   */\n      dup4\n        /* \"#utility.yul\":23046:23061   */\n      and\n        /* \"#utility.yul\":23036:23061   */\n      swap2\n      pop\n        /* \"#utility.yul\":22949:23067   */\n      pop\n        /* \"#utility.yul\":22898:23067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23072:23367   */\n    tag_416:\n        /* \"#utility.yul\":23148:23152   */\n      0x00\n        /* \"#utility.yul\":23294:23323   */\n      tag_662\n        /* \"#utility.yul\":23319:23322   */\n      dup4\n        /* \"#utility.yul\":23313:23317   */\n      dup4\n        /* \"#utility.yul\":23294:23323   */\n      tag_415\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":23286:23323   */\n      swap2\n      pop\n        /* \"#utility.yul\":23356:23359   */\n      dup3\n        /* \"#utility.yul\":23353:23354   */\n      0x02\n        /* \"#utility.yul\":23349:23360   */\n      mul\n        /* \"#utility.yul\":23343:23347   */\n      dup3\n        /* \"#utility.yul\":23340:23361   */\n      or\n        /* \"#utility.yul\":23332:23361   */\n      swap1\n      pop\n        /* \"#utility.yul\":23072:23367   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23372:24767   */\n    tag_322:\n        /* \"#utility.yul\":23489:23526   */\n      tag_664\n        /* \"#utility.yul\":23522:23525   */\n      dup3\n        /* \"#utility.yul\":23489:23526   */\n      tag_351\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":23591:23609   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23583:23589   */\n      dup2\n        /* \"#utility.yul\":23580:23610   */\n      gt\n        /* \"#utility.yul\":23577:23633   */\n      iszero\n      tag_665\n      jumpi\n        /* \"#utility.yul\":23613:23631   */\n      tag_666\n      tag_404\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":23577:23633   */\n    tag_665:\n        /* \"#utility.yul\":23657:23695   */\n      tag_667\n        /* \"#utility.yul\":23689:23693   */\n      dup3\n        /* \"#utility.yul\":23683:23694   */\n      sload\n        /* \"#utility.yul\":23657:23695   */\n      tag_94\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":23742:23809   */\n      tag_668\n        /* \"#utility.yul\":23802:23808   */\n      dup3\n        /* \"#utility.yul\":23794:23800   */\n      dup3\n        /* \"#utility.yul\":23788:23792   */\n      dup6\n        /* \"#utility.yul\":23742:23809   */\n      tag_413\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":23836:23837   */\n      0x00\n        /* \"#utility.yul\":23860:23864   */\n      0x20\n        /* \"#utility.yul\":23847:23864   */\n      swap1\n      pop\n        /* \"#utility.yul\":23892:23894   */\n      0x1f\n        /* \"#utility.yul\":23884:23890   */\n      dup4\n        /* \"#utility.yul\":23881:23895   */\n      gt\n        /* \"#utility.yul\":23909:23910   */\n      0x01\n        /* \"#utility.yul\":23904:24522   */\n      dup2\n      eq\n      tag_670\n      jumpi\n        /* \"#utility.yul\":24566:24567   */\n      0x00\n        /* \"#utility.yul\":24583:24589   */\n      dup5\n        /* \"#utility.yul\":24580:24657   */\n      iszero\n      tag_671\n      jumpi\n        /* \"#utility.yul\":24632:24641   */\n      dup3\n        /* \"#utility.yul\":24627:24630   */\n      dup8\n        /* \"#utility.yul\":24623:24642   */\n      add\n        /* \"#utility.yul\":24617:24643   */\n      mload\n        /* \"#utility.yul\":24608:24643   */\n      swap1\n      pop\n        /* \"#utility.yul\":24580:24657   */\n    tag_671:\n        /* \"#utility.yul\":24683:24750   */\n      tag_672\n        /* \"#utility.yul\":24743:24749   */\n      dup6\n        /* \"#utility.yul\":24736:24741   */\n      dup3\n        /* \"#utility.yul\":24683:24750   */\n      tag_416\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":24677:24681   */\n      dup7\n        /* \"#utility.yul\":24670:24751   */\n      sstore\n        /* \"#utility.yul\":24539:24761   */\n      pop\n        /* \"#utility.yul\":23874:24761   */\n      jump(tag_669)\n        /* \"#utility.yul\":23904:24522   */\n    tag_670:\n        /* \"#utility.yul\":23956:23960   */\n      0x1f\n        /* \"#utility.yul\":23952:23961   */\n      not\n        /* \"#utility.yul\":23944:23950   */\n      dup5\n        /* \"#utility.yul\":23940:23962   */\n      and\n        /* \"#utility.yul\":23990:24027   */\n      tag_673\n        /* \"#utility.yul\":24022:24026   */\n      dup7\n        /* \"#utility.yul\":23990:24027   */\n      tag_405\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":24049:24050   */\n      0x00\n        /* \"#utility.yul\":24063:24271   */\n    tag_674:\n        /* \"#utility.yul\":24077:24084   */\n      dup3\n        /* \"#utility.yul\":24074:24075   */\n      dup2\n        /* \"#utility.yul\":24071:24085   */\n      lt\n        /* \"#utility.yul\":24063:24271   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":24156:24165   */\n      dup5\n        /* \"#utility.yul\":24151:24154   */\n      dup10\n        /* \"#utility.yul\":24147:24166   */\n      add\n        /* \"#utility.yul\":24141:24167   */\n      mload\n        /* \"#utility.yul\":24133:24139   */\n      dup3\n        /* \"#utility.yul\":24126:24168   */\n      sstore\n        /* \"#utility.yul\":24207:24208   */\n      0x01\n        /* \"#utility.yul\":24199:24205   */\n      dup3\n        /* \"#utility.yul\":24195:24209   */\n      add\n        /* \"#utility.yul\":24185:24209   */\n      swap2\n      pop\n        /* \"#utility.yul\":24254:24256   */\n      0x20\n        /* \"#utility.yul\":24243:24252   */\n      dup6\n        /* \"#utility.yul\":24239:24257   */\n      add\n        /* \"#utility.yul\":24226:24257   */\n      swap5\n      pop\n        /* \"#utility.yul\":24100:24104   */\n      0x20\n        /* \"#utility.yul\":24097:24098   */\n      dup2\n        /* \"#utility.yul\":24093:24105   */\n      add\n        /* \"#utility.yul\":24088:24105   */\n      swap1\n      pop\n        /* \"#utility.yul\":24063:24271   */\n      jump(tag_674)\n    tag_676:\n        /* \"#utility.yul\":24299:24305   */\n      dup7\n        /* \"#utility.yul\":24290:24297   */\n      dup4\n        /* \"#utility.yul\":24287:24306   */\n      lt\n        /* \"#utility.yul\":24284:24463   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":24357:24366   */\n      dup5\n        /* \"#utility.yul\":24352:24355   */\n      dup10\n        /* \"#utility.yul\":24348:24367   */\n      add\n        /* \"#utility.yul\":24342:24368   */\n      mload\n        /* \"#utility.yul\":24400:24448   */\n      tag_678\n        /* \"#utility.yul\":24442:24446   */\n      0x1f\n        /* \"#utility.yul\":24434:24440   */\n      dup10\n        /* \"#utility.yul\":24430:24447   */\n      and\n        /* \"#utility.yul\":24419:24428   */\n      dup3\n        /* \"#utility.yul\":24400:24448   */\n      tag_415\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":24392:24398   */\n      dup4\n        /* \"#utility.yul\":24385:24449   */\n      sstore\n        /* \"#utility.yul\":24307:24463   */\n      pop\n        /* \"#utility.yul\":24284:24463   */\n    tag_677:\n        /* \"#utility.yul\":24509:24510   */\n      0x01\n        /* \"#utility.yul\":24505:24506   */\n      0x02\n        /* \"#utility.yul\":24497:24503   */\n      dup9\n        /* \"#utility.yul\":24493:24507   */\n      mul\n        /* \"#utility.yul\":24489:24511   */\n      add\n        /* \"#utility.yul\":24483:24487   */\n      dup9\n        /* \"#utility.yul\":24476:24512   */\n      sstore\n        /* \"#utility.yul\":23911:24522   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23874:24761   */\n    tag_669:\n      pop\n        /* \"#utility.yul\":23464:24767   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23372:24767   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24773:25105   */\n    tag_332:\n        /* \"#utility.yul\":24894:24898   */\n      0x00\n        /* \"#utility.yul\":24932:24934   */\n      0x40\n        /* \"#utility.yul\":24921:24930   */\n      dup3\n        /* \"#utility.yul\":24917:24935   */\n      add\n        /* \"#utility.yul\":24909:24935   */\n      swap1\n      pop\n        /* \"#utility.yul\":24945:25016   */\n      tag_680\n        /* \"#utility.yul\":25013:25014   */\n      0x00\n        /* \"#utility.yul\":25002:25011   */\n      dup4\n        /* \"#utility.yul\":24998:25015   */\n      add\n        /* \"#utility.yul\":24989:24995   */\n      dup6\n        /* \"#utility.yul\":24945:25016   */\n      tag_368\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":25026:25098   */\n      tag_681\n        /* \"#utility.yul\":25094:25096   */\n      0x20\n        /* \"#utility.yul\":25083:25092   */\n      dup4\n        /* \"#utility.yul\":25079:25097   */\n      add\n        /* \"#utility.yul\":25070:25076   */\n      dup5\n        /* \"#utility.yul\":25026:25098   */\n      tag_368\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":24773:25105   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25111:25209   */\n    tag_417:\n        /* \"#utility.yul\":25162:25168   */\n      0x00\n        /* \"#utility.yul\":25196:25201   */\n      dup2\n        /* \"#utility.yul\":25190:25202   */\n      mload\n        /* \"#utility.yul\":25180:25202   */\n      swap1\n      pop\n        /* \"#utility.yul\":25111:25209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25215:25362   */\n    tag_418:\n        /* \"#utility.yul\":25316:25327   */\n      0x00\n        /* \"#utility.yul\":25353:25356   */\n      dup2\n        /* \"#utility.yul\":25338:25356   */\n      swap1\n      pop\n        /* \"#utility.yul\":25215:25362   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25368:25754   */\n    tag_419:\n        /* \"#utility.yul\":25472:25475   */\n      0x00\n        /* \"#utility.yul\":25500:25538   */\n      tag_685\n        /* \"#utility.yul\":25532:25537   */\n      dup3\n        /* \"#utility.yul\":25500:25538   */\n      tag_417\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":25554:25642   */\n      tag_686\n        /* \"#utility.yul\":25635:25641   */\n      dup2\n        /* \"#utility.yul\":25630:25633   */\n      dup6\n        /* \"#utility.yul\":25554:25642   */\n      tag_418\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":25547:25642   */\n      swap4\n      pop\n        /* \"#utility.yul\":25651:25716   */\n      tag_687\n        /* \"#utility.yul\":25709:25715   */\n      dup2\n        /* \"#utility.yul\":25704:25707   */\n      dup6\n        /* \"#utility.yul\":25697:25701   */\n      0x20\n        /* \"#utility.yul\":25690:25695   */\n      dup7\n        /* \"#utility.yul\":25686:25702   */\n      add\n        /* \"#utility.yul\":25651:25716   */\n      tag_353\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":25741:25747   */\n      dup1\n        /* \"#utility.yul\":25736:25739   */\n      dup5\n        /* \"#utility.yul\":25732:25748   */\n      add\n        /* \"#utility.yul\":25725:25748   */\n      swap2\n      pop\n        /* \"#utility.yul\":25476:25754   */\n      pop\n        /* \"#utility.yul\":25368:25754   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25760:26031   */\n    tag_334:\n        /* \"#utility.yul\":25890:25893   */\n      0x00\n        /* \"#utility.yul\":25912:26005   */\n      tag_689\n        /* \"#utility.yul\":26001:26004   */\n      dup3\n        /* \"#utility.yul\":25992:25998   */\n      dup5\n        /* \"#utility.yul\":25912:26005   */\n      tag_419\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":25905:26005   */\n      swap2\n      pop\n        /* \"#utility.yul\":26022:26025   */\n      dup2\n        /* \"#utility.yul\":26015:26025   */\n      swap1\n      pop\n        /* \"#utility.yul\":25760:26031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202c783ece8850b56f72678b3039e0e3b3c6778d793cdce73474d7c30a64a2e6b464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1136": {
									"entryPoint": null,
									"id": 1136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_1876": {
									"entryPoint": 35,
									"id": 1876,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_1907": {
									"entryPoint": 289,
									"id": 1907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:16",
										"nodeType": "YulBlock",
										"src": "0:456:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:16",
													"nodeType": "YulBlock",
													"src": "51:57:16",
													"statements": [
														{
															"nativeSrc": "61:41:16",
															"nodeType": "YulAssignment",
															"src": "61:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:16",
																		"nodeType": "YulLiteral",
																		"src": "83:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:16"
																},
																"nativeSrc": "72:30:16",
																"nodeType": "YulFunctionCall",
																"src": "72:30:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:16",
														"nodeType": "YulTypedName",
														"src": "33:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:16",
														"nodeType": "YulTypedName",
														"src": "43:7:16",
														"type": ""
													}
												],
												"src": "7:101:16"
											},
											{
												"body": {
													"nativeSrc": "177:52:16",
													"nodeType": "YulBlock",
													"src": "177:52:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:16",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:16"
																		},
																		"nativeSrc": "199:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:36:16",
																"nodeType": "YulFunctionCall",
																"src": "187:36:16"
															},
															"nativeSrc": "187:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:16"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:16",
														"nodeType": "YulTypedName",
														"src": "165:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:16",
														"nodeType": "YulTypedName",
														"src": "172:3:16",
														"type": ""
													}
												],
												"src": "114:115:16"
											},
											{
												"body": {
													"nativeSrc": "331:122:16",
													"nodeType": "YulBlock",
													"src": "331:122:16",
													"statements": [
														{
															"nativeSrc": "341:26:16",
															"nodeType": "YulAssignment",
															"src": "341:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:16",
																		"nodeType": "YulLiteral",
																		"src": "364:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:16"
																},
																"nativeSrc": "349:18:16",
																"nodeType": "YulFunctionCall",
																"src": "349:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:16",
																				"nodeType": "YulLiteral",
																				"src": "443:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:16"
																		},
																		"nativeSrc": "428:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:16",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:16"
																},
																"nativeSrc": "377:69:16",
																"nodeType": "YulFunctionCall",
																"src": "377:69:16"
															},
															"nativeSrc": "377:69:16",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:16",
														"nodeType": "YulTypedName",
														"src": "303:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:16",
														"nodeType": "YulTypedName",
														"src": "315:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:16",
														"nodeType": "YulTypedName",
														"src": "326:4:16",
														"type": ""
													}
												],
												"src": "235:218:16"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061001e61002360201b60201c565b610183565b5f61003261012160201b60201c565b9050805f0160089054906101000a900460ff161561007c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff161461011e5767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051610115919061016a565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b61016481610148565b82525050565b5f60208201905061017d5f83018461015b565b92915050565b612963806101905f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c806343e8be32116100a057806395d89b411161006f57806395d89b41146102a3578063a9059cbb146102c1578063ca5c7b91146102f1578063dd62ed3e1461030f578063fd3d27b81461033f57610109565b806343e8be32146102315780634e71d92d1461024d57806370a08231146102575780638f15b4141461028757610109565b806325d998bb116100dc57806325d998bb146101a9578063313ce567146101d95780633a05f0d8146101f757806340c10f191461021557610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b61011561035d565b6040516101229190611cb9565b60405180910390f35b61014560048036038101906101409190611d6e565b6103fb565b6040516101529190611dc6565b60405180910390f35b61016361041d565b6040516101709190611dee565b60405180910390f35b610193600480360381019061018e9190611e07565b610434565b6040516101a09190611dc6565b60405180910390f35b6101c360048036038101906101be9190611e57565b610462565b6040516101d09190611dee565b60405180910390f35b6101e16104bb565b6040516101ee9190611e9d565b60405180910390f35b6101ff6104c3565b60405161020c9190611fe7565b60405180910390f35b61022f600480360381019061022a9190611d6e565b61055f565b005b61024b60048036038101906102469190612068565b6106e8565b005b610255610806565b005b610271600480360381019061026c9190611e57565b6108f7565b60405161027e9190611dee565b60405180910390f35b6102a1600480360381019061029c919061212e565b61094a565b005b6102ab610c16565b6040516102b89190611cb9565b60405180910390f35b6102db60048036038101906102d69190611d6e565b610cb4565b6040516102e89190611dc6565b60405180910390f35b6102f9610cd6565b6040516103069190611dee565b60405180910390f35b610329600480360381019061032491906121d1565b610cf1565b6040516103369190611dee565b60405180910390f35b610347610d81565b6040516103549190611dee565b60405180910390f35b60605f610368610d8f565b90508060030180546103799061223c565b80601f01602080910402602001604051908101604052809291908181526020018280546103a59061223c565b80156103f05780601f106103c7576101008083540402835291602001916103f0565b820191905f5260205f20905b8154815290600101906020018083116103d357829003601f168201915b505050505091505090565b5f80610405610db6565b9050610412818585610dbd565b600191505092915050565b5f80610427610d8f565b9050806002015491505090565b5f8061043e610db6565b905061044b858285610dcf565b610456858585610e61565b60019150509392505050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546104aa83610f51565b6104b49190612299565b9050919050565b5f6012905090565b6104cb611c2a565b60036040518060600160405290815f82015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015610552578382905f5260205f2090600202016040518060400160405290815f82015481526020016001820154815250508152602001906001019061050f565b5050505081525050905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f9cdc2ed500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600101544210610621576040517fd45c7f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61066f33308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fa0909392919063ffffffff16565b6106798282611022565b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106c591906122cc565b925050819055508060065f8282546106dd91906122cc565b925050819055505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076e576040517f8eccd8b900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82829050905061078285858585856110a1565b8460035f0181905550836003600101819055505f5b818110156107fe5760036002018484838181106107b7576107b66122ff565b5b905060400201908060018154018082558091505060019003905f5260205f2090600202015f9091909190915081816107ef9190612427565b50508080600101915050610797565b505050505050565b5f61081033610462565b90505f810361084b576040517f08bc1cf600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461089791906122cc565b925050819055506108a83382611278565b6108f4338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112f79092919063ffffffff16565b50565b5f80610901610d8f565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b5f610953611376565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561099b5750825b90505f60018367ffffffffffffffff161480156109ce57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156109dc575080155b15610a13576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610a60576001855f0160086101000a81548160ff0219169083151502179055505b610af08b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050508a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505061139d565b865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c09575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c009190612481565b60405180910390a15b5050505050505050505050565b60605f610c21610d8f565b9050806004018054610c329061223c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5e9061223c565b8015610ca95780601f10610c8057610100808354040283529160200191610ca9565b820191905f5260205f20905b815481529060010190602001808311610c8c57829003601f168201915b505050505091505090565b5f80610cbe610db6565b9050610ccb818585610e61565b600191505092915050565b5f610cdf6113b3565b600654610cec9190612299565b905090565b5f80610cfb610d8f565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b5f610d8a6113b3565b905090565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610dca83838360016113c5565b505050565b5f610dda8484610cf1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e5b5781811015610e4c578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e43939291906124a9565b60405180910390fd5b610e5a84848484035f6113c5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed1575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ec891906124de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f41575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f3891906124de565b60405180910390fd5b610f4c8383836115a2565b505050565b5f610f9960075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426117d1565b9050919050565b61101c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610fd5939291906124f7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061194a565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611092575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161108991906124de565b60405180910390fd5b61109d5f83836115a2565b5050565b428510156110db576040517fc18dfcc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83851115611115576040517f8147e9e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805f90505b8281101561123457848482818110611136576111356122ff565b5b905060400201602001358261114b91906122cc565b91505f8082141580156111a0575085858381811061116c5761116b6122ff565b5b9050604002015f013586866001856111849190612299565b818110611194576111936122ff565b5b9050604002015f013510155b90508585838181106111b5576111b46122ff565b5b9050604002015f0135871015806111c95750805b15611226578585838181106111e1576111e06122ff565b5b9050604002015f01356040517f1a3250bd00000000000000000000000000000000000000000000000000000000815260040161121d9190611dee565b60405180910390fd5b50808060010191505061111b565b506127108114611270576040517fc45b8e2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112e8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112df91906124de565b60405180910390fd5b6112f3825f836115a2565b5050565b611371838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161132a92919061252c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061194a565b505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6113a56119df565b6113af8282611a1f565b5050565b5f6113c0600654426117d1565b905090565b5f6113ce610d8f565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611440575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161143791906124de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114b0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114a791906124de565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550811561159b578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516115929190611dee565b60405180910390a35b5050505050565b5f6115ab610d8f565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115ff5781816002015f8282546115f391906122cc565b925050819055506116d1565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508281101561168a578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611681939291906124a9565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361171a5781816002015f8282540392505081905550611766565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117c39190611dee565b60405180910390a350505050565b5f6003600101548210156117e7575f9050611944565b5f60036001015490505f6003600201805480602002602001604051908101604052809291908181526020015f905b82821015611858578382905f5260205f2090600202016040518060400160405290815f820154815260200160018201548152505081526020019060010190611815565b5050505090505f815190505f5b8181101561193f575f838281518110611881576118806122ff565b5b602002602001015190505f815f015190505f8260200151905081891015611906575f878a6118af9190612299565b90505f88846118be9190612299565b9050612710816118ce9190612553565b83838e6118db9190612553565b6118e59190612553565b6118ef91906125c1565b8a6118fa91906122cc565b9950505050505061193f565b612710818b6119159190612553565b61191f91906125c1565b8861192a91906122cc565b97508196505050508080600101915050611865565b505050505b92915050565b5f611974828473ffffffffffffffffffffffffffffffffffffffff16611a5b90919063ffffffff16565b90505f815114158015611998575080806020019051810190611996919061261b565b155b156119da57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016119d191906124de565b60405180910390fd5b505050565b6119e7611a70565b611a1d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611a276119df565b5f611a30610d8f565b905082816003019081611a4391906127dd565b5081816004019081611a5591906127dd565b50505050565b6060611a6883835f611a8e565b905092915050565b5f611a79611376565b5f0160089054906101000a900460ff16905090565b606081471015611ad75747826040517fcf479181000000000000000000000000000000000000000000000000000000008152600401611ace9291906128ac565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051611aff9190612917565b5f6040518083038185875af1925050503d805f8114611b39576040519150601f19603f3d011682016040523d82523d5f602084013e611b3e565b606091505b5091509150611b4e868383611b59565b925050509392505050565b606082611b6e57611b6982611be6565b611bde565b5f8251148015611b9457505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611bd657836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611bcd91906124de565b60405180910390fd5b819050611bdf565b5b9392505050565b5f81511115611bf85780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180606001604052805f81526020015f8152602001606081525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611c8b82611c49565b611c958185611c53565b9350611ca5818560208601611c63565b611cae81611c71565b840191505092915050565b5f6020820190508181035f830152611cd18184611c81565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d0a82611ce1565b9050919050565b611d1a81611d00565b8114611d24575f80fd5b50565b5f81359050611d3581611d11565b92915050565b5f819050919050565b611d4d81611d3b565b8114611d57575f80fd5b50565b5f81359050611d6881611d44565b92915050565b5f8060408385031215611d8457611d83611cd9565b5b5f611d9185828601611d27565b9250506020611da285828601611d5a565b9150509250929050565b5f8115159050919050565b611dc081611dac565b82525050565b5f602082019050611dd95f830184611db7565b92915050565b611de881611d3b565b82525050565b5f602082019050611e015f830184611ddf565b92915050565b5f805f60608486031215611e1e57611e1d611cd9565b5b5f611e2b86828701611d27565b9350506020611e3c86828701611d27565b9250506040611e4d86828701611d5a565b9150509250925092565b5f60208284031215611e6c57611e6b611cd9565b5b5f611e7984828501611d27565b91505092915050565b5f60ff82169050919050565b611e9781611e82565b82525050565b5f602082019050611eb05f830184611e8e565b92915050565b611ebf81611d3b565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b604082015f820151611f025f850182611eb6565b506020820151611f156020850182611eb6565b50505050565b5f611f268383611eee565b60408301905092915050565b5f602082019050919050565b5f611f4882611ec5565b611f528185611ecf565b9350611f5d83611edf565b805f5b83811015611f8d578151611f748882611f1b565b9750611f7f83611f32565b925050600181019050611f60565b5085935050505092915050565b5f606083015f830151611faf5f860182611eb6565b506020830151611fc26020860182611eb6565b5060408301518482036040860152611fda8282611f3e565b9150508091505092915050565b5f6020820190508181035f830152611fff8184611f9a565b905092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261202857612027612007565b5b8235905067ffffffffffffffff8111156120455761204461200b565b5b6020830191508360408202830111156120615761206061200f565b5b9250929050565b5f805f80606085870312156120805761207f611cd9565b5b5f61208d87828801611d5a565b945050602061209e87828801611d5a565b935050604085013567ffffffffffffffff8111156120bf576120be611cdd565b5b6120cb87828801612013565b925092505092959194509250565b5f8083601f8401126120ee576120ed612007565b5b8235905067ffffffffffffffff81111561210b5761210a61200b565b5b6020830191508360018202830111156121275761212661200f565b5b9250929050565b5f805f805f806080878903121561214857612147611cd9565b5b5f87013567ffffffffffffffff81111561216557612164611cdd565b5b61217189828a016120d9565b9650965050602087013567ffffffffffffffff81111561219457612193611cdd565b5b6121a089828a016120d9565b945094505060406121b389828a01611d27565b92505060606121c489828a01611d27565b9150509295509295509295565b5f80604083850312156121e7576121e6611cd9565b5b5f6121f485828601611d27565b925050602061220585828601611d27565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061225357607f821691505b6020821081036122665761226561220f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122a382611d3b565b91506122ae83611d3b565b92508282039050818111156122c6576122c561226c565b5b92915050565b5f6122d682611d3b565b91506122e183611d3b565b92508282019050808211156122f9576122f861226c565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f813561233881611d44565b80915050919050565b5f815f1b9050919050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61237784612341565b9350801983169250808416831791505092915050565b5f819050919050565b5f6123b06123ab6123a684611d3b565b61238d565b611d3b565b9050919050565b5f819050919050565b6123c982612396565b6123dc6123d5826123b7565b835461234c565b8255505050565b5f81015f8301806123f38161232c565b90506123ff81846123c0565b5050506001810160208301806124148161232c565b905061242081846123c0565b5050505050565b61243182826123e3565b5050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f61246b61246661246184612435565b61238d565b61243e565b9050919050565b61247b81612451565b82525050565b5f6020820190506124945f830184612472565b92915050565b6124a381611d00565b82525050565b5f6060820190506124bc5f83018661249a565b6124c96020830185611ddf565b6124d66040830184611ddf565b949350505050565b5f6020820190506124f15f83018461249a565b92915050565b5f60608201905061250a5f83018661249a565b612517602083018561249a565b6125246040830184611ddf565b949350505050565b5f60408201905061253f5f83018561249a565b61254c6020830184611ddf565b9392505050565b5f61255d82611d3b565b915061256883611d3b565b925082820261257681611d3b565b9150828204841483151761258d5761258c61226c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6125cb82611d3b565b91506125d683611d3b565b9250826125e6576125e5612594565b5b828204905092915050565b6125fa81611dac565b8114612604575f80fd5b50565b5f81519050612615816125f1565b92915050565b5f602082840312156126305761262f611cd9565b5b5f61263d84828501612607565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612694565b6126d98683612694565b95508019841693508086168417925050509392505050565b6126fa83612396565b61270e612706826123b7565b8484546126a0565b825550505050565b5f90565b612722612716565b61272d8184846126f1565b505050565b5b81811015612750576127455f8261271a565b600181019050612733565b5050565b601f8211156127955761276681612673565b61276f84612685565b8101602085101561277e578190505b61279261278a85612685565b830182612732565b50505b505050565b5f82821c905092915050565b5f6127b55f198460080261279a565b1980831691505092915050565b5f6127cd83836127a6565b9150826002028217905092915050565b6127e682611c49565b67ffffffffffffffff8111156127ff576127fe612646565b5b612809825461223c565b612814828285612754565b5f60209050601f831160018114612845575f8415612833578287015190505b61283d85826127c2565b8655506128a4565b601f19841661285386612673565b5f5b8281101561287a57848901518255600182019150602085019450602081019050612855565b868310156128975784890151612893601f8916826127a6565b8355505b6001600288020188555050505b505050505050565b5f6040820190506128bf5f830185611ddf565b6128cc6020830184611ddf565b9392505050565b5f81519050919050565b5f81905092915050565b5f6128f1826128d3565b6128fb81856128dd565b935061290b818560208601611c63565b80840191505092915050565b5f61292282846128e7565b91508190509291505056fea26469706673582212202c783ece8850b56f72678b3039e0e3b3c6778d793cdce73474d7c30a64a2e6b464736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E PUSH2 0x23 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH0 PUSH2 0x32 PUSH2 0x121 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164 DUP2 PUSH2 0x148 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D PUSH0 DUP4 ADD DUP5 PUSH2 0x15B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2963 DUP1 PUSH2 0x190 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43E8BE32 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xCA5C7B91 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFD3D27B8 EQ PUSH2 0x33F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x43E8BE32 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x287 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x25D998BB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x25D998BB EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3A05F0D8 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x368 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x379 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A5 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x405 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x412 DUP2 DUP6 DUP6 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x427 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x43E PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x44B DUP6 DUP3 DUP6 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x456 DUP6 DUP6 DUP6 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x4AA DUP4 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4CB PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x552 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x50F JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9CDC2ED500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD45C7F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x679 DUP3 DUP3 PUSH2 0x1022 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8ECCD8B900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP SWAP1 POP PUSH2 0x782 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10A1 JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x3 PUSH1 0x2 ADD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x7B7 JUMPI PUSH2 0x7B6 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP DUP2 DUP2 PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x2427 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x797 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x810 CALLER PUSH2 0x462 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8BC1CF600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8A8 CALLER DUP3 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x8F4 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x901 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x953 PUSH2 0x1376 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x99B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x9CE JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x9DC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xA60 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xAF0 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x139D JUMP JUMPDEST DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC09 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xC21 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xC32 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC5E SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC80 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCBE PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP PUSH2 0xCCB DUP2 DUP6 DUP6 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCDF PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCFB PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD8A PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDCA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDDA DUP5 DUP5 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xE5B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE4C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13C5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF41 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4C DUP4 DUP4 DUP4 PUSH2 0x15A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF99 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x17D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xFD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x194A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1092 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x109D PUSH0 DUP4 DUP4 PUSH2 0x15A2 JUMP JUMPDEST POP POP JUMP JUMPDEST TIMESTAMP DUP6 LT ISZERO PUSH2 0x10DB JUMPI PUSH1 0x40 MLOAD PUSH32 0xC18DFCC200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 GT ISZERO PUSH2 0x1115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8147E9E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1234 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH1 0x20 ADD CALLDATALOAD DUP3 PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP2 POP PUSH0 DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x11A0 JUMPI POP DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x116C JUMPI PUSH2 0x116B PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD CALLDATALOAD DUP7 DUP7 PUSH1 0x1 DUP6 PUSH2 0x1184 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD CALLDATALOAD LT ISZERO JUMPDEST SWAP1 POP DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD CALLDATALOAD DUP8 LT ISZERO DUP1 PUSH2 0x11C9 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1226 JUMPI DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH32 0x1A3250BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121D SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x111B JUMP JUMPDEST POP PUSH2 0x2710 DUP2 EQ PUSH2 0x1270 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC45B8E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F3 DUP3 PUSH0 DUP4 PUSH2 0x15A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1371 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x132A SWAP3 SWAP2 SWAP1 PUSH2 0x252C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x194A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13A5 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x13AF DUP3 DUP3 PUSH2 0x1A1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13C0 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x17D1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x13CE PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1440 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1437 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A7 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x159B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1592 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15AB PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15FF JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16D1 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x168A JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1681 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x171A JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1766 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x17C3 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x1 ADD SLOAD DUP3 LT ISZERO PUSH2 0x17E7 JUMPI PUSH0 SWAP1 POP PUSH2 0x1944 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1858 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1815 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x193F JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1881 JUMPI PUSH2 0x1880 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 DUP10 LT ISZERO PUSH2 0x1906 JUMPI PUSH0 DUP8 DUP11 PUSH2 0x18AF SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST SWAP1 POP PUSH0 DUP9 DUP5 PUSH2 0x18BE SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 DUP2 PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST DUP4 DUP4 DUP15 PUSH2 0x18DB SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x25C1 JUMP JUMPDEST DUP11 PUSH2 0x18FA SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP10 POP POP POP POP POP POP PUSH2 0x193F JUMP JUMPDEST PUSH2 0x2710 DUP2 DUP12 PUSH2 0x1915 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x191F SWAP2 SWAP1 PUSH2 0x25C1 JUMP JUMPDEST DUP9 PUSH2 0x192A SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP8 POP DUP2 SWAP7 POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1865 JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1974 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A5B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1998 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1996 SWAP2 SWAP1 PUSH2 0x261B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x19DA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D1 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x19E7 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x1A1D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1A27 PUSH2 0x19DF JUMP JUMPDEST PUSH0 PUSH2 0x1A30 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1A43 SWAP2 SWAP1 PUSH2 0x27DD JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x27DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A68 DUP4 DUP4 PUSH0 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A79 PUSH2 0x1376 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1AD7 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ACE SWAP3 SWAP2 SWAP1 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1AFF SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1B39 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B4E DUP7 DUP4 DUP4 PUSH2 0x1B59 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1B6E JUMPI PUSH2 0x1B69 DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x1BDE JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1B94 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1BD6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCD SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1BF8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8B DUP3 PUSH2 0x1C49 JUMP JUMPDEST PUSH2 0x1C95 DUP2 DUP6 PUSH2 0x1C53 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CA5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1CAE DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD1 DUP2 DUP5 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0A DUP3 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D1A DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D24 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D35 DUP2 PUSH2 0x1D11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D4D DUP2 PUSH2 0x1D3B JUMP JUMPDEST DUP2 EQ PUSH2 0x1D57 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D68 DUP2 PUSH2 0x1D44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D84 JUMPI PUSH2 0x1D83 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D91 DUP6 DUP3 DUP7 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA2 DUP6 DUP3 DUP7 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC0 DUP2 PUSH2 0x1DAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE8 DUP2 PUSH2 0x1D3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E01 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E1E JUMPI PUSH2 0x1E1D PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2B DUP7 DUP3 DUP8 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E3C DUP7 DUP3 DUP8 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E4D DUP7 DUP3 DUP8 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E79 DUP5 DUP3 DUP6 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E97 DUP2 PUSH2 0x1E82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EBF DUP2 PUSH2 0x1D3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1F02 PUSH0 DUP6 ADD DUP3 PUSH2 0x1EB6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1F15 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1EB6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F26 DUP4 DUP4 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F48 DUP3 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1F52 DUP2 DUP6 PUSH2 0x1ECF JUMP JUMPDEST SWAP4 POP PUSH2 0x1F5D DUP4 PUSH2 0x1EDF JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F8D JUMPI DUP2 MLOAD PUSH2 0x1F74 DUP9 DUP3 PUSH2 0x1F1B JUMP JUMPDEST SWAP8 POP PUSH2 0x1F7F DUP4 PUSH2 0x1F32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1F60 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x1FAF PUSH0 DUP7 ADD DUP3 PUSH2 0x1EB6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1FC2 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1EB6 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1FDA DUP3 DUP3 PUSH2 0x1F3E JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FFF DUP2 DUP5 PUSH2 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2028 JUMPI PUSH2 0x2027 PUSH2 0x2007 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x200B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2061 JUMPI PUSH2 0x2060 PUSH2 0x200F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2080 JUMPI PUSH2 0x207F PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208D DUP8 DUP3 DUP9 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x209E DUP8 DUP3 DUP9 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20BF JUMPI PUSH2 0x20BE PUSH2 0x1CDD JUMP JUMPDEST JUMPDEST PUSH2 0x20CB DUP8 DUP3 DUP9 ADD PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20EE JUMPI PUSH2 0x20ED PUSH2 0x2007 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x210B JUMPI PUSH2 0x210A PUSH2 0x200B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x200F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2148 JUMPI PUSH2 0x2147 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2165 JUMPI PUSH2 0x2164 PUSH2 0x1CDD JUMP JUMPDEST JUMPDEST PUSH2 0x2171 DUP10 DUP3 DUP11 ADD PUSH2 0x20D9 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2194 JUMPI PUSH2 0x2193 PUSH2 0x1CDD JUMP JUMPDEST JUMPDEST PUSH2 0x21A0 DUP10 DUP3 DUP11 ADD PUSH2 0x20D9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 PUSH2 0x21B3 DUP10 DUP3 DUP11 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x21C4 DUP10 DUP3 DUP11 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E7 JUMPI PUSH2 0x21E6 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21F4 DUP6 DUP3 DUP7 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2205 DUP6 DUP3 DUP7 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2253 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2266 JUMPI PUSH2 0x2265 PUSH2 0x220F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22A3 DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x22AE DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22C6 JUMPI PUSH2 0x22C5 PUSH2 0x226C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D6 DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x22E1 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22F9 JUMPI PUSH2 0x22F8 PUSH2 0x226C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 CALLDATALOAD PUSH2 0x2338 DUP2 PUSH2 0x1D44 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2377 DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B0 PUSH2 0x23AB PUSH2 0x23A6 DUP5 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x238D JUMP JUMPDEST PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23C9 DUP3 PUSH2 0x2396 JUMP JUMPDEST PUSH2 0x23DC PUSH2 0x23D5 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x234C JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 ADD PUSH0 DUP4 ADD DUP1 PUSH2 0x23F3 DUP2 PUSH2 0x232C JUMP JUMPDEST SWAP1 POP PUSH2 0x23FF DUP2 DUP5 PUSH2 0x23C0 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP4 ADD DUP1 PUSH2 0x2414 DUP2 PUSH2 0x232C JUMP JUMPDEST SWAP1 POP PUSH2 0x2420 DUP2 DUP5 PUSH2 0x23C0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2431 DUP3 DUP3 PUSH2 0x23E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x246B PUSH2 0x2466 PUSH2 0x2461 DUP5 PUSH2 0x2435 JUMP JUMPDEST PUSH2 0x238D JUMP JUMPDEST PUSH2 0x243E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x247B DUP2 PUSH2 0x2451 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2494 PUSH0 DUP4 ADD DUP5 PUSH2 0x2472 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24A3 DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24BC PUSH0 DUP4 ADD DUP7 PUSH2 0x249A JUMP JUMPDEST PUSH2 0x24C9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DDF JUMP JUMPDEST PUSH2 0x24D6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x249A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH0 DUP4 ADD DUP7 PUSH2 0x249A JUMP JUMPDEST PUSH2 0x2517 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x249A JUMP JUMPDEST PUSH2 0x2524 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x253F PUSH0 DUP4 ADD DUP6 PUSH2 0x249A JUMP JUMPDEST PUSH2 0x254C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x255D DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x2568 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2576 DUP2 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x258D JUMPI PUSH2 0x258C PUSH2 0x226C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25CB DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x25D6 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25E6 JUMPI PUSH2 0x25E5 PUSH2 0x2594 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25FA DUP2 PUSH2 0x1DAC JUMP JUMPDEST DUP2 EQ PUSH2 0x2604 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2615 DUP2 PUSH2 0x25F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2630 JUMPI PUSH2 0x262F PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x263D DUP5 DUP3 DUP6 ADD PUSH2 0x2607 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x26CF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2694 JUMP JUMPDEST PUSH2 0x26D9 DUP7 DUP4 PUSH2 0x2694 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x26FA DUP4 PUSH2 0x2396 JUMP JUMPDEST PUSH2 0x270E PUSH2 0x2706 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26A0 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2722 PUSH2 0x2716 JUMP JUMPDEST PUSH2 0x272D DUP2 DUP5 DUP5 PUSH2 0x26F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2750 JUMPI PUSH2 0x2745 PUSH0 DUP3 PUSH2 0x271A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2733 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2795 JUMPI PUSH2 0x2766 DUP2 PUSH2 0x2673 JUMP JUMPDEST PUSH2 0x276F DUP5 PUSH2 0x2685 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x277E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2792 PUSH2 0x278A DUP6 PUSH2 0x2685 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2732 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x279A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27CD DUP4 DUP4 PUSH2 0x27A6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E6 DUP3 PUSH2 0x1C49 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27FF JUMPI PUSH2 0x27FE PUSH2 0x2646 JUMP JUMPDEST JUMPDEST PUSH2 0x2809 DUP3 SLOAD PUSH2 0x223C JUMP JUMPDEST PUSH2 0x2814 DUP3 DUP3 DUP6 PUSH2 0x2754 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2845 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2833 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x283D DUP6 DUP3 PUSH2 0x27C2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28A4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2853 DUP7 PUSH2 0x2673 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x287A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2855 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2897 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2893 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27A6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28BF PUSH0 DUP4 ADD DUP6 PUSH2 0x1DDF JUMP JUMPDEST PUSH2 0x28CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28F1 DUP3 PUSH2 0x28D3 JUMP JUMPDEST PUSH2 0x28FB DUP2 DUP6 PUSH2 0x28DD JUMP JUMPDEST SWAP4 POP PUSH2 0x290B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C63 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2922 DUP3 DUP5 PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH25 0x3ECE8850B56F72678B3039E0E3B3C6778D793CDCE73474D7C3 EXP PUSH5 0xA2E6B46473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1013:7386:11:-:0;;;1332:53;;;;;;;;;;1356:22;:20;;;:22;;:::i;:::-;1013:7386;;7778:422:12;7893:30;7926:26;:24;;;:26;;:::i;:::-;7893:59;;7967:1;:15;;;;;;;;;;;;7963:76;;;8005:23;;;;;;;;;;;;;;7963:76;8070:16;8052:34;;:1;:14;;;;;;;;;;;;:34;;;8048:146;;8119:16;8102:1;:14;;;:33;;;;;;;;;;;;;;;;;;8154:29;8166:16;8154:29;;;;;;:::i;:::-;;;;;;;;8048:146;7827:373;7778:422::o;8804:170::-;8862:30;8937:21;8927:31;;8804:170;:::o;7:101:16:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;1013:7386:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__ERC20_init_1985": {
									"entryPoint": 5021,
									"id": 1985,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_2013": {
									"entryPoint": 6687,
									"id": 2013,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_2417": {
									"entryPoint": 3517,
									"id": 2417,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2485": {
									"entryPoint": 5061,
									"id": 2485,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_2399": {
									"entryPoint": 4728,
									"id": 2399,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_703": {
									"entryPoint": 6474,
									"id": 703,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_1830": {
									"entryPoint": 6623,
									"id": 1830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkVestingSchedule_1383": {
									"entryPoint": 4257,
									"id": 1383,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_computeUnlocked_1659": {
									"entryPoint": 6097,
									"id": 1659,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getERC20Storage_1969": {
									"entryPoint": 3471,
									"id": 1969,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_1907": {
									"entryPoint": 4982,
									"id": 1907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_1898": {
									"entryPoint": 6768,
									"id": 1898,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_2366": {
									"entryPoint": 4130,
									"id": 2366,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2562": {
									"entryPoint": 3510,
									"id": 2562,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1011": {
									"entryPoint": 7142,
									"id": 1011,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_2533": {
									"entryPoint": 3535,
									"id": 2533,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_totalUnlocked_1547": {
									"entryPoint": 5043,
									"id": 1547,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_2241": {
									"entryPoint": 3681,
									"id": 2241,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unlockedOf_1535": {
									"entryPoint": 3921,
									"id": 1535,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_update_2333": {
									"entryPoint": 5538,
									"id": 2333,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_2138": {
									"entryPoint": 3313,
									"id": 2138,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_2162": {
									"entryPoint": 1019,
									"id": 2162,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@availableBalanceOf_1519": {
									"entryPoint": 1122,
									"id": 1519,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_2090": {
									"entryPoint": 2295,
									"id": 2090,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_1472": {
									"entryPoint": 2054,
									"id": 1472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_2054": {
									"entryPoint": 1211,
									"id": 2054,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCallWithValue_877": {
									"entryPoint": 6798,
									"id": 877,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_827": {
									"entryPoint": 6747,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getVestingSchedule_1481": {
									"entryPoint": 1219,
									"id": 1481,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1225": {
									"entryPoint": 2378,
									"id": 1225,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@lockedSupply_1501": {
									"entryPoint": 3286,
									"id": 1501,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1431": {
									"entryPoint": 1375,
									"id": 1431,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_2029": {
									"entryPoint": 861,
									"id": 2029,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_407": {
									"entryPoint": 4000,
									"id": 407,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_380": {
									"entryPoint": 4855,
									"id": 380,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setVestingSchedule_1286": {
									"entryPoint": 1768,
									"id": 1286,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@symbol_2045": {
									"entryPoint": 3094,
									"id": 2045,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_2070": {
									"entryPoint": 1053,
									"id": 2070,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2194": {
									"entryPoint": 1076,
									"id": 2194,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_2114": {
									"entryPoint": 3252,
									"id": 2114,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlockedSupply_1490": {
									"entryPoint": 3457,
									"id": 1490,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_969": {
									"entryPoint": 7001,
									"id": 969,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 8409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_addresst_address": {
									"entryPoint": 8494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 8296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encodeUpdatedPos_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr": {
									"entryPoint": 7963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr": {
									"entryPoint": 7918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Vesting_$1057_memory_ptr_to_t_struct$_Vesting_$1057_memory_ptr_fromStack": {
									"entryPoint": 8090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9463,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9385,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 9345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Vesting_$1057_memory_ptr__to_t_struct$_Vesting_$1057_memory_ptr__fromStack_reversed": {
									"entryPoint": 8167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10412,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 9269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 9278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 9297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_struct_to_storage_from_t_struct$_Schedule_$1048_calldata_ptr_to_t_struct$_Schedule_$1048_storage": {
									"entryPoint": 9187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 9101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x00": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 8812,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8959,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_calldatat_uint256": {
									"entryPoint": 9004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_0": {
									"entryPoint": 9025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_32_shift_0": {
									"entryPoint": 9036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9888,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_offset_0t_struct$_Schedule_$1048_calldata_ptr_to_t_struct$_Schedule_$1048_storage": {
									"entryPoint": 9255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offset_0t_uint256_to_t_uint256": {
									"entryPoint": 9152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9969,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10006,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26034:16",
										"nodeType": "YulBlock",
										"src": "0:26034:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:16",
													"nodeType": "YulBlock",
													"src": "66:40:16",
													"statements": [
														{
															"nativeSrc": "77:22:16",
															"nodeType": "YulAssignment",
															"src": "77:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:16"
																},
																"nativeSrc": "87:12:16",
																"nodeType": "YulFunctionCall",
																"src": "87:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:16",
														"nodeType": "YulTypedName",
														"src": "49:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:16",
														"nodeType": "YulTypedName",
														"src": "59:6:16",
														"type": ""
													}
												],
												"src": "7:99:16"
											},
											{
												"body": {
													"nativeSrc": "208:73:16",
													"nodeType": "YulBlock",
													"src": "208:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:16"
																},
																"nativeSrc": "218:19:16",
																"nodeType": "YulFunctionCall",
																"src": "218:19:16"
															},
															"nativeSrc": "218:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:16"
														},
														{
															"nativeSrc": "246:29:16",
															"nodeType": "YulAssignment",
															"src": "246:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:16",
																		"nodeType": "YulLiteral",
																		"src": "270:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:16"
																},
																"nativeSrc": "261:14:16",
																"nodeType": "YulFunctionCall",
																"src": "261:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:16",
														"nodeType": "YulTypedName",
														"src": "180:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:16",
														"nodeType": "YulTypedName",
														"src": "185:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:16",
														"nodeType": "YulTypedName",
														"src": "196:11:16",
														"type": ""
													}
												],
												"src": "112:169:16"
											},
											{
												"body": {
													"nativeSrc": "349:77:16",
													"nodeType": "YulBlock",
													"src": "349:77:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:16"
																},
																"nativeSrc": "360:23:16",
																"nodeType": "YulFunctionCall",
																"src": "360:23:16"
															},
															"nativeSrc": "360:23:16",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:16"
																		},
																		"nativeSrc": "399:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:16",
																		"nodeType": "YulLiteral",
																		"src": "417:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:16"
																},
																"nativeSrc": "392:27:16",
																"nodeType": "YulFunctionCall",
																"src": "392:27:16"
															},
															"nativeSrc": "392:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:16",
														"nodeType": "YulTypedName",
														"src": "331:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:16",
														"nodeType": "YulTypedName",
														"src": "336:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:16",
														"nodeType": "YulTypedName",
														"src": "341:6:16",
														"type": ""
													}
												],
												"src": "287:139:16"
											},
											{
												"body": {
													"nativeSrc": "480:54:16",
													"nodeType": "YulBlock",
													"src": "480:54:16",
													"statements": [
														{
															"nativeSrc": "490:38:16",
															"nodeType": "YulAssignment",
															"src": "490:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:16",
																				"nodeType": "YulLiteral",
																				"src": "515:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:16"
																		},
																		"nativeSrc": "504:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:16",
																				"nodeType": "YulLiteral",
																				"src": "524:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:16"
																		},
																		"nativeSrc": "520:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:16"
																},
																"nativeSrc": "500:28:16",
																"nodeType": "YulFunctionCall",
																"src": "500:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:16",
														"nodeType": "YulTypedName",
														"src": "463:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:16",
														"nodeType": "YulTypedName",
														"src": "473:6:16",
														"type": ""
													}
												],
												"src": "432:102:16"
											},
											{
												"body": {
													"nativeSrc": "632:285:16",
													"nodeType": "YulBlock",
													"src": "632:285:16",
													"statements": [
														{
															"nativeSrc": "642:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:16"
																},
																"nativeSrc": "656:39:16",
																"nodeType": "YulFunctionCall",
																"src": "656:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:16",
																	"nodeType": "YulTypedName",
																	"src": "646:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:16",
															"nodeType": "YulAssignment",
															"src": "704:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:16"
																},
																"nativeSrc": "711:71:16",
																"nodeType": "YulFunctionCall",
																"src": "711:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:16",
																				"nodeType": "YulLiteral",
																				"src": "837:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:16"
																		},
																		"nativeSrc": "826:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:16"
																},
																"nativeSrc": "791:65:16",
																"nodeType": "YulFunctionCall",
																"src": "791:65:16"
															},
															"nativeSrc": "791:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:16"
														},
														{
															"nativeSrc": "865:46:16",
															"nodeType": "YulAssignment",
															"src": "865:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:16"
																		},
																		"nativeSrc": "881:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:16"
																},
																"nativeSrc": "872:39:16",
																"nodeType": "YulFunctionCall",
																"src": "872:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:16",
														"nodeType": "YulTypedName",
														"src": "613:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:16",
														"nodeType": "YulTypedName",
														"src": "620:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:16",
														"nodeType": "YulTypedName",
														"src": "628:3:16",
														"type": ""
													}
												],
												"src": "540:377:16"
											},
											{
												"body": {
													"nativeSrc": "1041:195:16",
													"nodeType": "YulBlock",
													"src": "1041:195:16",
													"statements": [
														{
															"nativeSrc": "1051:26:16",
															"nodeType": "YulAssignment",
															"src": "1051:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:16"
																},
																"nativeSrc": "1059:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:16"
																		},
																		"nativeSrc": "1094:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:16"
																		},
																		"nativeSrc": "1113:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:16"
																},
																"nativeSrc": "1087:47:16",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:16"
															},
															"nativeSrc": "1087:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:16"
														},
														{
															"nativeSrc": "1143:86:16",
															"nodeType": "YulAssignment",
															"src": "1143:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:16"
																},
																"nativeSrc": "1151:78:16",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:16",
														"nodeType": "YulTypedName",
														"src": "1013:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:16",
														"nodeType": "YulTypedName",
														"src": "1025:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:16",
														"nodeType": "YulTypedName",
														"src": "1036:4:16",
														"type": ""
													}
												],
												"src": "923:313:16"
											},
											{
												"body": {
													"nativeSrc": "1282:35:16",
													"nodeType": "YulBlock",
													"src": "1282:35:16",
													"statements": [
														{
															"nativeSrc": "1292:19:16",
															"nodeType": "YulAssignment",
															"src": "1292:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:16"
																},
																"nativeSrc": "1302:9:16",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:16",
														"nodeType": "YulTypedName",
														"src": "1275:6:16",
														"type": ""
													}
												],
												"src": "1242:75:16"
											},
											{
												"body": {
													"nativeSrc": "1412:28:16",
													"nodeType": "YulBlock",
													"src": "1412:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:16"
																},
																"nativeSrc": "1422:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:16"
															},
															"nativeSrc": "1422:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:16"
											},
											{
												"body": {
													"nativeSrc": "1535:28:16",
													"nodeType": "YulBlock",
													"src": "1535:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:16"
																},
																"nativeSrc": "1545:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:16"
															},
															"nativeSrc": "1545:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:16"
											},
											{
												"body": {
													"nativeSrc": "1614:81:16",
													"nodeType": "YulBlock",
													"src": "1614:81:16",
													"statements": [
														{
															"nativeSrc": "1624:65:16",
															"nodeType": "YulAssignment",
															"src": "1624:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:16",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:16"
																},
																"nativeSrc": "1635:54:16",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:16",
														"nodeType": "YulTypedName",
														"src": "1596:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:16",
														"nodeType": "YulTypedName",
														"src": "1606:7:16",
														"type": ""
													}
												],
												"src": "1569:126:16"
											},
											{
												"body": {
													"nativeSrc": "1746:51:16",
													"nodeType": "YulBlock",
													"src": "1746:51:16",
													"statements": [
														{
															"nativeSrc": "1756:35:16",
															"nodeType": "YulAssignment",
															"src": "1756:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:16"
																},
																"nativeSrc": "1767:24:16",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:16",
														"nodeType": "YulTypedName",
														"src": "1728:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:16",
														"nodeType": "YulTypedName",
														"src": "1738:7:16",
														"type": ""
													}
												],
												"src": "1701:96:16"
											},
											{
												"body": {
													"nativeSrc": "1846:79:16",
													"nodeType": "YulBlock",
													"src": "1846:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:16",
																"nodeType": "YulBlock",
																"src": "1903:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:16"
																			},
																			"nativeSrc": "1905:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:16"
																		},
																		"nativeSrc": "1905:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:16"
																				},
																				"nativeSrc": "1876:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:16"
																		},
																		"nativeSrc": "1866:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:16"
																},
																"nativeSrc": "1859:43:16",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:16"
															},
															"nativeSrc": "1856:63:16",
															"nodeType": "YulIf",
															"src": "1856:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:16",
														"nodeType": "YulTypedName",
														"src": "1839:5:16",
														"type": ""
													}
												],
												"src": "1803:122:16"
											},
											{
												"body": {
													"nativeSrc": "1983:87:16",
													"nodeType": "YulBlock",
													"src": "1983:87:16",
													"statements": [
														{
															"nativeSrc": "1993:29:16",
															"nodeType": "YulAssignment",
															"src": "1993:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:16"
																},
																"nativeSrc": "2002:20:16",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:16"
																},
																"nativeSrc": "2031:33:16",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:16"
															},
															"nativeSrc": "2031:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:16",
														"nodeType": "YulTypedName",
														"src": "1961:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:16",
														"nodeType": "YulTypedName",
														"src": "1969:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:16",
														"nodeType": "YulTypedName",
														"src": "1977:5:16",
														"type": ""
													}
												],
												"src": "1931:139:16"
											},
											{
												"body": {
													"nativeSrc": "2121:32:16",
													"nodeType": "YulBlock",
													"src": "2121:32:16",
													"statements": [
														{
															"nativeSrc": "2131:16:16",
															"nodeType": "YulAssignment",
															"src": "2131:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:16",
																"nodeType": "YulIdentifier",
																"src": "2142:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:16",
														"nodeType": "YulTypedName",
														"src": "2103:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:16",
														"nodeType": "YulTypedName",
														"src": "2113:7:16",
														"type": ""
													}
												],
												"src": "2076:77:16"
											},
											{
												"body": {
													"nativeSrc": "2202:79:16",
													"nodeType": "YulBlock",
													"src": "2202:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:16",
																"nodeType": "YulBlock",
																"src": "2259:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:16"
																			},
																			"nativeSrc": "2261:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:16"
																		},
																		"nativeSrc": "2261:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:16"
																				},
																				"nativeSrc": "2232:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:16"
																		},
																		"nativeSrc": "2222:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:16"
																},
																"nativeSrc": "2215:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:16"
															},
															"nativeSrc": "2212:63:16",
															"nodeType": "YulIf",
															"src": "2212:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:16",
														"nodeType": "YulTypedName",
														"src": "2195:5:16",
														"type": ""
													}
												],
												"src": "2159:122:16"
											},
											{
												"body": {
													"nativeSrc": "2339:87:16",
													"nodeType": "YulBlock",
													"src": "2339:87:16",
													"statements": [
														{
															"nativeSrc": "2349:29:16",
															"nodeType": "YulAssignment",
															"src": "2349:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:16"
																},
																"nativeSrc": "2358:20:16",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:16"
																},
																"nativeSrc": "2387:33:16",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:16"
															},
															"nativeSrc": "2387:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:16",
														"nodeType": "YulTypedName",
														"src": "2317:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:16",
														"nodeType": "YulTypedName",
														"src": "2325:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:16",
														"nodeType": "YulTypedName",
														"src": "2333:5:16",
														"type": ""
													}
												],
												"src": "2287:139:16"
											},
											{
												"body": {
													"nativeSrc": "2515:391:16",
													"nodeType": "YulBlock",
													"src": "2515:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:16",
																"nodeType": "YulBlock",
																"src": "2561:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:16"
																			},
																			"nativeSrc": "2563:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:16"
																		},
																		"nativeSrc": "2563:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:16"
																		},
																		"nativeSrc": "2532:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:16"
																},
																"nativeSrc": "2528:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:16"
															},
															"nativeSrc": "2525:119:16",
															"nodeType": "YulIf",
															"src": "2525:119:16"
														},
														{
															"nativeSrc": "2654:117:16",
															"nodeType": "YulBlock",
															"src": "2654:117:16",
															"statements": [
																{
																	"nativeSrc": "2669:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:16",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:16"
																				},
																				"nativeSrc": "2729:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:16"
																		},
																		"nativeSrc": "2708:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:16",
															"nodeType": "YulBlock",
															"src": "2781:118:16",
															"statements": [
																{
																	"nativeSrc": "2796:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:16",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:16"
																				},
																				"nativeSrc": "2857:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:16"
																		},
																		"nativeSrc": "2836:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:16",
														"nodeType": "YulTypedName",
														"src": "2477:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:16",
														"nodeType": "YulTypedName",
														"src": "2488:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:16",
														"nodeType": "YulTypedName",
														"src": "2500:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:16",
														"nodeType": "YulTypedName",
														"src": "2508:6:16",
														"type": ""
													}
												],
												"src": "2432:474:16"
											},
											{
												"body": {
													"nativeSrc": "2954:48:16",
													"nodeType": "YulBlock",
													"src": "2954:48:16",
													"statements": [
														{
															"nativeSrc": "2964:32:16",
															"nodeType": "YulAssignment",
															"src": "2964:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:16"
																		},
																		"nativeSrc": "2982:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:16"
																},
																"nativeSrc": "2975:21:16",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:16",
														"nodeType": "YulTypedName",
														"src": "2936:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:16",
														"nodeType": "YulTypedName",
														"src": "2946:7:16",
														"type": ""
													}
												],
												"src": "2912:90:16"
											},
											{
												"body": {
													"nativeSrc": "3067:50:16",
													"nodeType": "YulBlock",
													"src": "3067:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:16"
																		},
																		"nativeSrc": "3089:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:16"
																},
																"nativeSrc": "3077:34:16",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:16"
															},
															"nativeSrc": "3077:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:16",
														"nodeType": "YulTypedName",
														"src": "3055:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:16",
														"nodeType": "YulTypedName",
														"src": "3062:3:16",
														"type": ""
													}
												],
												"src": "3008:109:16"
											},
											{
												"body": {
													"nativeSrc": "3215:118:16",
													"nodeType": "YulBlock",
													"src": "3215:118:16",
													"statements": [
														{
															"nativeSrc": "3225:26:16",
															"nodeType": "YulAssignment",
															"src": "3225:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:16"
																},
																"nativeSrc": "3233:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:16"
																		},
																		"nativeSrc": "3308:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:16"
																},
																"nativeSrc": "3261:65:16",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:16"
															},
															"nativeSrc": "3261:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:16",
														"nodeType": "YulTypedName",
														"src": "3187:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:16",
														"nodeType": "YulTypedName",
														"src": "3199:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:16",
														"nodeType": "YulTypedName",
														"src": "3210:4:16",
														"type": ""
													}
												],
												"src": "3123:210:16"
											},
											{
												"body": {
													"nativeSrc": "3404:53:16",
													"nodeType": "YulBlock",
													"src": "3404:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:16"
																		},
																		"nativeSrc": "3426:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:16"
																},
																"nativeSrc": "3414:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:16"
															},
															"nativeSrc": "3414:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:16",
														"nodeType": "YulTypedName",
														"src": "3392:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:16",
														"nodeType": "YulTypedName",
														"src": "3399:3:16",
														"type": ""
													}
												],
												"src": "3339:118:16"
											},
											{
												"body": {
													"nativeSrc": "3561:124:16",
													"nodeType": "YulBlock",
													"src": "3561:124:16",
													"statements": [
														{
															"nativeSrc": "3571:26:16",
															"nodeType": "YulAssignment",
															"src": "3571:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:16"
																},
																"nativeSrc": "3579:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:16"
																		},
																		"nativeSrc": "3660:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:16"
																},
																"nativeSrc": "3607:71:16",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:16"
															},
															"nativeSrc": "3607:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:16",
														"nodeType": "YulTypedName",
														"src": "3533:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:16",
														"nodeType": "YulTypedName",
														"src": "3545:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:16",
														"nodeType": "YulTypedName",
														"src": "3556:4:16",
														"type": ""
													}
												],
												"src": "3463:222:16"
											},
											{
												"body": {
													"nativeSrc": "3791:519:16",
													"nodeType": "YulBlock",
													"src": "3791:519:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:16",
																"nodeType": "YulBlock",
																"src": "3837:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:16"
																			},
																			"nativeSrc": "3839:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:16"
																		},
																		"nativeSrc": "3839:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:16"
																		},
																		"nativeSrc": "3808:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:16"
																},
																"nativeSrc": "3804:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:16"
															},
															"nativeSrc": "3801:119:16",
															"nodeType": "YulIf",
															"src": "3801:119:16"
														},
														{
															"nativeSrc": "3930:117:16",
															"nodeType": "YulBlock",
															"src": "3930:117:16",
															"statements": [
																{
																	"nativeSrc": "3945:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:16"
																				},
																				"nativeSrc": "4005:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:16"
																		},
																		"nativeSrc": "3984:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:16",
															"nodeType": "YulBlock",
															"src": "4057:118:16",
															"statements": [
																{
																	"nativeSrc": "4072:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:16"
																				},
																				"nativeSrc": "4133:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:16"
																		},
																		"nativeSrc": "4112:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:16",
															"nodeType": "YulBlock",
															"src": "4185:118:16",
															"statements": [
																{
																	"nativeSrc": "4200:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:16"
																				},
																				"nativeSrc": "4261:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:16"
																		},
																		"nativeSrc": "4240:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:16",
														"nodeType": "YulTypedName",
														"src": "3745:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:16",
														"nodeType": "YulTypedName",
														"src": "3756:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:16",
														"nodeType": "YulTypedName",
														"src": "3768:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:16",
														"nodeType": "YulTypedName",
														"src": "3776:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:16",
														"nodeType": "YulTypedName",
														"src": "3784:6:16",
														"type": ""
													}
												],
												"src": "3691:619:16"
											},
											{
												"body": {
													"nativeSrc": "4382:263:16",
													"nodeType": "YulBlock",
													"src": "4382:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4428:83:16",
																"nodeType": "YulBlock",
																"src": "4428:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4430:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:77:16"
																			},
																			"nativeSrc": "4430:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:79:16"
																		},
																		"nativeSrc": "4430:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4403:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4403:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4399:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4399:3:16"
																		},
																		"nativeSrc": "4399:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4399:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4395:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:16"
																},
																"nativeSrc": "4395:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4395:32:16"
															},
															"nativeSrc": "4392:119:16",
															"nodeType": "YulIf",
															"src": "4392:119:16"
														},
														{
															"nativeSrc": "4521:117:16",
															"nodeType": "YulBlock",
															"src": "4521:117:16",
															"statements": [
																{
																	"nativeSrc": "4536:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4536:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4550:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4540:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4540:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:16"
																				},
																				"nativeSrc": "4596:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4575:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:16"
																		},
																		"nativeSrc": "4575:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4565:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4316:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:16",
														"nodeType": "YulTypedName",
														"src": "4352:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4363:7:16",
														"nodeType": "YulTypedName",
														"src": "4363:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4375:6:16",
														"nodeType": "YulTypedName",
														"src": "4375:6:16",
														"type": ""
													}
												],
												"src": "4316:329:16"
											},
											{
												"body": {
													"nativeSrc": "4694:43:16",
													"nodeType": "YulBlock",
													"src": "4694:43:16",
													"statements": [
														{
															"nativeSrc": "4704:27:16",
															"nodeType": "YulAssignment",
															"src": "4704:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:16",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:16"
																},
																"nativeSrc": "4715:16:16",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:16",
														"nodeType": "YulTypedName",
														"src": "4676:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:16",
														"nodeType": "YulTypedName",
														"src": "4686:7:16",
														"type": ""
													}
												],
												"src": "4651:86:16"
											},
											{
												"body": {
													"nativeSrc": "4804:51:16",
													"nodeType": "YulBlock",
													"src": "4804:51:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:16",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:16"
																		},
																		"nativeSrc": "4826:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:16"
																},
																"nativeSrc": "4814:35:16",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:16"
															},
															"nativeSrc": "4814:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:16"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:16",
														"nodeType": "YulTypedName",
														"src": "4792:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:16",
														"nodeType": "YulTypedName",
														"src": "4799:3:16",
														"type": ""
													}
												],
												"src": "4743:112:16"
											},
											{
												"body": {
													"nativeSrc": "4955:120:16",
													"nodeType": "YulBlock",
													"src": "4955:120:16",
													"statements": [
														{
															"nativeSrc": "4965:26:16",
															"nodeType": "YulAssignment",
															"src": "4965:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:16"
																},
																"nativeSrc": "4973:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:16",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:16"
																		},
																		"nativeSrc": "5050:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:16",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:16"
																},
																"nativeSrc": "5001:67:16",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:16"
															},
															"nativeSrc": "5001:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:16",
														"nodeType": "YulTypedName",
														"src": "4927:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:16",
														"nodeType": "YulTypedName",
														"src": "4939:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:16",
														"nodeType": "YulTypedName",
														"src": "4950:4:16",
														"type": ""
													}
												],
												"src": "4861:214:16"
											},
											{
												"body": {
													"nativeSrc": "5136:53:16",
													"nodeType": "YulBlock",
													"src": "5136:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5153:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5153:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5176:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5176:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5158:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "5158:17:16"
																		},
																		"nativeSrc": "5158:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5158:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5146:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5146:6:16"
																},
																"nativeSrc": "5146:37:16",
																"nodeType": "YulFunctionCall",
																"src": "5146:37:16"
															},
															"nativeSrc": "5146:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "5146:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "5081:108:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5124:5:16",
														"nodeType": "YulTypedName",
														"src": "5124:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5131:3:16",
														"nodeType": "YulTypedName",
														"src": "5131:3:16",
														"type": ""
													}
												],
												"src": "5081:108:16"
											},
											{
												"body": {
													"nativeSrc": "5295:40:16",
													"nodeType": "YulBlock",
													"src": "5295:40:16",
													"statements": [
														{
															"nativeSrc": "5306:22:16",
															"nodeType": "YulAssignment",
															"src": "5306:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5322:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5322:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5316:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5316:5:16"
																},
																"nativeSrc": "5316:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5316:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5306:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5306:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5195:140:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5278:5:16",
														"nodeType": "YulTypedName",
														"src": "5278:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5288:6:16",
														"nodeType": "YulTypedName",
														"src": "5288:6:16",
														"type": ""
													}
												],
												"src": "5195:140:16"
											},
											{
												"body": {
													"nativeSrc": "5468:73:16",
													"nodeType": "YulBlock",
													"src": "5468:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5485:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5485:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5490:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5490:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5478:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5478:6:16"
																},
																"nativeSrc": "5478:19:16",
																"nodeType": "YulFunctionCall",
																"src": "5478:19:16"
															},
															"nativeSrc": "5478:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "5478:19:16"
														},
														{
															"nativeSrc": "5506:29:16",
															"nodeType": "YulAssignment",
															"src": "5506:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5525:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5525:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5530:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5530:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5521:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:16"
																},
																"nativeSrc": "5521:14:16",
																"nodeType": "YulFunctionCall",
																"src": "5521:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5506:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "5506:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5341:200:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5440:3:16",
														"nodeType": "YulTypedName",
														"src": "5440:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5445:6:16",
														"nodeType": "YulTypedName",
														"src": "5445:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5456:11:16",
														"nodeType": "YulTypedName",
														"src": "5456:11:16",
														"type": ""
													}
												],
												"src": "5341:200:16"
											},
											{
												"body": {
													"nativeSrc": "5645:60:16",
													"nodeType": "YulBlock",
													"src": "5645:60:16",
													"statements": [
														{
															"nativeSrc": "5655:11:16",
															"nodeType": "YulAssignment",
															"src": "5655:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "5663:3:16",
																"nodeType": "YulIdentifier",
																"src": "5663:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5655:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5655:4:16"
																}
															]
														},
														{
															"nativeSrc": "5676:22:16",
															"nodeType": "YulAssignment",
															"src": "5676:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5688:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5688:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5693:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5693:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5684:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:16"
																},
																"nativeSrc": "5684:14:16",
																"nodeType": "YulFunctionCall",
																"src": "5684:14:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5676:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5676:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5547:158:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5632:3:16",
														"nodeType": "YulTypedName",
														"src": "5632:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5640:4:16",
														"nodeType": "YulTypedName",
														"src": "5640:4:16",
														"type": ""
													}
												],
												"src": "5547:158:16"
											},
											{
												"body": {
													"nativeSrc": "5861:397:16",
													"nodeType": "YulBlock",
													"src": "5861:397:16",
													"statements": [
														{
															"nativeSrc": "5871:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5871:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5887:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5887:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5892:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5892:4:16",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5883:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5883:3:16"
																},
																"nativeSrc": "5883:14:16",
																"nodeType": "YulFunctionCall",
																"src": "5883:14:16"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5875:4:16",
																	"nodeType": "YulTypedName",
																	"src": "5875:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5907:167:16",
															"nodeType": "YulBlock",
															"src": "5907:167:16",
															"statements": [
																{
																	"nativeSrc": "5945:43:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5945:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5975:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5975:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5982:4:16",
																						"nodeType": "YulLiteral",
																						"src": "5982:4:16",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5971:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5971:3:16"
																				},
																				"nativeSrc": "5971:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5971:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5965:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5965:5:16"
																		},
																		"nativeSrc": "5965:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5965:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5949:12:16",
																			"nodeType": "YulTypedName",
																			"src": "5949:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6035:12:16",
																				"nodeType": "YulIdentifier",
																				"src": "6035:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6053:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "6053:3:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6058:4:16",
																						"nodeType": "YulLiteral",
																						"src": "6058:4:16",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6049:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6049:3:16"
																				},
																				"nativeSrc": "6049:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6049:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6001:33:16",
																			"nodeType": "YulIdentifier",
																			"src": "6001:33:16"
																		},
																		"nativeSrc": "6001:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6001:63:16"
																	},
																	"nativeSrc": "6001:63:16",
																	"nodeType": "YulExpressionStatement",
																	"src": "6001:63:16"
																}
															]
														},
														{
															"nativeSrc": "6084:167:16",
															"nodeType": "YulBlock",
															"src": "6084:167:16",
															"statements": [
																{
																	"nativeSrc": "6122:43:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6122:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6152:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6152:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6159:4:16",
																						"nodeType": "YulLiteral",
																						"src": "6159:4:16",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6148:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6148:3:16"
																				},
																				"nativeSrc": "6148:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6148:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6142:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6142:5:16"
																		},
																		"nativeSrc": "6142:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6142:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "6126:12:16",
																			"nodeType": "YulTypedName",
																			"src": "6126:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "6212:12:16",
																				"nodeType": "YulIdentifier",
																				"src": "6212:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6230:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "6230:3:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6235:4:16",
																						"nodeType": "YulLiteral",
																						"src": "6235:4:16",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6226:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6226:3:16"
																				},
																				"nativeSrc": "6226:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6226:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "6178:33:16",
																			"nodeType": "YulIdentifier",
																			"src": "6178:33:16"
																		},
																		"nativeSrc": "6178:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6178:63:16"
																	},
																	"nativeSrc": "6178:63:16",
																	"nodeType": "YulExpressionStatement",
																	"src": "6178:63:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr",
												"nativeSrc": "5753:505:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5848:5:16",
														"nodeType": "YulTypedName",
														"src": "5848:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5855:3:16",
														"nodeType": "YulTypedName",
														"src": "5855:3:16",
														"type": ""
													}
												],
												"src": "5753:505:16"
											},
											{
												"body": {
													"nativeSrc": "6396:151:16",
													"nodeType": "YulBlock",
													"src": "6396:151:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6492:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6492:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6500:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6500:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr",
																	"nativeSrc": "6406:85:16",
																	"nodeType": "YulIdentifier",
																	"src": "6406:85:16"
																},
																"nativeSrc": "6406:98:16",
																"nodeType": "YulFunctionCall",
																"src": "6406:98:16"
															},
															"nativeSrc": "6406:98:16",
															"nodeType": "YulExpressionStatement",
															"src": "6406:98:16"
														},
														{
															"nativeSrc": "6513:28:16",
															"nodeType": "YulAssignment",
															"src": "6513:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6531:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6531:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6536:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6536:4:16",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6527:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6527:3:16"
																},
																"nativeSrc": "6527:14:16",
																"nodeType": "YulFunctionCall",
																"src": "6527:14:16"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6513:10:16",
																	"nodeType": "YulIdentifier",
																	"src": "6513:10:16"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr",
												"nativeSrc": "6264:283:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6369:6:16",
														"nodeType": "YulTypedName",
														"src": "6369:6:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6377:3:16",
														"nodeType": "YulTypedName",
														"src": "6377:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6385:10:16",
														"nodeType": "YulTypedName",
														"src": "6385:10:16",
														"type": ""
													}
												],
												"src": "6264:283:16"
											},
											{
												"body": {
													"nativeSrc": "6654:38:16",
													"nodeType": "YulBlock",
													"src": "6654:38:16",
													"statements": [
														{
															"nativeSrc": "6664:22:16",
															"nodeType": "YulAssignment",
															"src": "6664:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6676:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6676:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6681:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6681:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6672:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6672:3:16"
																},
																"nativeSrc": "6672:14:16",
																"nodeType": "YulFunctionCall",
																"src": "6672:14:16"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6664:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6664:4:16"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6553:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6641:3:16",
														"nodeType": "YulTypedName",
														"src": "6641:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6649:4:16",
														"nodeType": "YulTypedName",
														"src": "6649:4:16",
														"type": ""
													}
												],
												"src": "6553:139:16"
											},
											{
												"body": {
													"nativeSrc": "6910:754:16",
													"nodeType": "YulBlock",
													"src": "6910:754:16",
													"statements": [
														{
															"nativeSrc": "6920:94:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6920:94:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7008:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "7008:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "6934:73:16",
																	"nodeType": "YulIdentifier",
																	"src": "6934:73:16"
																},
																"nativeSrc": "6934:80:16",
																"nodeType": "YulFunctionCall",
																"src": "6934:80:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6924:6:16",
																	"nodeType": "YulTypedName",
																	"src": "6924:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7023:109:16",
															"nodeType": "YulAssignment",
															"src": "7023:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7120:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7120:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7125:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7125:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7030:89:16",
																	"nodeType": "YulIdentifier",
																	"src": "7030:89:16"
																},
																"nativeSrc": "7030:102:16",
																"nodeType": "YulFunctionCall",
																"src": "7030:102:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7023:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7023:3:16"
																}
															]
														},
														{
															"nativeSrc": "7141:97:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7141:97:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7232:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "7232:5:16"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7156:75:16",
																	"nodeType": "YulIdentifier",
																	"src": "7156:75:16"
																},
																"nativeSrc": "7156:82:16",
																"nodeType": "YulFunctionCall",
																"src": "7156:82:16"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7145:7:16",
																	"nodeType": "YulTypedName",
																	"src": "7145:7:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7247:21:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7247:21:16",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7261:7:16",
																"nodeType": "YulIdentifier",
																"src": "7261:7:16"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7251:6:16",
																	"nodeType": "YulTypedName",
																	"src": "7251:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7337:302:16",
																"nodeType": "YulBlock",
																"src": "7337:302:16",
																"statements": [
																	{
																		"nativeSrc": "7351:34:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7351:34:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7378:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "7378:6:16"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7372:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "7372:5:16"
																			},
																			"nativeSrc": "7372:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7372:13:16"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7355:13:16",
																				"nodeType": "YulTypedName",
																				"src": "7355:13:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7398:122:16",
																		"nodeType": "YulAssignment",
																		"src": "7398:122:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7501:13:16",
																					"nodeType": "YulIdentifier",
																					"src": "7501:13:16"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7516:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7516:3:16"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr",
																				"nativeSrc": "7405:95:16",
																				"nodeType": "YulIdentifier",
																				"src": "7405:95:16"
																			},
																			"nativeSrc": "7405:115:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7405:115:16"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7398:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "7398:3:16"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7533:96:16",
																		"nodeType": "YulAssignment",
																		"src": "7533:96:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7622:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "7622:6:16"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "7543:78:16",
																				"nodeType": "YulIdentifier",
																				"src": "7543:78:16"
																			},
																			"nativeSrc": "7543:86:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7543:86:16"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7533:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7533:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7299:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7302:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7302:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7296:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7296:2:16"
																},
																"nativeSrc": "7296:13:16",
																"nodeType": "YulFunctionCall",
																"src": "7296:13:16"
															},
															"nativeSrc": "7277:362:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7310:18:16",
																"nodeType": "YulBlock",
																"src": "7310:18:16",
																"statements": [
																	{
																		"nativeSrc": "7312:14:16",
																		"nodeType": "YulAssignment",
																		"src": "7312:14:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7321:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "7321:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7324:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7324:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7317:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "7317:3:16"
																			},
																			"nativeSrc": "7317:9:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7317:9:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7312:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "7312:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7281:14:16",
																"nodeType": "YulBlock",
																"src": "7281:14:16",
																"statements": [
																	{
																		"nativeSrc": "7283:10:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7283:10:16",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7292:1:16",
																			"nodeType": "YulLiteral",
																			"src": "7292:1:16",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7287:1:16",
																				"nodeType": "YulTypedName",
																				"src": "7287:1:16",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7277:362:16"
														},
														{
															"nativeSrc": "7648:10:16",
															"nodeType": "YulAssignment",
															"src": "7648:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "7655:3:16",
																"nodeType": "YulIdentifier",
																"src": "7655:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7648:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7648:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6744:920:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6889:5:16",
														"nodeType": "YulTypedName",
														"src": "6889:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6896:3:16",
														"nodeType": "YulTypedName",
														"src": "6896:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6905:3:16",
														"nodeType": "YulTypedName",
														"src": "6905:3:16",
														"type": ""
													}
												],
												"src": "6744:920:16"
											},
											{
												"body": {
													"nativeSrc": "7834:748:16",
													"nodeType": "YulBlock",
													"src": "7834:748:16",
													"statements": [
														{
															"nativeSrc": "7844:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7844:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7860:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7860:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7865:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7865:4:16",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7856:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7856:3:16"
																},
																"nativeSrc": "7856:14:16",
																"nodeType": "YulFunctionCall",
																"src": "7856:14:16"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "7848:4:16",
																	"nodeType": "YulTypedName",
																	"src": "7848:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7880:169:16",
															"nodeType": "YulBlock",
															"src": "7880:169:16",
															"statements": [
																{
																	"nativeSrc": "7920:43:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7920:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7950:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "7950:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7957:4:16",
																						"nodeType": "YulLiteral",
																						"src": "7957:4:16",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7946:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7946:3:16"
																				},
																				"nativeSrc": "7946:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7946:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7940:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "7940:5:16"
																		},
																		"nativeSrc": "7940:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7940:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7924:12:16",
																			"nodeType": "YulTypedName",
																			"src": "7924:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8010:12:16",
																				"nodeType": "YulIdentifier",
																				"src": "8010:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8028:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "8028:3:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8033:4:16",
																						"nodeType": "YulLiteral",
																						"src": "8033:4:16",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8024:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8024:3:16"
																				},
																				"nativeSrc": "8024:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8024:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7976:33:16",
																			"nodeType": "YulIdentifier",
																			"src": "7976:33:16"
																		},
																		"nativeSrc": "7976:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7976:63:16"
																	},
																	"nativeSrc": "7976:63:16",
																	"nodeType": "YulExpressionStatement",
																	"src": "7976:63:16"
																}
															]
														},
														{
															"nativeSrc": "8059:165:16",
															"nodeType": "YulBlock",
															"src": "8059:165:16",
															"statements": [
																{
																	"nativeSrc": "8095:43:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8095:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8125:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "8125:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8132:4:16",
																						"nodeType": "YulLiteral",
																						"src": "8132:4:16",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8121:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8121:3:16"
																				},
																				"nativeSrc": "8121:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8121:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8115:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "8115:5:16"
																		},
																		"nativeSrc": "8115:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8115:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8099:12:16",
																			"nodeType": "YulTypedName",
																			"src": "8099:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8185:12:16",
																				"nodeType": "YulIdentifier",
																				"src": "8185:12:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8203:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "8203:3:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8208:4:16",
																						"nodeType": "YulLiteral",
																						"src": "8208:4:16",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8199:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8199:3:16"
																				},
																				"nativeSrc": "8199:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8199:14:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8151:33:16",
																			"nodeType": "YulIdentifier",
																			"src": "8151:33:16"
																		},
																		"nativeSrc": "8151:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8151:63:16"
																	},
																	"nativeSrc": "8151:63:16",
																	"nodeType": "YulExpressionStatement",
																	"src": "8151:63:16"
																}
															]
														},
														{
															"nativeSrc": "8234:321:16",
															"nodeType": "YulBlock",
															"src": "8234:321:16",
															"statements": [
																{
																	"nativeSrc": "8273:43:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8273:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8303:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "8303:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8310:4:16",
																						"nodeType": "YulLiteral",
																						"src": "8310:4:16",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8299:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8299:3:16"
																				},
																				"nativeSrc": "8299:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8299:16:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8293:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "8293:5:16"
																		},
																		"nativeSrc": "8293:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8293:23:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8277:12:16",
																			"nodeType": "YulTypedName",
																			"src": "8277:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8341:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "8341:3:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8346:4:16",
																						"nodeType": "YulLiteral",
																						"src": "8346:4:16",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8337:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8337:3:16"
																				},
																				"nativeSrc": "8337:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8337:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "8357:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "8357:4:16"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "8363:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "8363:3:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8353:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8353:3:16"
																				},
																				"nativeSrc": "8353:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8353:14:16"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "8330:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8330:6:16"
																		},
																		"nativeSrc": "8330:38:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8330:38:16"
																	},
																	"nativeSrc": "8330:38:16",
																	"nodeType": "YulExpressionStatement",
																	"src": "8330:38:16"
																},
																{
																	"nativeSrc": "8381:163:16",
																	"nodeType": "YulAssignment",
																	"src": "8381:163:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8525:12:16",
																				"nodeType": "YulIdentifier",
																				"src": "8525:12:16"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "8539:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "8539:4:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "8389:135:16",
																			"nodeType": "YulIdentifier",
																			"src": "8389:135:16"
																		},
																		"nativeSrc": "8389:155:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8389:155:16"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "8381:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "8381:4:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8565:11:16",
															"nodeType": "YulAssignment",
															"src": "8565:11:16",
															"value": {
																"name": "tail",
																"nativeSrc": "8572:4:16",
																"nodeType": "YulIdentifier",
																"src": "8572:4:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8565:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8565:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Vesting_$1057_memory_ptr_to_t_struct$_Vesting_$1057_memory_ptr_fromStack",
												"nativeSrc": "7710:872:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7813:5:16",
														"nodeType": "YulTypedName",
														"src": "7813:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7820:3:16",
														"nodeType": "YulTypedName",
														"src": "7820:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7829:3:16",
														"nodeType": "YulTypedName",
														"src": "7829:3:16",
														"type": ""
													}
												],
												"src": "7710:872:16"
											},
											{
												"body": {
													"nativeSrc": "8736:225:16",
													"nodeType": "YulBlock",
													"src": "8736:225:16",
													"statements": [
														{
															"nativeSrc": "8746:26:16",
															"nodeType": "YulAssignment",
															"src": "8746:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8758:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8758:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8769:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8769:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8754:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8754:3:16"
																},
																"nativeSrc": "8754:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8754:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8746:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8746:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8793:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8793:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8804:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8804:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8789:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8789:3:16"
																		},
																		"nativeSrc": "8789:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8789:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8812:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "8812:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8818:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8818:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:16"
																		},
																		"nativeSrc": "8808:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8808:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8782:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:16"
																},
																"nativeSrc": "8782:47:16",
																"nodeType": "YulFunctionCall",
																"src": "8782:47:16"
															},
															"nativeSrc": "8782:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "8782:47:16"
														},
														{
															"nativeSrc": "8838:116:16",
															"nodeType": "YulAssignment",
															"src": "8838:116:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8940:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8940:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8949:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "8949:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Vesting_$1057_memory_ptr_to_t_struct$_Vesting_$1057_memory_ptr_fromStack",
																	"nativeSrc": "8846:93:16",
																	"nodeType": "YulIdentifier",
																	"src": "8846:93:16"
																},
																"nativeSrc": "8846:108:16",
																"nodeType": "YulFunctionCall",
																"src": "8846:108:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8838:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8838:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Vesting_$1057_memory_ptr__to_t_struct$_Vesting_$1057_memory_ptr__fromStack_reversed",
												"nativeSrc": "8588:373:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8708:9:16",
														"nodeType": "YulTypedName",
														"src": "8708:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8720:6:16",
														"nodeType": "YulTypedName",
														"src": "8720:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8731:4:16",
														"nodeType": "YulTypedName",
														"src": "8731:4:16",
														"type": ""
													}
												],
												"src": "8588:373:16"
											},
											{
												"body": {
													"nativeSrc": "9056:28:16",
													"nodeType": "YulBlock",
													"src": "9056:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9073:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9073:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9076:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9076:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9066:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9066:6:16"
																},
																"nativeSrc": "9066:12:16",
																"nodeType": "YulFunctionCall",
																"src": "9066:12:16"
															},
															"nativeSrc": "9066:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "9066:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "8967:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "8967:117:16"
											},
											{
												"body": {
													"nativeSrc": "9179:28:16",
													"nodeType": "YulBlock",
													"src": "9179:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9196:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9196:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9199:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9199:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9189:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9189:6:16"
																},
																"nativeSrc": "9189:12:16",
																"nodeType": "YulFunctionCall",
																"src": "9189:12:16"
															},
															"nativeSrc": "9189:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "9189:12:16"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "9090:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "9090:117:16"
											},
											{
												"body": {
													"nativeSrc": "9302:28:16",
													"nodeType": "YulBlock",
													"src": "9302:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9319:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9319:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9322:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9322:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9312:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:16"
																},
																"nativeSrc": "9312:12:16",
																"nodeType": "YulFunctionCall",
																"src": "9312:12:16"
															},
															"nativeSrc": "9312:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "9312:12:16"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "9213:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "9213:117:16"
											},
											{
												"body": {
													"nativeSrc": "9479:478:16",
													"nodeType": "YulBlock",
													"src": "9479:478:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9528:83:16",
																"nodeType": "YulBlock",
																"src": "9528:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9530:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9530:77:16"
																			},
																			"nativeSrc": "9530:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9530:79:16"
																		},
																		"nativeSrc": "9530:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9530:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9507:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9507:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9515:4:16",
																						"nodeType": "YulLiteral",
																						"src": "9515:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9503:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9503:3:16"
																				},
																				"nativeSrc": "9503:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9503:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9522:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "9522:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9499:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9499:3:16"
																		},
																		"nativeSrc": "9499:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9499:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9492:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9492:6:16"
																},
																"nativeSrc": "9492:35:16",
																"nodeType": "YulFunctionCall",
																"src": "9492:35:16"
															},
															"nativeSrc": "9489:122:16",
															"nodeType": "YulIf",
															"src": "9489:122:16"
														},
														{
															"nativeSrc": "9620:30:16",
															"nodeType": "YulAssignment",
															"src": "9620:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9643:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9643:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9630:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "9630:12:16"
																},
																"nativeSrc": "9630:20:16",
																"nodeType": "YulFunctionCall",
																"src": "9630:20:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9620:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9620:6:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9693:83:16",
																"nodeType": "YulBlock",
																"src": "9693:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "9695:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9695:77:16"
																			},
																			"nativeSrc": "9695:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9695:79:16"
																		},
																		"nativeSrc": "9695:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9695:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9665:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9665:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9673:18:16",
																		"nodeType": "YulLiteral",
																		"src": "9673:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9662:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "9662:2:16"
																},
																"nativeSrc": "9662:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9662:30:16"
															},
															"nativeSrc": "9659:117:16",
															"nodeType": "YulIf",
															"src": "9659:117:16"
														},
														{
															"nativeSrc": "9785:29:16",
															"nodeType": "YulAssignment",
															"src": "9785:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9801:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9801:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9809:4:16",
																		"nodeType": "YulLiteral",
																		"src": "9809:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9797:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9797:3:16"
																},
																"nativeSrc": "9797:17:16",
																"nodeType": "YulFunctionCall",
																"src": "9797:17:16"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "9785:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "9785:8:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9868:83:16",
																"nodeType": "YulBlock",
																"src": "9868:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9870:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9870:77:16"
																			},
																			"nativeSrc": "9870:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9870:79:16"
																		},
																		"nativeSrc": "9870:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9870:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "9833:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "9833:8:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "9847:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9847:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9855:4:16",
																						"nodeType": "YulLiteral",
																						"src": "9855:4:16",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9843:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9843:3:16"
																				},
																				"nativeSrc": "9843:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9843:17:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9829:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9829:3:16"
																		},
																		"nativeSrc": "9829:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9829:32:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9863:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9863:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9826:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "9826:2:16"
																},
																"nativeSrc": "9826:41:16",
																"nodeType": "YulFunctionCall",
																"src": "9826:41:16"
															},
															"nativeSrc": "9823:128:16",
															"nodeType": "YulIf",
															"src": "9823:128:16"
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "9361:596:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9446:6:16",
														"nodeType": "YulTypedName",
														"src": "9446:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9454:3:16",
														"nodeType": "YulTypedName",
														"src": "9454:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "9462:8:16",
														"nodeType": "YulTypedName",
														"src": "9462:8:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9472:6:16",
														"nodeType": "YulTypedName",
														"src": "9472:6:16",
														"type": ""
													}
												],
												"src": "9361:596:16"
											},
											{
												"body": {
													"nativeSrc": "10126:742:16",
													"nodeType": "YulBlock",
													"src": "10126:742:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10172:83:16",
																"nodeType": "YulBlock",
																"src": "10172:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10174:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10174:77:16"
																			},
																			"nativeSrc": "10174:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10174:79:16"
																		},
																		"nativeSrc": "10174:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10174:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10147:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "10147:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10156:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10156:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10143:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10143:3:16"
																		},
																		"nativeSrc": "10143:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10143:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10168:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10168:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10139:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10139:3:16"
																},
																"nativeSrc": "10139:32:16",
																"nodeType": "YulFunctionCall",
																"src": "10139:32:16"
															},
															"nativeSrc": "10136:119:16",
															"nodeType": "YulIf",
															"src": "10136:119:16"
														},
														{
															"nativeSrc": "10265:117:16",
															"nodeType": "YulBlock",
															"src": "10265:117:16",
															"statements": [
																{
																	"nativeSrc": "10280:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10280:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10294:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10294:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10284:6:16",
																			"nodeType": "YulTypedName",
																			"src": "10284:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10309:63:16",
																	"nodeType": "YulAssignment",
																	"src": "10309:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10344:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "10344:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10355:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10355:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10340:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10340:3:16"
																				},
																				"nativeSrc": "10340:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10340:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10364:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "10364:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10319:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "10319:20:16"
																		},
																		"nativeSrc": "10319:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10319:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10309:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "10309:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10392:118:16",
															"nodeType": "YulBlock",
															"src": "10392:118:16",
															"statements": [
																{
																	"nativeSrc": "10407:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10407:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10421:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10421:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10411:6:16",
																			"nodeType": "YulTypedName",
																			"src": "10411:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10437:63:16",
																	"nodeType": "YulAssignment",
																	"src": "10437:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10472:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "10472:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10483:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10483:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10468:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10468:3:16"
																				},
																				"nativeSrc": "10468:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10468:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10492:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "10492:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10447:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "10447:20:16"
																		},
																		"nativeSrc": "10447:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10447:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10437:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "10437:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10520:341:16",
															"nodeType": "YulBlock",
															"src": "10520:341:16",
															"statements": [
																{
																	"nativeSrc": "10535:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10535:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10566:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "10566:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10577:2:16",
																						"nodeType": "YulLiteral",
																						"src": "10577:2:16",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10562:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10562:3:16"
																				},
																				"nativeSrc": "10562:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10562:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10549:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "10549:12:16"
																		},
																		"nativeSrc": "10549:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10549:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10539:6:16",
																			"nodeType": "YulTypedName",
																			"src": "10539:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10628:83:16",
																		"nodeType": "YulBlock",
																		"src": "10628:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10630:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "10630:77:16"
																					},
																					"nativeSrc": "10630:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "10630:79:16"
																				},
																				"nativeSrc": "10630:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "10630:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10600:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10600:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10608:18:16",
																				"nodeType": "YulLiteral",
																				"src": "10608:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10597:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "10597:2:16"
																		},
																		"nativeSrc": "10597:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10597:30:16"
																	},
																	"nativeSrc": "10594:117:16",
																	"nodeType": "YulIf",
																	"src": "10594:117:16"
																},
																{
																	"nativeSrc": "10725:126:16",
																	"nodeType": "YulAssignment",
																	"src": "10725:126:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10823:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "10823:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10834:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10834:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10819:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10819:3:16"
																				},
																				"nativeSrc": "10819:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10819:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10843:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "10843:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
																			"nativeSrc": "10743:75:16",
																			"nodeType": "YulIdentifier",
																			"src": "10743:75:16"
																		},
																		"nativeSrc": "10743:108:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10743:108:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10725:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "10725:6:16"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "10733:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "10733:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "9963:905:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10072:9:16",
														"nodeType": "YulTypedName",
														"src": "10072:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10083:7:16",
														"nodeType": "YulTypedName",
														"src": "10083:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10095:6:16",
														"nodeType": "YulTypedName",
														"src": "10095:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10103:6:16",
														"nodeType": "YulTypedName",
														"src": "10103:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10111:6:16",
														"nodeType": "YulTypedName",
														"src": "10111:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10119:6:16",
														"nodeType": "YulTypedName",
														"src": "10119:6:16",
														"type": ""
													}
												],
												"src": "9963:905:16"
											},
											{
												"body": {
													"nativeSrc": "10963:478:16",
													"nodeType": "YulBlock",
													"src": "10963:478:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11012:83:16",
																"nodeType": "YulBlock",
																"src": "11012:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11014:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11014:77:16"
																			},
																			"nativeSrc": "11014:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11014:79:16"
																		},
																		"nativeSrc": "11014:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11014:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10991:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10991:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10999:4:16",
																						"nodeType": "YulLiteral",
																						"src": "10999:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10987:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10987:3:16"
																				},
																				"nativeSrc": "10987:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10987:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11006:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "11006:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10983:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10983:3:16"
																		},
																		"nativeSrc": "10983:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10983:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10976:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10976:6:16"
																},
																"nativeSrc": "10976:35:16",
																"nodeType": "YulFunctionCall",
																"src": "10976:35:16"
															},
															"nativeSrc": "10973:122:16",
															"nodeType": "YulIf",
															"src": "10973:122:16"
														},
														{
															"nativeSrc": "11104:30:16",
															"nodeType": "YulAssignment",
															"src": "11104:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11127:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11127:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11114:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "11114:12:16"
																},
																"nativeSrc": "11114:20:16",
																"nodeType": "YulFunctionCall",
																"src": "11114:20:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11104:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11104:6:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11177:83:16",
																"nodeType": "YulBlock",
																"src": "11177:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "11179:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11179:77:16"
																			},
																			"nativeSrc": "11179:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11179:79:16"
																		},
																		"nativeSrc": "11179:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11179:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11149:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11149:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11157:18:16",
																		"nodeType": "YulLiteral",
																		"src": "11157:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11146:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "11146:2:16"
																},
																"nativeSrc": "11146:30:16",
																"nodeType": "YulFunctionCall",
																"src": "11146:30:16"
															},
															"nativeSrc": "11143:117:16",
															"nodeType": "YulIf",
															"src": "11143:117:16"
														},
														{
															"nativeSrc": "11269:29:16",
															"nodeType": "YulAssignment",
															"src": "11269:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11285:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11285:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11293:4:16",
																		"nodeType": "YulLiteral",
																		"src": "11293:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11281:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:16"
																},
																"nativeSrc": "11281:17:16",
																"nodeType": "YulFunctionCall",
																"src": "11281:17:16"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "11269:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "11269:8:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11352:83:16",
																"nodeType": "YulBlock",
																"src": "11352:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11354:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11354:77:16"
																			},
																			"nativeSrc": "11354:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11354:79:16"
																		},
																		"nativeSrc": "11354:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11354:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "11317:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "11317:8:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "11331:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11331:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11339:4:16",
																						"nodeType": "YulLiteral",
																						"src": "11339:4:16",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11327:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11327:3:16"
																				},
																				"nativeSrc": "11327:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11327:17:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11313:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11313:3:16"
																		},
																		"nativeSrc": "11313:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11313:32:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11347:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11347:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11310:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "11310:2:16"
																},
																"nativeSrc": "11310:41:16",
																"nodeType": "YulFunctionCall",
																"src": "11310:41:16"
															},
															"nativeSrc": "11307:128:16",
															"nodeType": "YulIf",
															"src": "11307:128:16"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "10888:553:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10930:6:16",
														"nodeType": "YulTypedName",
														"src": "10930:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10938:3:16",
														"nodeType": "YulTypedName",
														"src": "10938:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "10946:8:16",
														"nodeType": "YulTypedName",
														"src": "10946:8:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10956:6:16",
														"nodeType": "YulTypedName",
														"src": "10956:6:16",
														"type": ""
													}
												],
												"src": "10888:553:16"
											},
											{
												"body": {
													"nativeSrc": "11604:1008:16",
													"nodeType": "YulBlock",
													"src": "11604:1008:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11651:83:16",
																"nodeType": "YulBlock",
																"src": "11651:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11653:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11653:77:16"
																			},
																			"nativeSrc": "11653:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11653:79:16"
																		},
																		"nativeSrc": "11653:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11653:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11625:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11625:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11634:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11634:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11621:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11621:3:16"
																		},
																		"nativeSrc": "11621:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11621:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11646:3:16",
																		"nodeType": "YulLiteral",
																		"src": "11646:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11617:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11617:3:16"
																},
																"nativeSrc": "11617:33:16",
																"nodeType": "YulFunctionCall",
																"src": "11617:33:16"
															},
															"nativeSrc": "11614:120:16",
															"nodeType": "YulIf",
															"src": "11614:120:16"
														},
														{
															"nativeSrc": "11744:297:16",
															"nodeType": "YulBlock",
															"src": "11744:297:16",
															"statements": [
																{
																	"nativeSrc": "11759:45:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11759:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11790:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11790:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11801:1:16",
																						"nodeType": "YulLiteral",
																						"src": "11801:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11786:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11786:3:16"
																				},
																				"nativeSrc": "11786:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11786:17:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11773:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "11773:12:16"
																		},
																		"nativeSrc": "11773:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11773:31:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11763:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11763:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11851:83:16",
																		"nodeType": "YulBlock",
																		"src": "11851:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11853:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "11853:77:16"
																					},
																					"nativeSrc": "11853:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "11853:79:16"
																				},
																				"nativeSrc": "11853:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "11853:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11823:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11823:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11831:18:16",
																				"nodeType": "YulLiteral",
																				"src": "11831:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11820:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "11820:2:16"
																		},
																		"nativeSrc": "11820:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11820:30:16"
																	},
																	"nativeSrc": "11817:117:16",
																	"nodeType": "YulIf",
																	"src": "11817:117:16"
																},
																{
																	"nativeSrc": "11948:83:16",
																	"nodeType": "YulAssignment",
																	"src": "11948:83:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12003:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12003:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12014:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12014:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11999:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11999:3:16"
																				},
																				"nativeSrc": "11999:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11999:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12023:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12023:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "11966:32:16",
																			"nodeType": "YulIdentifier",
																			"src": "11966:32:16"
																		},
																		"nativeSrc": "11966:65:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11966:65:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11948:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11948:6:16"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "11956:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11956:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12051:298:16",
															"nodeType": "YulBlock",
															"src": "12051:298:16",
															"statements": [
																{
																	"nativeSrc": "12066:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12066:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12097:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12097:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12108:2:16",
																						"nodeType": "YulLiteral",
																						"src": "12108:2:16",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12093:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12093:3:16"
																				},
																				"nativeSrc": "12093:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12093:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12080:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "12080:12:16"
																		},
																		"nativeSrc": "12080:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12080:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12070:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12070:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12159:83:16",
																		"nodeType": "YulBlock",
																		"src": "12159:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12161:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "12161:77:16"
																					},
																					"nativeSrc": "12161:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "12161:79:16"
																				},
																				"nativeSrc": "12161:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "12161:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12131:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12131:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12139:18:16",
																				"nodeType": "YulLiteral",
																				"src": "12139:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12128:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "12128:2:16"
																		},
																		"nativeSrc": "12128:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12128:30:16"
																	},
																	"nativeSrc": "12125:117:16",
																	"nodeType": "YulIf",
																	"src": "12125:117:16"
																},
																{
																	"nativeSrc": "12256:83:16",
																	"nodeType": "YulAssignment",
																	"src": "12256:83:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12311:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12311:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12322:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12322:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12307:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12307:3:16"
																				},
																				"nativeSrc": "12307:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12307:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12331:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12331:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "12274:32:16",
																			"nodeType": "YulIdentifier",
																			"src": "12274:32:16"
																		},
																		"nativeSrc": "12274:65:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12274:65:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12256:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12256:6:16"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "12264:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12264:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12359:118:16",
															"nodeType": "YulBlock",
															"src": "12359:118:16",
															"statements": [
																{
																	"nativeSrc": "12374:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12374:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12388:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12388:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12378:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12378:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12404:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12404:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12439:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12439:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12450:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12450:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12435:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12435:3:16"
																				},
																				"nativeSrc": "12435:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12435:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12459:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12459:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12414:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12414:20:16"
																		},
																		"nativeSrc": "12414:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12414:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "12404:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12404:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12487:118:16",
															"nodeType": "YulBlock",
															"src": "12487:118:16",
															"statements": [
																{
																	"nativeSrc": "12502:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12502:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12516:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12516:2:16",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12506:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12506:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12532:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12532:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12567:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12567:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12578:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12578:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12563:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12563:3:16"
																				},
																				"nativeSrc": "12563:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12563:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12587:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12587:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12542:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12542:20:16"
																		},
																		"nativeSrc": "12542:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12542:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "12532:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12532:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_addresst_address",
												"nativeSrc": "11447:1165:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11534:9:16",
														"nodeType": "YulTypedName",
														"src": "11534:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11545:7:16",
														"nodeType": "YulTypedName",
														"src": "11545:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11557:6:16",
														"nodeType": "YulTypedName",
														"src": "11557:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11565:6:16",
														"nodeType": "YulTypedName",
														"src": "11565:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11573:6:16",
														"nodeType": "YulTypedName",
														"src": "11573:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11581:6:16",
														"nodeType": "YulTypedName",
														"src": "11581:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11589:6:16",
														"nodeType": "YulTypedName",
														"src": "11589:6:16",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "11597:6:16",
														"nodeType": "YulTypedName",
														"src": "11597:6:16",
														"type": ""
													}
												],
												"src": "11447:1165:16"
											},
											{
												"body": {
													"nativeSrc": "12701:391:16",
													"nodeType": "YulBlock",
													"src": "12701:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "12747:83:16",
																"nodeType": "YulBlock",
																"src": "12747:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12749:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "12749:77:16"
																			},
																			"nativeSrc": "12749:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12749:79:16"
																		},
																		"nativeSrc": "12749:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12749:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12722:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12722:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12731:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12731:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12718:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12718:3:16"
																		},
																		"nativeSrc": "12718:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12718:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12743:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12743:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12714:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12714:3:16"
																},
																"nativeSrc": "12714:32:16",
																"nodeType": "YulFunctionCall",
																"src": "12714:32:16"
															},
															"nativeSrc": "12711:119:16",
															"nodeType": "YulIf",
															"src": "12711:119:16"
														},
														{
															"nativeSrc": "12840:117:16",
															"nodeType": "YulBlock",
															"src": "12840:117:16",
															"statements": [
																{
																	"nativeSrc": "12855:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12855:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12869:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12869:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12859:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12859:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12884:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12884:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12919:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12919:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12930:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12930:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12915:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12915:3:16"
																				},
																				"nativeSrc": "12915:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12915:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12939:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12939:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12894:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12894:20:16"
																		},
																		"nativeSrc": "12894:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12894:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12884:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12884:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12967:118:16",
															"nodeType": "YulBlock",
															"src": "12967:118:16",
															"statements": [
																{
																	"nativeSrc": "12982:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12982:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12996:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12996:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12986:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12986:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13012:63:16",
																	"nodeType": "YulAssignment",
																	"src": "13012:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13047:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "13047:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13058:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "13058:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13043:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "13043:3:16"
																				},
																				"nativeSrc": "13043:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "13043:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13067:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "13067:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13022:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "13022:20:16"
																		},
																		"nativeSrc": "13022:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13022:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13012:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "13012:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12618:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12663:9:16",
														"nodeType": "YulTypedName",
														"src": "12663:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12674:7:16",
														"nodeType": "YulTypedName",
														"src": "12674:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12686:6:16",
														"nodeType": "YulTypedName",
														"src": "12686:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12694:6:16",
														"nodeType": "YulTypedName",
														"src": "12694:6:16",
														"type": ""
													}
												],
												"src": "12618:474:16"
											},
											{
												"body": {
													"nativeSrc": "13126:152:16",
													"nodeType": "YulBlock",
													"src": "13126:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13143:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13143:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13146:77:16",
																		"nodeType": "YulLiteral",
																		"src": "13146:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13136:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13136:6:16"
																},
																"nativeSrc": "13136:88:16",
																"nodeType": "YulFunctionCall",
																"src": "13136:88:16"
															},
															"nativeSrc": "13136:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "13136:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13240:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13240:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13243:4:16",
																		"nodeType": "YulLiteral",
																		"src": "13243:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13233:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13233:6:16"
																},
																"nativeSrc": "13233:15:16",
																"nodeType": "YulFunctionCall",
																"src": "13233:15:16"
															},
															"nativeSrc": "13233:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "13233:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13264:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13264:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13267:4:16",
																		"nodeType": "YulLiteral",
																		"src": "13267:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13257:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13257:6:16"
																},
																"nativeSrc": "13257:15:16",
																"nodeType": "YulFunctionCall",
																"src": "13257:15:16"
															},
															"nativeSrc": "13257:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "13257:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13098:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "13098:180:16"
											},
											{
												"body": {
													"nativeSrc": "13335:269:16",
													"nodeType": "YulBlock",
													"src": "13335:269:16",
													"statements": [
														{
															"nativeSrc": "13345:22:16",
															"nodeType": "YulAssignment",
															"src": "13345:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13359:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13359:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13365:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13365:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13355:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13355:3:16"
																},
																"nativeSrc": "13355:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13355:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13345:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13345:6:16"
																}
															]
														},
														{
															"nativeSrc": "13376:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "13376:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13406:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13406:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13412:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13412:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13402:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13402:3:16"
																},
																"nativeSrc": "13402:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13402:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13380:18:16",
																	"nodeType": "YulTypedName",
																	"src": "13380:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13453:51:16",
																"nodeType": "YulBlock",
																"src": "13453:51:16",
																"statements": [
																	{
																		"nativeSrc": "13467:27:16",
																		"nodeType": "YulAssignment",
																		"src": "13467:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13481:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "13481:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13489:4:16",
																					"nodeType": "YulLiteral",
																					"src": "13489:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13477:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13477:3:16"
																			},
																			"nativeSrc": "13477:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13477:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13467:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13467:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13433:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "13433:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13426:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13426:6:16"
																},
																"nativeSrc": "13426:26:16",
																"nodeType": "YulFunctionCall",
																"src": "13426:26:16"
															},
															"nativeSrc": "13423:81:16",
															"nodeType": "YulIf",
															"src": "13423:81:16"
														},
														{
															"body": {
																"nativeSrc": "13556:42:16",
																"nodeType": "YulBlock",
																"src": "13556:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13570:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "13570:16:16"
																			},
																			"nativeSrc": "13570:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13570:18:16"
																		},
																		"nativeSrc": "13570:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13570:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13520:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "13520:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13543:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13543:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13551:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13551:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13540:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "13540:2:16"
																		},
																		"nativeSrc": "13540:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13540:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13517:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13517:2:16"
																},
																"nativeSrc": "13517:38:16",
																"nodeType": "YulFunctionCall",
																"src": "13517:38:16"
															},
															"nativeSrc": "13514:84:16",
															"nodeType": "YulIf",
															"src": "13514:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13284:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13319:4:16",
														"nodeType": "YulTypedName",
														"src": "13319:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13328:6:16",
														"nodeType": "YulTypedName",
														"src": "13328:6:16",
														"type": ""
													}
												],
												"src": "13284:320:16"
											},
											{
												"body": {
													"nativeSrc": "13638:152:16",
													"nodeType": "YulBlock",
													"src": "13638:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13655:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13655:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13658:77:16",
																		"nodeType": "YulLiteral",
																		"src": "13658:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13648:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13648:6:16"
																},
																"nativeSrc": "13648:88:16",
																"nodeType": "YulFunctionCall",
																"src": "13648:88:16"
															},
															"nativeSrc": "13648:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "13648:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13752:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13752:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13755:4:16",
																		"nodeType": "YulLiteral",
																		"src": "13755:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13745:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13745:6:16"
																},
																"nativeSrc": "13745:15:16",
																"nodeType": "YulFunctionCall",
																"src": "13745:15:16"
															},
															"nativeSrc": "13745:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "13745:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13776:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13776:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13779:4:16",
																		"nodeType": "YulLiteral",
																		"src": "13779:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13769:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13769:6:16"
																},
																"nativeSrc": "13769:15:16",
																"nodeType": "YulFunctionCall",
																"src": "13769:15:16"
															},
															"nativeSrc": "13769:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "13769:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13610:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "13610:180:16"
											},
											{
												"body": {
													"nativeSrc": "13841:149:16",
													"nodeType": "YulBlock",
													"src": "13841:149:16",
													"statements": [
														{
															"nativeSrc": "13851:25:16",
															"nodeType": "YulAssignment",
															"src": "13851:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13874:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13874:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13856:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "13856:17:16"
																},
																"nativeSrc": "13856:20:16",
																"nodeType": "YulFunctionCall",
																"src": "13856:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13851:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "13851:1:16"
																}
															]
														},
														{
															"nativeSrc": "13885:25:16",
															"nodeType": "YulAssignment",
															"src": "13885:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13908:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13908:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13890:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "13890:17:16"
																},
																"nativeSrc": "13890:20:16",
																"nodeType": "YulFunctionCall",
																"src": "13890:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13885:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "13885:1:16"
																}
															]
														},
														{
															"nativeSrc": "13919:17:16",
															"nodeType": "YulAssignment",
															"src": "13919:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13931:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13931:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13934:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13934:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13927:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13927:3:16"
																},
																"nativeSrc": "13927:9:16",
																"nodeType": "YulFunctionCall",
																"src": "13927:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "13919:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13919:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13961:22:16",
																"nodeType": "YulBlock",
																"src": "13961:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13963:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "13963:16:16"
																			},
																			"nativeSrc": "13963:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13963:18:16"
																		},
																		"nativeSrc": "13963:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13963:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "13952:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13952:4:16"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "13958:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13958:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13949:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13949:2:16"
																},
																"nativeSrc": "13949:11:16",
																"nodeType": "YulFunctionCall",
																"src": "13949:11:16"
															},
															"nativeSrc": "13946:37:16",
															"nodeType": "YulIf",
															"src": "13946:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13796:194:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13827:1:16",
														"nodeType": "YulTypedName",
														"src": "13827:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13830:1:16",
														"nodeType": "YulTypedName",
														"src": "13830:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13836:4:16",
														"nodeType": "YulTypedName",
														"src": "13836:4:16",
														"type": ""
													}
												],
												"src": "13796:194:16"
											},
											{
												"body": {
													"nativeSrc": "14040:147:16",
													"nodeType": "YulBlock",
													"src": "14040:147:16",
													"statements": [
														{
															"nativeSrc": "14050:25:16",
															"nodeType": "YulAssignment",
															"src": "14050:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14073:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14073:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14055:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "14055:17:16"
																},
																"nativeSrc": "14055:20:16",
																"nodeType": "YulFunctionCall",
																"src": "14055:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14050:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "14050:1:16"
																}
															]
														},
														{
															"nativeSrc": "14084:25:16",
															"nodeType": "YulAssignment",
															"src": "14084:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14107:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14107:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14089:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "14089:17:16"
																},
																"nativeSrc": "14089:20:16",
																"nodeType": "YulFunctionCall",
																"src": "14089:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14084:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "14084:1:16"
																}
															]
														},
														{
															"nativeSrc": "14118:16:16",
															"nodeType": "YulAssignment",
															"src": "14118:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14129:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14129:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14132:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14132:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14125:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14125:3:16"
																},
																"nativeSrc": "14125:9:16",
																"nodeType": "YulFunctionCall",
																"src": "14125:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14118:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14118:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14158:22:16",
																"nodeType": "YulBlock",
																"src": "14158:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14160:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "14160:16:16"
																			},
																			"nativeSrc": "14160:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14160:18:16"
																		},
																		"nativeSrc": "14160:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "14160:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14150:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14150:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14153:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14153:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14147:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "14147:2:16"
																},
																"nativeSrc": "14147:10:16",
																"nodeType": "YulFunctionCall",
																"src": "14147:10:16"
															},
															"nativeSrc": "14144:36:16",
															"nodeType": "YulIf",
															"src": "14144:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13996:191:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14027:1:16",
														"nodeType": "YulTypedName",
														"src": "14027:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14030:1:16",
														"nodeType": "YulTypedName",
														"src": "14030:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14036:3:16",
														"nodeType": "YulTypedName",
														"src": "14036:3:16",
														"type": ""
													}
												],
												"src": "13996:191:16"
											},
											{
												"body": {
													"nativeSrc": "14221:152:16",
													"nodeType": "YulBlock",
													"src": "14221:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14238:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14238:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14241:77:16",
																		"nodeType": "YulLiteral",
																		"src": "14241:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14231:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14231:6:16"
																},
																"nativeSrc": "14231:88:16",
																"nodeType": "YulFunctionCall",
																"src": "14231:88:16"
															},
															"nativeSrc": "14231:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "14231:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14335:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14335:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14338:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14338:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14328:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14328:6:16"
																},
																"nativeSrc": "14328:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14328:15:16"
															},
															"nativeSrc": "14328:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14328:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14359:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14359:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14362:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14362:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14352:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14352:6:16"
																},
																"nativeSrc": "14352:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14352:15:16"
															},
															"nativeSrc": "14352:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14352:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14193:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "14193:180:16"
											},
											{
												"body": {
													"nativeSrc": "14407:152:16",
													"nodeType": "YulBlock",
													"src": "14407:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14424:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14424:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14427:77:16",
																		"nodeType": "YulLiteral",
																		"src": "14427:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14417:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14417:6:16"
																},
																"nativeSrc": "14417:88:16",
																"nodeType": "YulFunctionCall",
																"src": "14417:88:16"
															},
															"nativeSrc": "14417:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "14417:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14521:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14521:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14524:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14524:4:16",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14514:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14514:6:16"
																},
																"nativeSrc": "14514:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14514:15:16"
															},
															"nativeSrc": "14514:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14514:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14545:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14545:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14548:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14548:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14538:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14538:6:16"
																},
																"nativeSrc": "14538:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14538:15:16"
															},
															"nativeSrc": "14538:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14538:15:16"
														}
													]
												},
												"name": "panic_error_0x00",
												"nativeSrc": "14379:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "14379:180:16"
											},
											{
												"body": {
													"nativeSrc": "14622:129:16",
													"nodeType": "YulBlock",
													"src": "14622:129:16",
													"statements": [
														{
															"nativeSrc": "14633:30:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14633:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14659:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14659:3:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14646:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "14646:12:16"
																},
																"nativeSrc": "14646:17:16",
																"nodeType": "YulFunctionCall",
																"src": "14646:17:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "14637:5:16",
																	"nodeType": "YulTypedName",
																	"src": "14637:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14699:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14699:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "14672:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "14672:26:16"
																},
																"nativeSrc": "14672:33:16",
																"nodeType": "YulFunctionCall",
																"src": "14672:33:16"
															},
															"nativeSrc": "14672:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "14672:33:16"
														},
														{
															"nativeSrc": "14715:29:16",
															"nodeType": "YulAssignment",
															"src": "14715:29:16",
															"value": {
																"name": "value",
																"nativeSrc": "14739:5:16",
																"nodeType": "YulIdentifier",
																"src": "14739:5:16"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "14715:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "14715:11:16"
																}
															]
														}
													]
												},
												"name": "read_from_calldatat_uint256",
												"nativeSrc": "14565:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14602:3:16",
														"nodeType": "YulTypedName",
														"src": "14602:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "14610:11:16",
														"nodeType": "YulTypedName",
														"src": "14610:11:16",
														"type": ""
													}
												],
												"src": "14565:186:16"
											},
											{
												"body": {
													"nativeSrc": "14798:51:16",
													"nodeType": "YulBlock",
													"src": "14798:51:16",
													"statements": [
														{
															"nativeSrc": "14808:34:16",
															"nodeType": "YulAssignment",
															"src": "14808:34:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14833:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14833:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14836:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14836:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14829:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14829:3:16"
																},
																"nativeSrc": "14829:13:16",
																"nodeType": "YulFunctionCall",
																"src": "14829:13:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14808:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "14808:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_0",
												"nativeSrc": "14757:92:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14779:5:16",
														"nodeType": "YulTypedName",
														"src": "14779:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14789:8:16",
														"nodeType": "YulTypedName",
														"src": "14789:8:16",
														"type": ""
													}
												],
												"src": "14757:92:16"
											},
											{
												"body": {
													"nativeSrc": "14920:225:16",
													"nodeType": "YulBlock",
													"src": "14920:225:16",
													"statements": [
														{
															"nativeSrc": "14930:78:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14930:78:16",
															"value": {
																"kind": "number",
																"nativeSrc": "14942:66:16",
																"nodeType": "YulLiteral",
																"src": "14942:66:16",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14934:4:16",
																	"nodeType": "YulTypedName",
																	"src": "14934:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15017:34:16",
															"nodeType": "YulAssignment",
															"src": "15017:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "toInsert",
																		"nativeSrc": "15042:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "15042:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_0",
																	"nativeSrc": "15029:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "15029:12:16"
																},
																"nativeSrc": "15029:22:16",
																"nodeType": "YulFunctionCall",
																"src": "15029:22:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "15017:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "15017:8:16"
																}
															]
														},
														{
															"nativeSrc": "15060:30:16",
															"nodeType": "YulAssignment",
															"src": "15060:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15073:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15073:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "15084:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "15084:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "15080:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15080:3:16"
																		},
																		"nativeSrc": "15080:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15080:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15069:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15069:3:16"
																},
																"nativeSrc": "15069:21:16",
																"nodeType": "YulFunctionCall",
																"src": "15069:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15060:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "15060:5:16"
																}
															]
														},
														{
															"nativeSrc": "15099:40:16",
															"nodeType": "YulAssignment",
															"src": "15099:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15112:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15112:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "15123:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "15123:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "15133:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "15133:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15119:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15119:3:16"
																		},
																		"nativeSrc": "15119:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15119:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15109:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "15109:2:16"
																},
																"nativeSrc": "15109:30:16",
																"nodeType": "YulFunctionCall",
																"src": "15109:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15099:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15099:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_32_shift_0",
												"nativeSrc": "14855:290:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14893:5:16",
														"nodeType": "YulTypedName",
														"src": "14893:5:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14900:8:16",
														"nodeType": "YulTypedName",
														"src": "14900:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14913:6:16",
														"nodeType": "YulTypedName",
														"src": "14913:6:16",
														"type": ""
													}
												],
												"src": "14855:290:16"
											},
											{
												"body": {
													"nativeSrc": "15183:28:16",
													"nodeType": "YulBlock",
													"src": "15183:28:16",
													"statements": [
														{
															"nativeSrc": "15193:12:16",
															"nodeType": "YulAssignment",
															"src": "15193:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "15200:5:16",
																"nodeType": "YulIdentifier",
																"src": "15200:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15193:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15193:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "15151:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15169:5:16",
														"nodeType": "YulTypedName",
														"src": "15169:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15179:3:16",
														"nodeType": "YulTypedName",
														"src": "15179:3:16",
														"type": ""
													}
												],
												"src": "15151:60:16"
											},
											{
												"body": {
													"nativeSrc": "15277:82:16",
													"nodeType": "YulBlock",
													"src": "15277:82:16",
													"statements": [
														{
															"nativeSrc": "15287:66:16",
															"nodeType": "YulAssignment",
															"src": "15287:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15345:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "15345:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "15327:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "15327:17:16"
																				},
																				"nativeSrc": "15327:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15327:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15318:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "15318:8:16"
																		},
																		"nativeSrc": "15318:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15318:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15300:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "15300:17:16"
																},
																"nativeSrc": "15300:53:16",
																"nodeType": "YulFunctionCall",
																"src": "15300:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15287:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "15287:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "15217:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15257:5:16",
														"nodeType": "YulTypedName",
														"src": "15257:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15267:9:16",
														"nodeType": "YulTypedName",
														"src": "15267:9:16",
														"type": ""
													}
												],
												"src": "15217:142:16"
											},
											{
												"body": {
													"nativeSrc": "15412:28:16",
													"nodeType": "YulBlock",
													"src": "15412:28:16",
													"statements": [
														{
															"nativeSrc": "15422:12:16",
															"nodeType": "YulAssignment",
															"src": "15422:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "15429:5:16",
																"nodeType": "YulIdentifier",
																"src": "15429:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15422:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15422:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "15365:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15398:5:16",
														"nodeType": "YulTypedName",
														"src": "15398:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15408:3:16",
														"nodeType": "YulTypedName",
														"src": "15408:3:16",
														"type": ""
													}
												],
												"src": "15365:75:16"
											},
											{
												"body": {
													"nativeSrc": "15522:186:16",
													"nodeType": "YulBlock",
													"src": "15522:186:16",
													"statements": [
														{
															"nativeSrc": "15532:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15532:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15587:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "15587:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15556:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "15556:30:16"
																},
																"nativeSrc": "15556:39:16",
																"nodeType": "YulFunctionCall",
																"src": "15556:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15536:16:16",
																	"nodeType": "YulTypedName",
																	"src": "15536:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15611:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "15611:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15652:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "15652:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15646:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "15646:5:16"
																				},
																				"nativeSrc": "15646:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15646:11:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15683:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "15683:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15659:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "15659:23:16"
																				},
																				"nativeSrc": "15659:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15659:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_32_shift_0",
																			"nativeSrc": "15617:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "15617:28:16"
																		},
																		"nativeSrc": "15617:84:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15617:84:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15604:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15604:6:16"
																},
																"nativeSrc": "15604:98:16",
																"nodeType": "YulFunctionCall",
																"src": "15604:98:16"
															},
															"nativeSrc": "15604:98:16",
															"nodeType": "YulExpressionStatement",
															"src": "15604:98:16"
														}
													]
												},
												"name": "update_storage_value_offset_0t_uint256_to_t_uint256",
												"nativeSrc": "15446:262:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15507:4:16",
														"nodeType": "YulTypedName",
														"src": "15507:4:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "15513:7:16",
														"nodeType": "YulTypedName",
														"src": "15513:7:16",
														"type": ""
													}
												],
												"src": "15446:262:16"
											},
											{
												"body": {
													"nativeSrc": "15838:683:16",
													"nodeType": "YulBlock",
													"src": "15838:683:16",
													"statements": [
														{
															"nativeSrc": "15849:327:16",
															"nodeType": "YulBlock",
															"src": "15849:327:16",
															"statements": [
																{
																	"nativeSrc": "15864:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15864:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "15886:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "15886:4:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15892:1:16",
																				"nodeType": "YulLiteral",
																				"src": "15892:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15882:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15882:3:16"
																		},
																		"nativeSrc": "15882:12:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15882:12:16"
																	},
																	"variables": [
																		{
																			"name": "memberSlot",
																			"nativeSrc": "15868:10:16",
																			"nodeType": "YulTypedName",
																			"src": "15868:10:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15907:33:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15907:33:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15931:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "15931:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15938:1:16",
																				"nodeType": "YulLiteral",
																				"src": "15938:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15927:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15927:3:16"
																		},
																		"nativeSrc": "15927:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15927:13:16"
																	},
																	"variables": [
																		{
																			"name": "memberSrcPtr",
																			"nativeSrc": "15911:12:16",
																			"nodeType": "YulTypedName",
																			"src": "15911:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15954:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15954:46:16",
																	"value": {
																		"name": "memberSrcPtr",
																		"nativeSrc": "15988:12:16",
																		"nodeType": "YulIdentifier",
																		"src": "15988:12:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "15958:13:16",
																			"nodeType": "YulTypedName",
																			"src": "15958:13:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16014:59:16",
																	"nodeType": "YulAssignment",
																	"src": "16014:59:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "16059:13:16",
																				"nodeType": "YulIdentifier",
																				"src": "16059:13:16"
																			}
																		],
																		"functionName": {
																			"name": "read_from_calldatat_uint256",
																			"nativeSrc": "16031:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "16031:27:16"
																		},
																		"nativeSrc": "16031:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16031:42:16"
																	},
																	"variableNames": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "16014:13:16",
																			"nodeType": "YulIdentifier",
																			"src": "16014:13:16"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberSlot",
																				"nativeSrc": "16139:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "16139:10:16"
																			},
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "16151:13:16",
																				"nodeType": "YulIdentifier",
																				"src": "16151:13:16"
																			}
																		],
																		"functionName": {
																			"name": "update_storage_value_offset_0t_uint256_to_t_uint256",
																			"nativeSrc": "16087:51:16",
																			"nodeType": "YulIdentifier",
																			"src": "16087:51:16"
																		},
																		"nativeSrc": "16087:78:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16087:78:16"
																	},
																	"nativeSrc": "16087:78:16",
																	"nodeType": "YulExpressionStatement",
																	"src": "16087:78:16"
																}
															]
														},
														{
															"nativeSrc": "16186:328:16",
															"nodeType": "YulBlock",
															"src": "16186:328:16",
															"statements": [
																{
																	"nativeSrc": "16201:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16201:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "16223:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "16223:4:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16229:1:16",
																				"nodeType": "YulLiteral",
																				"src": "16229:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16219:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16219:3:16"
																		},
																		"nativeSrc": "16219:12:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16219:12:16"
																	},
																	"variables": [
																		{
																			"name": "memberSlot",
																			"nativeSrc": "16205:10:16",
																			"nodeType": "YulTypedName",
																			"src": "16205:10:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16244:34:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16244:34:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16268:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16268:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16275:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16275:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16264:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16264:3:16"
																		},
																		"nativeSrc": "16264:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16264:14:16"
																	},
																	"variables": [
																		{
																			"name": "memberSrcPtr",
																			"nativeSrc": "16248:12:16",
																			"nodeType": "YulTypedName",
																			"src": "16248:12:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16292:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16292:46:16",
																	"value": {
																		"name": "memberSrcPtr",
																		"nativeSrc": "16326:12:16",
																		"nodeType": "YulIdentifier",
																		"src": "16326:12:16"
																	},
																	"variables": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "16296:13:16",
																			"nodeType": "YulTypedName",
																			"src": "16296:13:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16352:59:16",
																	"nodeType": "YulAssignment",
																	"src": "16352:59:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "16397:13:16",
																				"nodeType": "YulIdentifier",
																				"src": "16397:13:16"
																			}
																		],
																		"functionName": {
																			"name": "read_from_calldatat_uint256",
																			"nativeSrc": "16369:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "16369:27:16"
																		},
																		"nativeSrc": "16369:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16369:42:16"
																	},
																	"variableNames": [
																		{
																			"name": "memberValue_0",
																			"nativeSrc": "16352:13:16",
																			"nodeType": "YulIdentifier",
																			"src": "16352:13:16"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberSlot",
																				"nativeSrc": "16477:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "16477:10:16"
																			},
																			{
																				"name": "memberValue_0",
																				"nativeSrc": "16489:13:16",
																				"nodeType": "YulIdentifier",
																				"src": "16489:13:16"
																			}
																		],
																		"functionName": {
																			"name": "update_storage_value_offset_0t_uint256_to_t_uint256",
																			"nativeSrc": "16425:51:16",
																			"nodeType": "YulIdentifier",
																			"src": "16425:51:16"
																		},
																		"nativeSrc": "16425:78:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16425:78:16"
																	},
																	"nativeSrc": "16425:78:16",
																	"nodeType": "YulExpressionStatement",
																	"src": "16425:78:16"
																}
															]
														}
													]
												},
												"name": "copy_struct_to_storage_from_t_struct$_Schedule_$1048_calldata_ptr_to_t_struct$_Schedule_$1048_storage",
												"nativeSrc": "15714:807:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15825:4:16",
														"nodeType": "YulTypedName",
														"src": "15825:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15831:5:16",
														"nodeType": "YulTypedName",
														"src": "15831:5:16",
														"type": ""
													}
												],
												"src": "15714:807:16"
											},
											{
												"body": {
													"nativeSrc": "16654:133:16",
													"nodeType": "YulBlock",
													"src": "16654:133:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16767:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "16767:4:16"
																	},
																	{
																		"name": "value_0",
																		"nativeSrc": "16773:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "16773:7:16"
																	}
																],
																"functionName": {
																	"name": "copy_struct_to_storage_from_t_struct$_Schedule_$1048_calldata_ptr_to_t_struct$_Schedule_$1048_storage",
																	"nativeSrc": "16665:101:16",
																	"nodeType": "YulIdentifier",
																	"src": "16665:101:16"
																},
																"nativeSrc": "16665:116:16",
																"nodeType": "YulFunctionCall",
																"src": "16665:116:16"
															},
															"nativeSrc": "16665:116:16",
															"nodeType": "YulExpressionStatement",
															"src": "16665:116:16"
														}
													]
												},
												"name": "update_storage_value_offset_0t_struct$_Schedule_$1048_calldata_ptr_to_t_struct$_Schedule_$1048_storage",
												"nativeSrc": "16527:260:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16639:4:16",
														"nodeType": "YulTypedName",
														"src": "16639:4:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "16645:7:16",
														"nodeType": "YulTypedName",
														"src": "16645:7:16",
														"type": ""
													}
												],
												"src": "16527:260:16"
											},
											{
												"body": {
													"nativeSrc": "16846:32:16",
													"nodeType": "YulBlock",
													"src": "16846:32:16",
													"statements": [
														{
															"nativeSrc": "16856:16:16",
															"nodeType": "YulAssignment",
															"src": "16856:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "16867:5:16",
																"nodeType": "YulIdentifier",
																"src": "16867:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "16856:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "16856:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "16793:85:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16828:5:16",
														"nodeType": "YulTypedName",
														"src": "16828:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16838:7:16",
														"nodeType": "YulTypedName",
														"src": "16838:7:16",
														"type": ""
													}
												],
												"src": "16793:85:16"
											},
											{
												"body": {
													"nativeSrc": "16928:57:16",
													"nodeType": "YulBlock",
													"src": "16928:57:16",
													"statements": [
														{
															"nativeSrc": "16938:41:16",
															"nodeType": "YulAssignment",
															"src": "16938:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16953:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16953:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16960:18:16",
																		"nodeType": "YulLiteral",
																		"src": "16960:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16949:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16949:3:16"
																},
																"nativeSrc": "16949:30:16",
																"nodeType": "YulFunctionCall",
																"src": "16949:30:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "16938:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "16938:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "16884:101:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16910:5:16",
														"nodeType": "YulTypedName",
														"src": "16910:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "16920:7:16",
														"nodeType": "YulTypedName",
														"src": "16920:7:16",
														"type": ""
													}
												],
												"src": "16884:101:16"
											},
											{
												"body": {
													"nativeSrc": "17058:89:16",
													"nodeType": "YulBlock",
													"src": "17058:89:16",
													"statements": [
														{
															"nativeSrc": "17068:73:16",
															"nodeType": "YulAssignment",
															"src": "17068:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17133:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "17133:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "17107:25:16",
																					"nodeType": "YulIdentifier",
																					"src": "17107:25:16"
																				},
																				"nativeSrc": "17107:32:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17107:32:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17098:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "17098:8:16"
																		},
																		"nativeSrc": "17098:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17098:42:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "17081:16:16",
																	"nodeType": "YulIdentifier",
																	"src": "17081:16:16"
																},
																"nativeSrc": "17081:60:16",
																"nodeType": "YulFunctionCall",
																"src": "17081:60:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17068:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "17068:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "16991:156:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17038:5:16",
														"nodeType": "YulTypedName",
														"src": "17038:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17048:9:16",
														"nodeType": "YulTypedName",
														"src": "17048:9:16",
														"type": ""
													}
												],
												"src": "16991:156:16"
											},
											{
												"body": {
													"nativeSrc": "17225:73:16",
													"nodeType": "YulBlock",
													"src": "17225:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17242:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17242:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17285:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "17285:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "17247:37:16",
																			"nodeType": "YulIdentifier",
																			"src": "17247:37:16"
																		},
																		"nativeSrc": "17247:44:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17247:44:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17235:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17235:6:16"
																},
																"nativeSrc": "17235:57:16",
																"nodeType": "YulFunctionCall",
																"src": "17235:57:16"
															},
															"nativeSrc": "17235:57:16",
															"nodeType": "YulExpressionStatement",
															"src": "17235:57:16"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "17153:145:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17213:5:16",
														"nodeType": "YulTypedName",
														"src": "17213:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17220:3:16",
														"nodeType": "YulTypedName",
														"src": "17220:3:16",
														"type": ""
													}
												],
												"src": "17153:145:16"
											},
											{
												"body": {
													"nativeSrc": "17409:131:16",
													"nodeType": "YulBlock",
													"src": "17409:131:16",
													"statements": [
														{
															"nativeSrc": "17419:26:16",
															"nodeType": "YulAssignment",
															"src": "17419:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17431:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "17431:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17442:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17442:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17427:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17427:3:16"
																},
																"nativeSrc": "17427:18:16",
																"nodeType": "YulFunctionCall",
																"src": "17427:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17419:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "17419:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17506:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17506:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17519:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17519:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17530:1:16",
																				"nodeType": "YulLiteral",
																				"src": "17530:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17515:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17515:3:16"
																		},
																		"nativeSrc": "17515:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17515:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "17455:50:16",
																	"nodeType": "YulIdentifier",
																	"src": "17455:50:16"
																},
																"nativeSrc": "17455:78:16",
																"nodeType": "YulFunctionCall",
																"src": "17455:78:16"
															},
															"nativeSrc": "17455:78:16",
															"nodeType": "YulExpressionStatement",
															"src": "17455:78:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "17304:236:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17381:9:16",
														"nodeType": "YulTypedName",
														"src": "17381:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17393:6:16",
														"nodeType": "YulTypedName",
														"src": "17393:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17404:4:16",
														"nodeType": "YulTypedName",
														"src": "17404:4:16",
														"type": ""
													}
												],
												"src": "17304:236:16"
											},
											{
												"body": {
													"nativeSrc": "17611:53:16",
													"nodeType": "YulBlock",
													"src": "17611:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17628:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17628:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17651:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "17651:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "17633:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "17633:17:16"
																		},
																		"nativeSrc": "17633:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17633:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17621:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17621:6:16"
																},
																"nativeSrc": "17621:37:16",
																"nodeType": "YulFunctionCall",
																"src": "17621:37:16"
															},
															"nativeSrc": "17621:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "17621:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "17546:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17599:5:16",
														"nodeType": "YulTypedName",
														"src": "17599:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17606:3:16",
														"nodeType": "YulTypedName",
														"src": "17606:3:16",
														"type": ""
													}
												],
												"src": "17546:118:16"
											},
											{
												"body": {
													"nativeSrc": "17824:288:16",
													"nodeType": "YulBlock",
													"src": "17824:288:16",
													"statements": [
														{
															"nativeSrc": "17834:26:16",
															"nodeType": "YulAssignment",
															"src": "17834:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17846:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "17846:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17857:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17857:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17842:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17842:3:16"
																},
																"nativeSrc": "17842:18:16",
																"nodeType": "YulFunctionCall",
																"src": "17842:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17834:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "17834:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17914:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17914:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17927:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17927:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17938:1:16",
																				"nodeType": "YulLiteral",
																				"src": "17938:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17923:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17923:3:16"
																		},
																		"nativeSrc": "17923:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17923:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17870:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "17870:43:16"
																},
																"nativeSrc": "17870:71:16",
																"nodeType": "YulFunctionCall",
																"src": "17870:71:16"
															},
															"nativeSrc": "17870:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "17870:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17995:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17995:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18008:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "18008:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18019:2:16",
																				"nodeType": "YulLiteral",
																				"src": "18019:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18004:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18004:3:16"
																		},
																		"nativeSrc": "18004:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18004:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17951:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "17951:43:16"
																},
																"nativeSrc": "17951:72:16",
																"nodeType": "YulFunctionCall",
																"src": "17951:72:16"
															},
															"nativeSrc": "17951:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "17951:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18077:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18077:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18090:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "18090:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18101:2:16",
																				"nodeType": "YulLiteral",
																				"src": "18101:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18086:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18086:3:16"
																		},
																		"nativeSrc": "18086:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18086:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18033:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "18033:43:16"
																},
																"nativeSrc": "18033:72:16",
																"nodeType": "YulFunctionCall",
																"src": "18033:72:16"
															},
															"nativeSrc": "18033:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "18033:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17670:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17780:9:16",
														"nodeType": "YulTypedName",
														"src": "17780:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17792:6:16",
														"nodeType": "YulTypedName",
														"src": "17792:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17800:6:16",
														"nodeType": "YulTypedName",
														"src": "17800:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17808:6:16",
														"nodeType": "YulTypedName",
														"src": "17808:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17819:4:16",
														"nodeType": "YulTypedName",
														"src": "17819:4:16",
														"type": ""
													}
												],
												"src": "17670:442:16"
											},
											{
												"body": {
													"nativeSrc": "18216:124:16",
													"nodeType": "YulBlock",
													"src": "18216:124:16",
													"statements": [
														{
															"nativeSrc": "18226:26:16",
															"nodeType": "YulAssignment",
															"src": "18226:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18238:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "18238:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18249:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18249:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18234:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18234:3:16"
																},
																"nativeSrc": "18234:18:16",
																"nodeType": "YulFunctionCall",
																"src": "18234:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18226:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "18226:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18306:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18306:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18319:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "18319:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18330:1:16",
																				"nodeType": "YulLiteral",
																				"src": "18330:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18315:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18315:3:16"
																		},
																		"nativeSrc": "18315:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18315:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18262:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "18262:43:16"
																},
																"nativeSrc": "18262:71:16",
																"nodeType": "YulFunctionCall",
																"src": "18262:71:16"
															},
															"nativeSrc": "18262:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "18262:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "18118:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18188:9:16",
														"nodeType": "YulTypedName",
														"src": "18188:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18200:6:16",
														"nodeType": "YulTypedName",
														"src": "18200:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18211:4:16",
														"nodeType": "YulTypedName",
														"src": "18211:4:16",
														"type": ""
													}
												],
												"src": "18118:222:16"
											},
											{
												"body": {
													"nativeSrc": "18500:288:16",
													"nodeType": "YulBlock",
													"src": "18500:288:16",
													"statements": [
														{
															"nativeSrc": "18510:26:16",
															"nodeType": "YulAssignment",
															"src": "18510:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18522:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "18522:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18533:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18533:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18518:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18518:3:16"
																},
																"nativeSrc": "18518:18:16",
																"nodeType": "YulFunctionCall",
																"src": "18518:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18510:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "18510:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18590:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18590:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18603:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "18603:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18614:1:16",
																				"nodeType": "YulLiteral",
																				"src": "18614:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18599:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18599:3:16"
																		},
																		"nativeSrc": "18599:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18599:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18546:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "18546:43:16"
																},
																"nativeSrc": "18546:71:16",
																"nodeType": "YulFunctionCall",
																"src": "18546:71:16"
															},
															"nativeSrc": "18546:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "18546:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18671:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18671:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18684:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "18684:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18695:2:16",
																				"nodeType": "YulLiteral",
																				"src": "18695:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18680:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18680:3:16"
																		},
																		"nativeSrc": "18680:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18680:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18627:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "18627:43:16"
																},
																"nativeSrc": "18627:72:16",
																"nodeType": "YulFunctionCall",
																"src": "18627:72:16"
															},
															"nativeSrc": "18627:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "18627:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18753:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18753:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18766:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "18766:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18777:2:16",
																				"nodeType": "YulLiteral",
																				"src": "18777:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18762:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18762:3:16"
																		},
																		"nativeSrc": "18762:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18762:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18709:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "18709:43:16"
																},
																"nativeSrc": "18709:72:16",
																"nodeType": "YulFunctionCall",
																"src": "18709:72:16"
															},
															"nativeSrc": "18709:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "18709:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18346:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18456:9:16",
														"nodeType": "YulTypedName",
														"src": "18456:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18468:6:16",
														"nodeType": "YulTypedName",
														"src": "18468:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18476:6:16",
														"nodeType": "YulTypedName",
														"src": "18476:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18484:6:16",
														"nodeType": "YulTypedName",
														"src": "18484:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18495:4:16",
														"nodeType": "YulTypedName",
														"src": "18495:4:16",
														"type": ""
													}
												],
												"src": "18346:442:16"
											},
											{
												"body": {
													"nativeSrc": "18920:206:16",
													"nodeType": "YulBlock",
													"src": "18920:206:16",
													"statements": [
														{
															"nativeSrc": "18930:26:16",
															"nodeType": "YulAssignment",
															"src": "18930:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18942:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "18942:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18953:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18953:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18938:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18938:3:16"
																},
																"nativeSrc": "18938:18:16",
																"nodeType": "YulFunctionCall",
																"src": "18938:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18930:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "18930:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19010:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19010:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19023:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "19023:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19034:1:16",
																				"nodeType": "YulLiteral",
																				"src": "19034:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19019:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19019:3:16"
																		},
																		"nativeSrc": "19019:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19019:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18966:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "18966:43:16"
																},
																"nativeSrc": "18966:71:16",
																"nodeType": "YulFunctionCall",
																"src": "18966:71:16"
															},
															"nativeSrc": "18966:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "18966:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19091:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19091:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19104:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "19104:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19115:2:16",
																				"nodeType": "YulLiteral",
																				"src": "19115:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19100:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19100:3:16"
																		},
																		"nativeSrc": "19100:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19100:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19047:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "19047:43:16"
																},
																"nativeSrc": "19047:72:16",
																"nodeType": "YulFunctionCall",
																"src": "19047:72:16"
															},
															"nativeSrc": "19047:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "19047:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18794:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18884:9:16",
														"nodeType": "YulTypedName",
														"src": "18884:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18896:6:16",
														"nodeType": "YulTypedName",
														"src": "18896:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18904:6:16",
														"nodeType": "YulTypedName",
														"src": "18904:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18915:4:16",
														"nodeType": "YulTypedName",
														"src": "18915:4:16",
														"type": ""
													}
												],
												"src": "18794:332:16"
											},
											{
												"body": {
													"nativeSrc": "19180:362:16",
													"nodeType": "YulBlock",
													"src": "19180:362:16",
													"statements": [
														{
															"nativeSrc": "19190:25:16",
															"nodeType": "YulAssignment",
															"src": "19190:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19213:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "19213:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19195:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "19195:17:16"
																},
																"nativeSrc": "19195:20:16",
																"nodeType": "YulFunctionCall",
																"src": "19195:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19190:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "19190:1:16"
																}
															]
														},
														{
															"nativeSrc": "19224:25:16",
															"nodeType": "YulAssignment",
															"src": "19224:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19247:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "19247:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19229:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "19229:17:16"
																},
																"nativeSrc": "19229:20:16",
																"nodeType": "YulFunctionCall",
																"src": "19229:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19224:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "19224:1:16"
																}
															]
														},
														{
															"nativeSrc": "19258:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19258:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19281:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "19281:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19284:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "19284:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19277:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19277:3:16"
																},
																"nativeSrc": "19277:9:16",
																"nodeType": "YulFunctionCall",
																"src": "19277:9:16"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "19262:11:16",
																	"nodeType": "YulTypedName",
																	"src": "19262:11:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19295:41:16",
															"nodeType": "YulAssignment",
															"src": "19295:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "19324:11:16",
																		"nodeType": "YulIdentifier",
																		"src": "19324:11:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19306:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "19306:17:16"
																},
																"nativeSrc": "19306:30:16",
																"nodeType": "YulFunctionCall",
																"src": "19306:30:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "19295:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "19295:7:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19513:22:16",
																"nodeType": "YulBlock",
																"src": "19513:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19515:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "19515:16:16"
																			},
																			"nativeSrc": "19515:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19515:18:16"
																		},
																		"nativeSrc": "19515:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "19515:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "19446:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "19446:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "19439:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "19439:6:16"
																				},
																				"nativeSrc": "19439:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "19439:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "19469:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "19469:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "19476:7:16",
																								"nodeType": "YulIdentifier",
																								"src": "19476:7:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "19485:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "19485:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "19472:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "19472:3:16"
																						},
																						"nativeSrc": "19472:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "19472:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "19466:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "19466:2:16"
																				},
																				"nativeSrc": "19466:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "19466:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "19419:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "19419:2:16"
																		},
																		"nativeSrc": "19419:83:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19419:83:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19399:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19399:6:16"
																},
																"nativeSrc": "19399:113:16",
																"nodeType": "YulFunctionCall",
																"src": "19399:113:16"
															},
															"nativeSrc": "19396:139:16",
															"nodeType": "YulIf",
															"src": "19396:139:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "19132:410:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19163:1:16",
														"nodeType": "YulTypedName",
														"src": "19163:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19166:1:16",
														"nodeType": "YulTypedName",
														"src": "19166:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "19172:7:16",
														"nodeType": "YulTypedName",
														"src": "19172:7:16",
														"type": ""
													}
												],
												"src": "19132:410:16"
											},
											{
												"body": {
													"nativeSrc": "19576:152:16",
													"nodeType": "YulBlock",
													"src": "19576:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19593:1:16",
																		"nodeType": "YulLiteral",
																		"src": "19593:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19596:77:16",
																		"nodeType": "YulLiteral",
																		"src": "19596:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19586:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19586:6:16"
																},
																"nativeSrc": "19586:88:16",
																"nodeType": "YulFunctionCall",
																"src": "19586:88:16"
															},
															"nativeSrc": "19586:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "19586:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19690:1:16",
																		"nodeType": "YulLiteral",
																		"src": "19690:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19693:4:16",
																		"nodeType": "YulLiteral",
																		"src": "19693:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19683:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19683:6:16"
																},
																"nativeSrc": "19683:15:16",
																"nodeType": "YulFunctionCall",
																"src": "19683:15:16"
															},
															"nativeSrc": "19683:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "19683:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19714:1:16",
																		"nodeType": "YulLiteral",
																		"src": "19714:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19717:4:16",
																		"nodeType": "YulLiteral",
																		"src": "19717:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19707:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19707:6:16"
																},
																"nativeSrc": "19707:15:16",
																"nodeType": "YulFunctionCall",
																"src": "19707:15:16"
															},
															"nativeSrc": "19707:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "19707:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "19548:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "19548:180:16"
											},
											{
												"body": {
													"nativeSrc": "19776:143:16",
													"nodeType": "YulBlock",
													"src": "19776:143:16",
													"statements": [
														{
															"nativeSrc": "19786:25:16",
															"nodeType": "YulAssignment",
															"src": "19786:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19809:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "19809:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19791:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "19791:17:16"
																},
																"nativeSrc": "19791:20:16",
																"nodeType": "YulFunctionCall",
																"src": "19791:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19786:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "19786:1:16"
																}
															]
														},
														{
															"nativeSrc": "19820:25:16",
															"nodeType": "YulAssignment",
															"src": "19820:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19843:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "19843:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19825:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "19825:17:16"
																},
																"nativeSrc": "19825:20:16",
																"nodeType": "YulFunctionCall",
																"src": "19825:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19820:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "19820:1:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19867:22:16",
																"nodeType": "YulBlock",
																"src": "19867:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "19869:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "19869:16:16"
																			},
																			"nativeSrc": "19869:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19869:18:16"
																		},
																		"nativeSrc": "19869:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "19869:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19864:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "19864:1:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19857:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19857:6:16"
																},
																"nativeSrc": "19857:9:16",
																"nodeType": "YulFunctionCall",
																"src": "19857:9:16"
															},
															"nativeSrc": "19854:35:16",
															"nodeType": "YulIf",
															"src": "19854:35:16"
														},
														{
															"nativeSrc": "19899:14:16",
															"nodeType": "YulAssignment",
															"src": "19899:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19908:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "19908:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19911:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "19911:1:16"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19904:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19904:3:16"
																},
																"nativeSrc": "19904:9:16",
																"nodeType": "YulFunctionCall",
																"src": "19904:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "19899:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "19899:1:16"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "19734:185:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19765:1:16",
														"nodeType": "YulTypedName",
														"src": "19765:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19768:1:16",
														"nodeType": "YulTypedName",
														"src": "19768:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "19774:1:16",
														"nodeType": "YulTypedName",
														"src": "19774:1:16",
														"type": ""
													}
												],
												"src": "19734:185:16"
											},
											{
												"body": {
													"nativeSrc": "19965:76:16",
													"nodeType": "YulBlock",
													"src": "19965:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "20019:16:16",
																"nodeType": "YulBlock",
																"src": "20019:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20028:1:16",
																					"nodeType": "YulLiteral",
																					"src": "20028:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20031:1:16",
																					"nodeType": "YulLiteral",
																					"src": "20031:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20021:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "20021:6:16"
																			},
																			"nativeSrc": "20021:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "20021:12:16"
																		},
																		"nativeSrc": "20021:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "20021:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19988:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "19988:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20010:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "20010:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "19995:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "19995:14:16"
																				},
																				"nativeSrc": "19995:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "19995:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "19985:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "19985:2:16"
																		},
																		"nativeSrc": "19985:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19985:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19978:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19978:6:16"
																},
																"nativeSrc": "19978:40:16",
																"nodeType": "YulFunctionCall",
																"src": "19978:40:16"
															},
															"nativeSrc": "19975:60:16",
															"nodeType": "YulIf",
															"src": "19975:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "19925:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19958:5:16",
														"nodeType": "YulTypedName",
														"src": "19958:5:16",
														"type": ""
													}
												],
												"src": "19925:116:16"
											},
											{
												"body": {
													"nativeSrc": "20107:77:16",
													"nodeType": "YulBlock",
													"src": "20107:77:16",
													"statements": [
														{
															"nativeSrc": "20117:22:16",
															"nodeType": "YulAssignment",
															"src": "20117:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20132:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20132:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20126:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "20126:5:16"
																},
																"nativeSrc": "20126:13:16",
																"nodeType": "YulFunctionCall",
																"src": "20126:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20117:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "20117:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20172:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "20172:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "20148:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "20148:23:16"
																},
																"nativeSrc": "20148:30:16",
																"nodeType": "YulFunctionCall",
																"src": "20148:30:16"
															},
															"nativeSrc": "20148:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "20148:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "20047:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20085:6:16",
														"nodeType": "YulTypedName",
														"src": "20085:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20093:3:16",
														"nodeType": "YulTypedName",
														"src": "20093:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20101:5:16",
														"nodeType": "YulTypedName",
														"src": "20101:5:16",
														"type": ""
													}
												],
												"src": "20047:137:16"
											},
											{
												"body": {
													"nativeSrc": "20264:271:16",
													"nodeType": "YulBlock",
													"src": "20264:271:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "20310:83:16",
																"nodeType": "YulBlock",
																"src": "20310:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20312:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "20312:77:16"
																			},
																			"nativeSrc": "20312:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "20312:79:16"
																		},
																		"nativeSrc": "20312:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "20312:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20285:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "20285:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20294:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20294:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20281:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20281:3:16"
																		},
																		"nativeSrc": "20281:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20281:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20306:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20306:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20277:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20277:3:16"
																},
																"nativeSrc": "20277:32:16",
																"nodeType": "YulFunctionCall",
																"src": "20277:32:16"
															},
															"nativeSrc": "20274:119:16",
															"nodeType": "YulIf",
															"src": "20274:119:16"
														},
														{
															"nativeSrc": "20403:125:16",
															"nodeType": "YulBlock",
															"src": "20403:125:16",
															"statements": [
																{
																	"nativeSrc": "20418:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20418:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20432:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20432:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20422:6:16",
																			"nodeType": "YulTypedName",
																			"src": "20422:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20447:71:16",
																	"nodeType": "YulAssignment",
																	"src": "20447:71:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20490:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "20490:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20501:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "20501:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20486:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "20486:3:16"
																				},
																				"nativeSrc": "20486:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "20486:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20510:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "20510:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "20457:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "20457:28:16"
																		},
																		"nativeSrc": "20457:61:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20457:61:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20447:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "20447:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "20190:345:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20234:9:16",
														"nodeType": "YulTypedName",
														"src": "20234:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20245:7:16",
														"nodeType": "YulTypedName",
														"src": "20245:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20257:6:16",
														"nodeType": "YulTypedName",
														"src": "20257:6:16",
														"type": ""
													}
												],
												"src": "20190:345:16"
											},
											{
												"body": {
													"nativeSrc": "20569:152:16",
													"nodeType": "YulBlock",
													"src": "20569:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20586:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20586:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20589:77:16",
																		"nodeType": "YulLiteral",
																		"src": "20589:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20579:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20579:6:16"
																},
																"nativeSrc": "20579:88:16",
																"nodeType": "YulFunctionCall",
																"src": "20579:88:16"
															},
															"nativeSrc": "20579:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "20579:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20683:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20683:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20686:4:16",
																		"nodeType": "YulLiteral",
																		"src": "20686:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20676:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20676:6:16"
																},
																"nativeSrc": "20676:15:16",
																"nodeType": "YulFunctionCall",
																"src": "20676:15:16"
															},
															"nativeSrc": "20676:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "20676:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20707:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20707:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20710:4:16",
																		"nodeType": "YulLiteral",
																		"src": "20710:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20700:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20700:6:16"
																},
																"nativeSrc": "20700:15:16",
																"nodeType": "YulFunctionCall",
																"src": "20700:15:16"
															},
															"nativeSrc": "20700:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "20700:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "20541:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "20541:180:16"
											},
											{
												"body": {
													"nativeSrc": "20781:87:16",
													"nodeType": "YulBlock",
													"src": "20781:87:16",
													"statements": [
														{
															"nativeSrc": "20791:11:16",
															"nodeType": "YulAssignment",
															"src": "20791:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "20799:3:16",
																"nodeType": "YulIdentifier",
																"src": "20799:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20791:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20791:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20819:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20819:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "20822:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20822:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20812:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20812:6:16"
																},
																"nativeSrc": "20812:14:16",
																"nodeType": "YulFunctionCall",
																"src": "20812:14:16"
															},
															"nativeSrc": "20812:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "20812:14:16"
														},
														{
															"nativeSrc": "20835:26:16",
															"nodeType": "YulAssignment",
															"src": "20835:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20853:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20853:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20856:4:16",
																		"nodeType": "YulLiteral",
																		"src": "20856:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "20843:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "20843:9:16"
																},
																"nativeSrc": "20843:18:16",
																"nodeType": "YulFunctionCall",
																"src": "20843:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20835:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20835:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "20727:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "20768:3:16",
														"nodeType": "YulTypedName",
														"src": "20768:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "20776:4:16",
														"nodeType": "YulTypedName",
														"src": "20776:4:16",
														"type": ""
													}
												],
												"src": "20727:141:16"
											},
											{
												"body": {
													"nativeSrc": "20918:49:16",
													"nodeType": "YulBlock",
													"src": "20918:49:16",
													"statements": [
														{
															"nativeSrc": "20928:33:16",
															"nodeType": "YulAssignment",
															"src": "20928:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20946:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "20946:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20953:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20953:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20942:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20942:3:16"
																		},
																		"nativeSrc": "20942:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20942:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20958:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20958:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "20938:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20938:3:16"
																},
																"nativeSrc": "20938:23:16",
																"nodeType": "YulFunctionCall",
																"src": "20938:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20928:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20928:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "20874:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20901:5:16",
														"nodeType": "YulTypedName",
														"src": "20901:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20911:6:16",
														"nodeType": "YulTypedName",
														"src": "20911:6:16",
														"type": ""
													}
												],
												"src": "20874:93:16"
											},
											{
												"body": {
													"nativeSrc": "21026:54:16",
													"nodeType": "YulBlock",
													"src": "21026:54:16",
													"statements": [
														{
															"nativeSrc": "21036:37:16",
															"nodeType": "YulAssignment",
															"src": "21036:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21061:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "21061:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21067:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "21067:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "21057:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21057:3:16"
																},
																"nativeSrc": "21057:16:16",
																"nodeType": "YulFunctionCall",
																"src": "21057:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21036:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "21036:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "20973:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21001:4:16",
														"nodeType": "YulTypedName",
														"src": "21001:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21007:5:16",
														"nodeType": "YulTypedName",
														"src": "21007:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21017:8:16",
														"nodeType": "YulTypedName",
														"src": "21017:8:16",
														"type": ""
													}
												],
												"src": "20973:107:16"
											},
											{
												"body": {
													"nativeSrc": "21162:317:16",
													"nodeType": "YulBlock",
													"src": "21162:317:16",
													"statements": [
														{
															"nativeSrc": "21172:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "21172:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "21193:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "21193:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21205:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21205:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21189:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21189:3:16"
																},
																"nativeSrc": "21189:18:16",
																"nodeType": "YulFunctionCall",
																"src": "21189:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "21176:9:16",
																	"nodeType": "YulTypedName",
																	"src": "21176:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21216:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "21216:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21247:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "21247:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21258:66:16",
																		"nodeType": "YulLiteral",
																		"src": "21258:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21228:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "21228:18:16"
																},
																"nativeSrc": "21228:97:16",
																"nodeType": "YulFunctionCall",
																"src": "21228:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21220:4:16",
																	"nodeType": "YulTypedName",
																	"src": "21220:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21334:51:16",
															"nodeType": "YulAssignment",
															"src": "21334:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21365:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "21365:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "21376:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "21376:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21346:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "21346:18:16"
																},
																"nativeSrc": "21346:39:16",
																"nodeType": "YulFunctionCall",
																"src": "21346:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "21334:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "21334:8:16"
																}
															]
														},
														{
															"nativeSrc": "21394:30:16",
															"nodeType": "YulAssignment",
															"src": "21394:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21407:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "21407:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "21418:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "21418:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "21414:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21414:3:16"
																		},
																		"nativeSrc": "21414:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21414:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21403:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21403:3:16"
																},
																"nativeSrc": "21403:21:16",
																"nodeType": "YulFunctionCall",
																"src": "21403:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21394:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "21394:5:16"
																}
															]
														},
														{
															"nativeSrc": "21433:40:16",
															"nodeType": "YulAssignment",
															"src": "21433:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21446:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "21446:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "21457:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "21457:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "21467:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "21467:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21453:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21453:3:16"
																		},
																		"nativeSrc": "21453:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21453:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21443:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "21443:2:16"
																},
																"nativeSrc": "21443:30:16",
																"nodeType": "YulFunctionCall",
																"src": "21443:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21433:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21433:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "21086:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21123:5:16",
														"nodeType": "YulTypedName",
														"src": "21123:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "21130:10:16",
														"nodeType": "YulTypedName",
														"src": "21130:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "21142:8:16",
														"nodeType": "YulTypedName",
														"src": "21142:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21155:6:16",
														"nodeType": "YulTypedName",
														"src": "21155:6:16",
														"type": ""
													}
												],
												"src": "21086:393:16"
											},
											{
												"body": {
													"nativeSrc": "21561:193:16",
													"nodeType": "YulBlock",
													"src": "21561:193:16",
													"statements": [
														{
															"nativeSrc": "21571:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "21571:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "21626:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "21626:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "21595:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "21595:30:16"
																},
																"nativeSrc": "21595:39:16",
																"nodeType": "YulFunctionCall",
																"src": "21595:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "21575:16:16",
																	"nodeType": "YulTypedName",
																	"src": "21575:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21650:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "21650:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "21690:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "21690:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "21684:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "21684:5:16"
																				},
																				"nativeSrc": "21684:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "21684:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "21697:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "21697:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "21729:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "21729:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "21705:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "21705:23:16"
																				},
																				"nativeSrc": "21705:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "21705:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "21656:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "21656:27:16"
																		},
																		"nativeSrc": "21656:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21656:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "21643:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21643:6:16"
																},
																"nativeSrc": "21643:105:16",
																"nodeType": "YulFunctionCall",
																"src": "21643:105:16"
															},
															"nativeSrc": "21643:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "21643:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "21485:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21538:4:16",
														"nodeType": "YulTypedName",
														"src": "21538:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21544:6:16",
														"nodeType": "YulTypedName",
														"src": "21544:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "21552:7:16",
														"nodeType": "YulTypedName",
														"src": "21552:7:16",
														"type": ""
													}
												],
												"src": "21485:269:16"
											},
											{
												"body": {
													"nativeSrc": "21809:24:16",
													"nodeType": "YulBlock",
													"src": "21809:24:16",
													"statements": [
														{
															"nativeSrc": "21819:8:16",
															"nodeType": "YulAssignment",
															"src": "21819:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "21826:1:16",
																"nodeType": "YulLiteral",
																"src": "21826:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21819:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21819:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "21760:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21805:3:16",
														"nodeType": "YulTypedName",
														"src": "21805:3:16",
														"type": ""
													}
												],
												"src": "21760:73:16"
											},
											{
												"body": {
													"nativeSrc": "21892:136:16",
													"nodeType": "YulBlock",
													"src": "21892:136:16",
													"statements": [
														{
															"nativeSrc": "21902:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "21902:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "21916:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "21916:30:16"
																},
																"nativeSrc": "21916:32:16",
																"nodeType": "YulFunctionCall",
																"src": "21916:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "21906:6:16",
																	"nodeType": "YulTypedName",
																	"src": "21906:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22001:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "22001:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "22007:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22007:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "22015:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22015:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "21957:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21957:43:16"
																},
																"nativeSrc": "21957:65:16",
																"nodeType": "YulFunctionCall",
																"src": "21957:65:16"
															},
															"nativeSrc": "21957:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "21957:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "21839:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21878:4:16",
														"nodeType": "YulTypedName",
														"src": "21878:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21884:6:16",
														"nodeType": "YulTypedName",
														"src": "21884:6:16",
														"type": ""
													}
												],
												"src": "21839:189:16"
											},
											{
												"body": {
													"nativeSrc": "22084:136:16",
													"nodeType": "YulBlock",
													"src": "22084:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "22151:63:16",
																"nodeType": "YulBlock",
																"src": "22151:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22195:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "22195:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22202:1:16",
																					"nodeType": "YulLiteral",
																					"src": "22202:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "22165:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "22165:29:16"
																			},
																			"nativeSrc": "22165:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "22165:39:16"
																		},
																		"nativeSrc": "22165:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "22165:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "22104:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "22104:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "22111:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22111:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "22101:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "22101:2:16"
																},
																"nativeSrc": "22101:14:16",
																"nodeType": "YulFunctionCall",
																"src": "22101:14:16"
															},
															"nativeSrc": "22094:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "22116:26:16",
																"nodeType": "YulBlock",
																"src": "22116:26:16",
																"statements": [
																	{
																		"nativeSrc": "22118:22:16",
																		"nodeType": "YulAssignment",
																		"src": "22118:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22131:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "22131:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22138:1:16",
																					"nodeType": "YulLiteral",
																					"src": "22138:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22127:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "22127:3:16"
																			},
																			"nativeSrc": "22127:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "22127:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "22118:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "22118:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "22098:2:16",
																"nodeType": "YulBlock",
																"src": "22098:2:16",
																"statements": []
															},
															"src": "22094:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "22034:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "22072:5:16",
														"nodeType": "YulTypedName",
														"src": "22072:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22079:3:16",
														"nodeType": "YulTypedName",
														"src": "22079:3:16",
														"type": ""
													}
												],
												"src": "22034:186:16"
											},
											{
												"body": {
													"nativeSrc": "22305:464:16",
													"nodeType": "YulBlock",
													"src": "22305:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "22331:431:16",
																"nodeType": "YulBlock",
																"src": "22331:431:16",
																"statements": [
																	{
																		"nativeSrc": "22345:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22345:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "22393:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "22393:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "22361:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "22361:31:16"
																			},
																			"nativeSrc": "22361:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "22361:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "22349:8:16",
																				"nodeType": "YulTypedName",
																				"src": "22349:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "22412:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22412:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "22435:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "22435:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "22463:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "22463:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "22445:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "22445:17:16"
																					},
																					"nativeSrc": "22445:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "22445:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22431:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "22431:3:16"
																			},
																			"nativeSrc": "22431:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "22431:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "22416:11:16",
																				"nodeType": "YulTypedName",
																				"src": "22416:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "22632:27:16",
																			"nodeType": "YulBlock",
																			"src": "22632:27:16",
																			"statements": [
																				{
																					"nativeSrc": "22634:23:16",
																					"nodeType": "YulAssignment",
																					"src": "22634:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "22649:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "22649:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "22634:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "22634:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "22616:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "22616:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22628:2:16",
																					"nodeType": "YulLiteral",
																					"src": "22628:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "22613:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "22613:2:16"
																			},
																			"nativeSrc": "22613:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "22613:18:16"
																		},
																		"nativeSrc": "22610:49:16",
																		"nodeType": "YulIf",
																		"src": "22610:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "22701:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "22701:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "22718:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "22718:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "22746:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "22746:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "22728:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "22728:17:16"
																							},
																							"nativeSrc": "22728:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "22728:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "22714:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "22714:3:16"
																					},
																					"nativeSrc": "22714:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "22714:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "22672:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "22672:28:16"
																			},
																			"nativeSrc": "22672:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "22672:80:16"
																		},
																		"nativeSrc": "22672:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "22672:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "22322:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22322:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22327:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22327:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22319:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "22319:2:16"
																},
																"nativeSrc": "22319:11:16",
																"nodeType": "YulFunctionCall",
																"src": "22319:11:16"
															},
															"nativeSrc": "22316:446:16",
															"nodeType": "YulIf",
															"src": "22316:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "22226:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "22281:5:16",
														"nodeType": "YulTypedName",
														"src": "22281:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22288:3:16",
														"nodeType": "YulTypedName",
														"src": "22288:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "22293:10:16",
														"nodeType": "YulTypedName",
														"src": "22293:10:16",
														"type": ""
													}
												],
												"src": "22226:543:16"
											},
											{
												"body": {
													"nativeSrc": "22838:54:16",
													"nodeType": "YulBlock",
													"src": "22838:54:16",
													"statements": [
														{
															"nativeSrc": "22848:37:16",
															"nodeType": "YulAssignment",
															"src": "22848:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22873:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "22873:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22879:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "22879:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "22869:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22869:3:16"
																},
																"nativeSrc": "22869:16:16",
																"nodeType": "YulFunctionCall",
																"src": "22869:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22848:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "22848:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "22775:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22813:4:16",
														"nodeType": "YulTypedName",
														"src": "22813:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22819:5:16",
														"nodeType": "YulTypedName",
														"src": "22819:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22829:8:16",
														"nodeType": "YulTypedName",
														"src": "22829:8:16",
														"type": ""
													}
												],
												"src": "22775:117:16"
											},
											{
												"body": {
													"nativeSrc": "22949:118:16",
													"nodeType": "YulBlock",
													"src": "22949:118:16",
													"statements": [
														{
															"nativeSrc": "22959:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "22959:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23008:1:16",
																						"nodeType": "YulLiteral",
																						"src": "23008:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "23011:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "23011:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "23004:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "23004:3:16"
																				},
																				"nativeSrc": "23004:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "23004:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23023:1:16",
																						"nodeType": "YulLiteral",
																						"src": "23023:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "23019:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "23019:3:16"
																				},
																				"nativeSrc": "23019:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "23019:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "22975:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "22975:28:16"
																		},
																		"nativeSrc": "22975:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22975:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "22971:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22971:3:16"
																},
																"nativeSrc": "22971:56:16",
																"nodeType": "YulFunctionCall",
																"src": "22971:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22963:4:16",
																	"nodeType": "YulTypedName",
																	"src": "22963:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23036:25:16",
															"nodeType": "YulAssignment",
															"src": "23036:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23050:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "23050:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "23056:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "23056:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23046:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "23046:3:16"
																},
																"nativeSrc": "23046:15:16",
																"nodeType": "YulFunctionCall",
																"src": "23046:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23036:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "23036:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "22898:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22926:4:16",
														"nodeType": "YulTypedName",
														"src": "22926:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "22932:5:16",
														"nodeType": "YulTypedName",
														"src": "22932:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22942:6:16",
														"nodeType": "YulTypedName",
														"src": "22942:6:16",
														"type": ""
													}
												],
												"src": "22898:169:16"
											},
											{
												"body": {
													"nativeSrc": "23153:214:16",
													"nodeType": "YulBlock",
													"src": "23153:214:16",
													"statements": [
														{
															"nativeSrc": "23286:37:16",
															"nodeType": "YulAssignment",
															"src": "23286:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23313:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "23313:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "23319:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "23319:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "23294:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "23294:18:16"
																},
																"nativeSrc": "23294:29:16",
																"nodeType": "YulFunctionCall",
																"src": "23294:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23286:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "23286:4:16"
																}
															]
														},
														{
															"nativeSrc": "23332:29:16",
															"nodeType": "YulAssignment",
															"src": "23332:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23343:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "23343:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "23353:1:16",
																				"nodeType": "YulLiteral",
																				"src": "23353:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "23356:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "23356:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "23349:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "23349:3:16"
																		},
																		"nativeSrc": "23349:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "23349:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23340:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "23340:2:16"
																},
																"nativeSrc": "23340:21:16",
																"nodeType": "YulFunctionCall",
																"src": "23340:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "23332:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "23332:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "23072:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23134:4:16",
														"nodeType": "YulTypedName",
														"src": "23134:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23140:3:16",
														"nodeType": "YulTypedName",
														"src": "23140:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "23148:4:16",
														"nodeType": "YulTypedName",
														"src": "23148:4:16",
														"type": ""
													}
												],
												"src": "23072:295:16"
											},
											{
												"body": {
													"nativeSrc": "23464:1303:16",
													"nodeType": "YulBlock",
													"src": "23464:1303:16",
													"statements": [
														{
															"nativeSrc": "23475:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "23475:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "23522:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "23522:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "23489:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "23489:32:16"
																},
																"nativeSrc": "23489:37:16",
																"nodeType": "YulFunctionCall",
																"src": "23489:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "23479:6:16",
																	"nodeType": "YulTypedName",
																	"src": "23479:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23611:22:16",
																"nodeType": "YulBlock",
																"src": "23611:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "23613:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "23613:16:16"
																			},
																			"nativeSrc": "23613:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "23613:18:16"
																		},
																		"nativeSrc": "23613:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "23613:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23583:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "23583:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23591:18:16",
																		"nodeType": "YulLiteral",
																		"src": "23591:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23580:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "23580:2:16"
																},
																"nativeSrc": "23580:30:16",
																"nodeType": "YulFunctionCall",
																"src": "23580:30:16"
															},
															"nativeSrc": "23577:56:16",
															"nodeType": "YulIf",
															"src": "23577:56:16"
														},
														{
															"nativeSrc": "23643:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "23643:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "23689:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "23689:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "23683:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "23683:5:16"
																		},
																		"nativeSrc": "23683:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "23683:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "23657:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "23657:25:16"
																},
																"nativeSrc": "23657:38:16",
																"nodeType": "YulFunctionCall",
																"src": "23657:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "23647:6:16",
																	"nodeType": "YulTypedName",
																	"src": "23647:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23788:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "23788:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "23794:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "23794:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "23802:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "23802:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "23742:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "23742:45:16"
																},
																"nativeSrc": "23742:67:16",
																"nodeType": "YulFunctionCall",
																"src": "23742:67:16"
															},
															"nativeSrc": "23742:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "23742:67:16"
														},
														{
															"nativeSrc": "23819:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "23819:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "23836:1:16",
																"nodeType": "YulLiteral",
																"src": "23836:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23823:9:16",
																	"nodeType": "YulTypedName",
																	"src": "23823:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23847:17:16",
															"nodeType": "YulAssignment",
															"src": "23847:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "23860:4:16",
																"nodeType": "YulLiteral",
																"src": "23860:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23847:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "23847:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "23911:611:16",
																		"nodeType": "YulBlock",
																		"src": "23911:611:16",
																		"statements": [
																			{
																				"nativeSrc": "23925:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23925:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "23944:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "23944:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "23956:4:16",
																									"nodeType": "YulLiteral",
																									"src": "23956:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "23952:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "23952:3:16"
																							},
																							"nativeSrc": "23952:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "23952:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "23940:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "23940:3:16"
																					},
																					"nativeSrc": "23940:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "23940:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "23929:7:16",
																						"nodeType": "YulTypedName",
																						"src": "23929:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23976:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23976:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24022:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "24022:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "23990:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "23990:31:16"
																					},
																					"nativeSrc": "23990:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "23990:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "23980:6:16",
																						"nodeType": "YulTypedName",
																						"src": "23980:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24040:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24040:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24049:1:16",
																					"nodeType": "YulLiteral",
																					"src": "24049:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "24044:1:16",
																						"nodeType": "YulTypedName",
																						"src": "24044:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24108:163:16",
																					"nodeType": "YulBlock",
																					"src": "24108:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24133:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "24133:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "24151:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "24151:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "24156:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "24156:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "24147:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "24147:3:16"
																												},
																												"nativeSrc": "24147:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "24147:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "24141:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "24141:5:16"
																										},
																										"nativeSrc": "24141:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "24141:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24126:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "24126:6:16"
																								},
																								"nativeSrc": "24126:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "24126:42:16"
																							},
																							"nativeSrc": "24126:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "24126:42:16"
																						},
																						{
																							"nativeSrc": "24185:24:16",
																							"nodeType": "YulAssignment",
																							"src": "24185:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24199:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "24199:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24207:1:16",
																										"nodeType": "YulLiteral",
																										"src": "24207:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24195:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "24195:3:16"
																								},
																								"nativeSrc": "24195:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "24195:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "24185:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "24185:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "24226:31:16",
																							"nodeType": "YulAssignment",
																							"src": "24226:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "24243:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "24243:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24254:2:16",
																										"nodeType": "YulLiteral",
																										"src": "24254:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24239:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "24239:3:16"
																								},
																								"nativeSrc": "24239:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "24239:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "24226:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "24226:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "24074:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "24074:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24077:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "24077:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24071:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "24071:2:16"
																					},
																					"nativeSrc": "24071:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "24071:14:16"
																				},
																				"nativeSrc": "24063:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "24086:21:16",
																					"nodeType": "YulBlock",
																					"src": "24086:21:16",
																					"statements": [
																						{
																							"nativeSrc": "24088:17:16",
																							"nodeType": "YulAssignment",
																							"src": "24088:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "24097:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "24097:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24100:4:16",
																										"nodeType": "YulLiteral",
																										"src": "24100:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24093:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "24093:3:16"
																								},
																								"nativeSrc": "24093:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "24093:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "24088:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "24088:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "24067:3:16",
																					"nodeType": "YulBlock",
																					"src": "24067:3:16",
																					"statements": []
																				},
																				"src": "24063:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "24307:156:16",
																					"nodeType": "YulBlock",
																					"src": "24307:156:16",
																					"statements": [
																						{
																							"nativeSrc": "24325:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "24325:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24352:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "24352:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24357:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "24357:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24348:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "24348:3:16"
																										},
																										"nativeSrc": "24348:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "24348:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24342:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "24342:5:16"
																								},
																								"nativeSrc": "24342:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "24342:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "24329:9:16",
																									"nodeType": "YulTypedName",
																									"src": "24329:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24392:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "24392:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "24419:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "24419:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "24434:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "24434:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "24442:4:16",
																														"nodeType": "YulLiteral",
																														"src": "24442:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "24430:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "24430:3:16"
																												},
																												"nativeSrc": "24430:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "24430:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "24400:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "24400:18:16"
																										},
																										"nativeSrc": "24400:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "24400:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24385:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "24385:6:16"
																								},
																								"nativeSrc": "24385:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "24385:64:16"
																							},
																							"nativeSrc": "24385:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "24385:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24290:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "24290:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "24299:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "24299:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24287:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "24287:2:16"
																					},
																					"nativeSrc": "24287:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "24287:19:16"
																				},
																				"nativeSrc": "24284:179:16",
																				"nodeType": "YulIf",
																				"src": "24284:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24483:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "24483:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "24497:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "24497:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "24505:1:16",
																											"nodeType": "YulLiteral",
																											"src": "24505:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "24493:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "24493:3:16"
																									},
																									"nativeSrc": "24493:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "24493:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "24509:1:16",
																									"nodeType": "YulLiteral",
																									"src": "24509:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "24489:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "24489:3:16"
																							},
																							"nativeSrc": "24489:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "24489:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24476:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "24476:6:16"
																					},
																					"nativeSrc": "24476:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "24476:36:16"
																				},
																				"nativeSrc": "24476:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "24476:36:16"
																			}
																		]
																	},
																	"nativeSrc": "23904:618:16",
																	"nodeType": "YulCase",
																	"src": "23904:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23909:1:16",
																		"nodeType": "YulLiteral",
																		"src": "23909:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "24539:222:16",
																		"nodeType": "YulBlock",
																		"src": "24539:222:16",
																		"statements": [
																			{
																				"nativeSrc": "24553:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24553:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24566:1:16",
																					"nodeType": "YulLiteral",
																					"src": "24566:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "24557:5:16",
																						"nodeType": "YulTypedName",
																						"src": "24557:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24590:67:16",
																					"nodeType": "YulBlock",
																					"src": "24590:67:16",
																					"statements": [
																						{
																							"nativeSrc": "24608:35:16",
																							"nodeType": "YulAssignment",
																							"src": "24608:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24627:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "24627:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24632:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "24632:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24623:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "24623:3:16"
																										},
																										"nativeSrc": "24623:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "24623:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24617:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "24617:5:16"
																								},
																								"nativeSrc": "24617:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "24617:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "24608:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "24608:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "24583:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "24583:6:16"
																				},
																				"nativeSrc": "24580:77:16",
																				"nodeType": "YulIf",
																				"src": "24580:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24677:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "24677:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "24736:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "24736:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "24743:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "24743:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "24683:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "24683:52:16"
																							},
																							"nativeSrc": "24683:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "24683:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24670:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "24670:6:16"
																					},
																					"nativeSrc": "24670:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "24670:81:16"
																				},
																				"nativeSrc": "24670:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "24670:81:16"
																			}
																		]
																	},
																	"nativeSrc": "24531:230:16",
																	"nodeType": "YulCase",
																	"src": "24531:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23884:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "23884:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23892:2:16",
																		"nodeType": "YulLiteral",
																		"src": "23892:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23881:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "23881:2:16"
																},
																"nativeSrc": "23881:14:16",
																"nodeType": "YulFunctionCall",
																"src": "23881:14:16"
															},
															"nativeSrc": "23874:887:16",
															"nodeType": "YulSwitch",
															"src": "23874:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "23372:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23453:4:16",
														"nodeType": "YulTypedName",
														"src": "23453:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "23459:3:16",
														"nodeType": "YulTypedName",
														"src": "23459:3:16",
														"type": ""
													}
												],
												"src": "23372:1395:16"
											},
											{
												"body": {
													"nativeSrc": "24899:206:16",
													"nodeType": "YulBlock",
													"src": "24899:206:16",
													"statements": [
														{
															"nativeSrc": "24909:26:16",
															"nodeType": "YulAssignment",
															"src": "24909:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24921:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "24921:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24932:2:16",
																		"nodeType": "YulLiteral",
																		"src": "24932:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24917:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "24917:3:16"
																},
																"nativeSrc": "24917:18:16",
																"nodeType": "YulFunctionCall",
																"src": "24917:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24909:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "24909:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24989:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "24989:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25002:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "25002:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25013:1:16",
																				"nodeType": "YulLiteral",
																				"src": "25013:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24998:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "24998:3:16"
																		},
																		"nativeSrc": "24998:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "24998:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24945:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "24945:43:16"
																},
																"nativeSrc": "24945:71:16",
																"nodeType": "YulFunctionCall",
																"src": "24945:71:16"
															},
															"nativeSrc": "24945:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "24945:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25070:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "25070:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25083:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "25083:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25094:2:16",
																				"nodeType": "YulLiteral",
																				"src": "25094:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25079:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "25079:3:16"
																		},
																		"nativeSrc": "25079:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "25079:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25026:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "25026:43:16"
																},
																"nativeSrc": "25026:72:16",
																"nodeType": "YulFunctionCall",
																"src": "25026:72:16"
															},
															"nativeSrc": "25026:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "25026:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "24773:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24863:9:16",
														"nodeType": "YulTypedName",
														"src": "24863:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24875:6:16",
														"nodeType": "YulTypedName",
														"src": "24875:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24883:6:16",
														"nodeType": "YulTypedName",
														"src": "24883:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24894:4:16",
														"nodeType": "YulTypedName",
														"src": "24894:4:16",
														"type": ""
													}
												],
												"src": "24773:332:16"
											},
											{
												"body": {
													"nativeSrc": "25169:40:16",
													"nodeType": "YulBlock",
													"src": "25169:40:16",
													"statements": [
														{
															"nativeSrc": "25180:22:16",
															"nodeType": "YulAssignment",
															"src": "25180:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25196:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "25196:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "25190:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "25190:5:16"
																},
																"nativeSrc": "25190:12:16",
																"nodeType": "YulFunctionCall",
																"src": "25190:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "25180:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "25180:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "25111:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25152:5:16",
														"nodeType": "YulTypedName",
														"src": "25152:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "25162:6:16",
														"nodeType": "YulTypedName",
														"src": "25162:6:16",
														"type": ""
													}
												],
												"src": "25111:98:16"
											},
											{
												"body": {
													"nativeSrc": "25328:34:16",
													"nodeType": "YulBlock",
													"src": "25328:34:16",
													"statements": [
														{
															"nativeSrc": "25338:18:16",
															"nodeType": "YulAssignment",
															"src": "25338:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "25353:3:16",
																"nodeType": "YulIdentifier",
																"src": "25353:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "25338:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "25338:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "25215:147:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25300:3:16",
														"nodeType": "YulTypedName",
														"src": "25300:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "25305:6:16",
														"nodeType": "YulTypedName",
														"src": "25305:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "25316:11:16",
														"nodeType": "YulTypedName",
														"src": "25316:11:16",
														"type": ""
													}
												],
												"src": "25215:147:16"
											},
											{
												"body": {
													"nativeSrc": "25476:278:16",
													"nodeType": "YulBlock",
													"src": "25476:278:16",
													"statements": [
														{
															"nativeSrc": "25486:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "25486:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25532:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "25532:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "25500:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "25500:31:16"
																},
																"nativeSrc": "25500:38:16",
																"nodeType": "YulFunctionCall",
																"src": "25500:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "25490:6:16",
																	"nodeType": "YulTypedName",
																	"src": "25490:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25547:95:16",
															"nodeType": "YulAssignment",
															"src": "25547:95:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25630:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "25630:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25635:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "25635:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "25554:75:16",
																	"nodeType": "YulIdentifier",
																	"src": "25554:75:16"
																},
																"nativeSrc": "25554:88:16",
																"nodeType": "YulFunctionCall",
																"src": "25554:88:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25547:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "25547:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25690:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "25690:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25697:4:16",
																				"nodeType": "YulLiteral",
																				"src": "25697:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25686:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "25686:3:16"
																		},
																		"nativeSrc": "25686:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "25686:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25704:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "25704:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25709:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "25709:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "25651:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "25651:34:16"
																},
																"nativeSrc": "25651:65:16",
																"nodeType": "YulFunctionCall",
																"src": "25651:65:16"
															},
															"nativeSrc": "25651:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "25651:65:16"
														},
														{
															"nativeSrc": "25725:23:16",
															"nodeType": "YulAssignment",
															"src": "25725:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25736:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "25736:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25741:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "25741:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25732:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "25732:3:16"
																},
																"nativeSrc": "25732:16:16",
																"nodeType": "YulFunctionCall",
																"src": "25732:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25725:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "25725:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "25368:386:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25457:5:16",
														"nodeType": "YulTypedName",
														"src": "25457:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "25464:3:16",
														"nodeType": "YulTypedName",
														"src": "25464:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25472:3:16",
														"nodeType": "YulTypedName",
														"src": "25472:3:16",
														"type": ""
													}
												],
												"src": "25368:386:16"
											},
											{
												"body": {
													"nativeSrc": "25894:137:16",
													"nodeType": "YulBlock",
													"src": "25894:137:16",
													"statements": [
														{
															"nativeSrc": "25905:100:16",
															"nodeType": "YulAssignment",
															"src": "25905:100:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25992:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "25992:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "26001:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "26001:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "25912:79:16",
																	"nodeType": "YulIdentifier",
																	"src": "25912:79:16"
																},
																"nativeSrc": "25912:93:16",
																"nodeType": "YulFunctionCall",
																"src": "25912:93:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25905:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "25905:3:16"
																}
															]
														},
														{
															"nativeSrc": "26015:10:16",
															"nodeType": "YulAssignment",
															"src": "26015:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "26022:3:16",
																"nodeType": "YulIdentifier",
																"src": "26022:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26015:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "26015:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "25760:271:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25873:3:16",
														"nodeType": "YulTypedName",
														"src": "25873:3:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25879:6:16",
														"nodeType": "YulTypedName",
														"src": "25879:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25890:3:16",
														"nodeType": "YulTypedName",
														"src": "25890:3:16",
														"type": ""
													}
												],
												"src": "25760:271:16"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct Schedule -> struct Schedule\n    function abi_encode_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // endTime\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // portion\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Schedule[] -> struct Schedule[]\n    function abi_encode_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Schedule_$1048_memory_ptr_to_t_struct$_Schedule_$1048_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct Vesting -> struct Vesting\n    function abi_encode_t_struct$_Vesting_$1057_memory_ptr_to_t_struct$_Vesting_$1057_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // startTime\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // cliff\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // schedule\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Vesting_$1057_memory_ptr__to_t_struct$_Vesting_$1057_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Vesting_$1057_memory_ptr_to_t_struct$_Vesting_$1057_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct Schedule[]\n    function abi_decode_t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x40)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x00() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x00)\n        revert(0, 0x24)\n    }\n\n    function read_from_calldatat_uint256(ptr) -> returnValue {\n\n        let value := calldataload(ptr)\n        validator_revert_t_uint256(value)\n\n        returnValue :=\n\n        value\n\n    }\n\n    function shift_left_0(value) -> newValue {\n        newValue :=\n\n        shl(0, value)\n\n    }\n\n    function update_byte_slice_32_shift_0(value, toInsert) -> result {\n        let mask := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        toInsert := shift_left_0(toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_offset_0t_uint256_to_t_uint256(slot, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_32_shift_0(sload(slot), prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function copy_struct_to_storage_from_t_struct$_Schedule_$1048_calldata_ptr_to_t_struct$_Schedule_$1048_storage(slot, value) {\n\n        {\n\n            let memberSlot := add(slot, 0)\n            let memberSrcPtr := add(value, 0)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint256(memberValue_0)\n\n            update_storage_value_offset_0t_uint256_to_t_uint256(memberSlot, memberValue_0)\n\n        }\n\n        {\n\n            let memberSlot := add(slot, 1)\n            let memberSrcPtr := add(value, 32)\n\n            let memberValue_0 :=\n\n            memberSrcPtr\n\n            memberValue_0 := read_from_calldatat_uint256(memberValue_0)\n\n            update_storage_value_offset_0t_uint256_to_t_uint256(memberSlot, memberValue_0)\n\n        }\n\n    }\n\n    function update_storage_value_offset_0t_struct$_Schedule_$1048_calldata_ptr_to_t_struct$_Schedule_$1048_storage(slot, value_0) {\n\n        copy_struct_to_storage_from_t_struct$_Schedule_$1048_calldata_ptr_to_t_struct$_Schedule_$1048_storage(slot, value_0)\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c806343e8be32116100a057806395d89b411161006f57806395d89b41146102a3578063a9059cbb146102c1578063ca5c7b91146102f1578063dd62ed3e1461030f578063fd3d27b81461033f57610109565b806343e8be32146102315780634e71d92d1461024d57806370a08231146102575780638f15b4141461028757610109565b806325d998bb116100dc57806325d998bb146101a9578063313ce567146101d95780633a05f0d8146101f757806340c10f191461021557610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b61011561035d565b6040516101229190611cb9565b60405180910390f35b61014560048036038101906101409190611d6e565b6103fb565b6040516101529190611dc6565b60405180910390f35b61016361041d565b6040516101709190611dee565b60405180910390f35b610193600480360381019061018e9190611e07565b610434565b6040516101a09190611dc6565b60405180910390f35b6101c360048036038101906101be9190611e57565b610462565b6040516101d09190611dee565b60405180910390f35b6101e16104bb565b6040516101ee9190611e9d565b60405180910390f35b6101ff6104c3565b60405161020c9190611fe7565b60405180910390f35b61022f600480360381019061022a9190611d6e565b61055f565b005b61024b60048036038101906102469190612068565b6106e8565b005b610255610806565b005b610271600480360381019061026c9190611e57565b6108f7565b60405161027e9190611dee565b60405180910390f35b6102a1600480360381019061029c919061212e565b61094a565b005b6102ab610c16565b6040516102b89190611cb9565b60405180910390f35b6102db60048036038101906102d69190611d6e565b610cb4565b6040516102e89190611dc6565b60405180910390f35b6102f9610cd6565b6040516103069190611dee565b60405180910390f35b610329600480360381019061032491906121d1565b610cf1565b6040516103369190611dee565b60405180910390f35b610347610d81565b6040516103549190611dee565b60405180910390f35b60605f610368610d8f565b90508060030180546103799061223c565b80601f01602080910402602001604051908101604052809291908181526020018280546103a59061223c565b80156103f05780601f106103c7576101008083540402835291602001916103f0565b820191905f5260205f20905b8154815290600101906020018083116103d357829003601f168201915b505050505091505090565b5f80610405610db6565b9050610412818585610dbd565b600191505092915050565b5f80610427610d8f565b9050806002015491505090565b5f8061043e610db6565b905061044b858285610dcf565b610456858585610e61565b60019150509392505050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546104aa83610f51565b6104b49190612299565b9050919050565b5f6012905090565b6104cb611c2a565b60036040518060600160405290815f82015481526020016001820154815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015610552578382905f5260205f2090600202016040518060400160405290815f82015481526020016001820154815250508152602001906001019061050f565b5050505081525050905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e3576040517f9cdc2ed500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600101544210610621576040517fd45c7f9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61066f33308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fa0909392919063ffffffff16565b6106798282611022565b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106c591906122cc565b925050819055508060065f8282546106dd91906122cc565b925050819055505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076e576040517f8eccd8b900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82829050905061078285858585856110a1565b8460035f0181905550836003600101819055505f5b818110156107fe5760036002018484838181106107b7576107b66122ff565b5b905060400201908060018154018082558091505060019003905f5260205f2090600202015f9091909190915081816107ef9190612427565b50508080600101915050610797565b505050505050565b5f61081033610462565b90505f810361084b576040517f08bc1cf600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461089791906122cc565b925050819055506108a83382611278565b6108f4338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112f79092919063ffffffff16565b50565b5f80610901610d8f565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b5f610953611376565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561099b5750825b90505f60018367ffffffffffffffff161480156109ce57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156109dc575080155b15610a13576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610a60576001855f0160086101000a81548160ff0219169083151502179055505b610af08b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050508a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505061139d565b865f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c09575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c009190612481565b60405180910390a15b5050505050505050505050565b60605f610c21610d8f565b9050806004018054610c329061223c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5e9061223c565b8015610ca95780601f10610c8057610100808354040283529160200191610ca9565b820191905f5260205f20905b815481529060010190602001808311610c8c57829003601f168201915b505050505091505090565b5f80610cbe610db6565b9050610ccb818585610e61565b600191505092915050565b5f610cdf6113b3565b600654610cec9190612299565b905090565b5f80610cfb610d8f565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b5f610d8a6113b3565b905090565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610dca83838360016113c5565b505050565b5f610dda8484610cf1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610e5b5781811015610e4c578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610e43939291906124a9565b60405180910390fd5b610e5a84848484035f6113c5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed1575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ec891906124de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f41575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610f3891906124de565b60405180910390fd5b610f4c8383836115a2565b505050565b5f610f9960075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426117d1565b9050919050565b61101c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610fd5939291906124f7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061194a565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611092575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161108991906124de565b60405180910390fd5b61109d5f83836115a2565b5050565b428510156110db576040517fc18dfcc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83851115611115576040517f8147e9e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805f90505b8281101561123457848482818110611136576111356122ff565b5b905060400201602001358261114b91906122cc565b91505f8082141580156111a0575085858381811061116c5761116b6122ff565b5b9050604002015f013586866001856111849190612299565b818110611194576111936122ff565b5b9050604002015f013510155b90508585838181106111b5576111b46122ff565b5b9050604002015f0135871015806111c95750805b15611226578585838181106111e1576111e06122ff565b5b9050604002015f01356040517f1a3250bd00000000000000000000000000000000000000000000000000000000815260040161121d9190611dee565b60405180910390fd5b50808060010191505061111b565b506127108114611270576040517fc45b8e2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112e8575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112df91906124de565b60405180910390fd5b6112f3825f836115a2565b5050565b611371838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161132a92919061252c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061194a565b505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6113a56119df565b6113af8282611a1f565b5050565b5f6113c0600654426117d1565b905090565b5f6113ce610d8f565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611440575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161143791906124de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114b0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114a791906124de565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550811561159b578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516115929190611dee565b60405180910390a35b5050505050565b5f6115ab610d8f565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115ff5781816002015f8282546115f391906122cc565b925050819055506116d1565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508281101561168a578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611681939291906124a9565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361171a5781816002015f8282540392505081905550611766565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117c39190611dee565b60405180910390a350505050565b5f6003600101548210156117e7575f9050611944565b5f60036001015490505f6003600201805480602002602001604051908101604052809291908181526020015f905b82821015611858578382905f5260205f2090600202016040518060400160405290815f820154815260200160018201548152505081526020019060010190611815565b5050505090505f815190505f5b8181101561193f575f838281518110611881576118806122ff565b5b602002602001015190505f815f015190505f8260200151905081891015611906575f878a6118af9190612299565b90505f88846118be9190612299565b9050612710816118ce9190612553565b83838e6118db9190612553565b6118e59190612553565b6118ef91906125c1565b8a6118fa91906122cc565b9950505050505061193f565b612710818b6119159190612553565b61191f91906125c1565b8861192a91906122cc565b97508196505050508080600101915050611865565b505050505b92915050565b5f611974828473ffffffffffffffffffffffffffffffffffffffff16611a5b90919063ffffffff16565b90505f815114158015611998575080806020019051810190611996919061261b565b155b156119da57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016119d191906124de565b60405180910390fd5b505050565b6119e7611a70565b611a1d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611a276119df565b5f611a30610d8f565b905082816003019081611a4391906127dd565b5081816004019081611a5591906127dd565b50505050565b6060611a6883835f611a8e565b905092915050565b5f611a79611376565b5f0160089054906101000a900460ff16905090565b606081471015611ad75747826040517fcf479181000000000000000000000000000000000000000000000000000000008152600401611ace9291906128ac565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff168486604051611aff9190612917565b5f6040518083038185875af1925050503d805f8114611b39576040519150601f19603f3d011682016040523d82523d5f602084013e611b3e565b606091505b5091509150611b4e868383611b59565b925050509392505050565b606082611b6e57611b6982611be6565b611bde565b5f8251148015611b9457505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611bd657836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611bcd91906124de565b60405180910390fd5b819050611bdf565b5b9392505050565b5f81511115611bf85780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180606001604052805f81526020015f8152602001606081525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611c8b82611c49565b611c958185611c53565b9350611ca5818560208601611c63565b611cae81611c71565b840191505092915050565b5f6020820190508181035f830152611cd18184611c81565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d0a82611ce1565b9050919050565b611d1a81611d00565b8114611d24575f80fd5b50565b5f81359050611d3581611d11565b92915050565b5f819050919050565b611d4d81611d3b565b8114611d57575f80fd5b50565b5f81359050611d6881611d44565b92915050565b5f8060408385031215611d8457611d83611cd9565b5b5f611d9185828601611d27565b9250506020611da285828601611d5a565b9150509250929050565b5f8115159050919050565b611dc081611dac565b82525050565b5f602082019050611dd95f830184611db7565b92915050565b611de881611d3b565b82525050565b5f602082019050611e015f830184611ddf565b92915050565b5f805f60608486031215611e1e57611e1d611cd9565b5b5f611e2b86828701611d27565b9350506020611e3c86828701611d27565b9250506040611e4d86828701611d5a565b9150509250925092565b5f60208284031215611e6c57611e6b611cd9565b5b5f611e7984828501611d27565b91505092915050565b5f60ff82169050919050565b611e9781611e82565b82525050565b5f602082019050611eb05f830184611e8e565b92915050565b611ebf81611d3b565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b604082015f820151611f025f850182611eb6565b506020820151611f156020850182611eb6565b50505050565b5f611f268383611eee565b60408301905092915050565b5f602082019050919050565b5f611f4882611ec5565b611f528185611ecf565b9350611f5d83611edf565b805f5b83811015611f8d578151611f748882611f1b565b9750611f7f83611f32565b925050600181019050611f60565b5085935050505092915050565b5f606083015f830151611faf5f860182611eb6565b506020830151611fc26020860182611eb6565b5060408301518482036040860152611fda8282611f3e565b9150508091505092915050565b5f6020820190508181035f830152611fff8184611f9a565b905092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261202857612027612007565b5b8235905067ffffffffffffffff8111156120455761204461200b565b5b6020830191508360408202830111156120615761206061200f565b5b9250929050565b5f805f80606085870312156120805761207f611cd9565b5b5f61208d87828801611d5a565b945050602061209e87828801611d5a565b935050604085013567ffffffffffffffff8111156120bf576120be611cdd565b5b6120cb87828801612013565b925092505092959194509250565b5f8083601f8401126120ee576120ed612007565b5b8235905067ffffffffffffffff81111561210b5761210a61200b565b5b6020830191508360018202830111156121275761212661200f565b5b9250929050565b5f805f805f806080878903121561214857612147611cd9565b5b5f87013567ffffffffffffffff81111561216557612164611cdd565b5b61217189828a016120d9565b9650965050602087013567ffffffffffffffff81111561219457612193611cdd565b5b6121a089828a016120d9565b945094505060406121b389828a01611d27565b92505060606121c489828a01611d27565b9150509295509295509295565b5f80604083850312156121e7576121e6611cd9565b5b5f6121f485828601611d27565b925050602061220585828601611d27565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061225357607f821691505b6020821081036122665761226561220f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122a382611d3b565b91506122ae83611d3b565b92508282039050818111156122c6576122c561226c565b5b92915050565b5f6122d682611d3b565b91506122e183611d3b565b92508282019050808211156122f9576122f861226c565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f813561233881611d44565b80915050919050565b5f815f1b9050919050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61237784612341565b9350801983169250808416831791505092915050565b5f819050919050565b5f6123b06123ab6123a684611d3b565b61238d565b611d3b565b9050919050565b5f819050919050565b6123c982612396565b6123dc6123d5826123b7565b835461234c565b8255505050565b5f81015f8301806123f38161232c565b90506123ff81846123c0565b5050506001810160208301806124148161232c565b905061242081846123c0565b5050505050565b61243182826123e3565b5050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f61246b61246661246184612435565b61238d565b61243e565b9050919050565b61247b81612451565b82525050565b5f6020820190506124945f830184612472565b92915050565b6124a381611d00565b82525050565b5f6060820190506124bc5f83018661249a565b6124c96020830185611ddf565b6124d66040830184611ddf565b949350505050565b5f6020820190506124f15f83018461249a565b92915050565b5f60608201905061250a5f83018661249a565b612517602083018561249a565b6125246040830184611ddf565b949350505050565b5f60408201905061253f5f83018561249a565b61254c6020830184611ddf565b9392505050565b5f61255d82611d3b565b915061256883611d3b565b925082820261257681611d3b565b9150828204841483151761258d5761258c61226c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6125cb82611d3b565b91506125d683611d3b565b9250826125e6576125e5612594565b5b828204905092915050565b6125fa81611dac565b8114612604575f80fd5b50565b5f81519050612615816125f1565b92915050565b5f602082840312156126305761262f611cd9565b5b5f61263d84828501612607565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126cf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612694565b6126d98683612694565b95508019841693508086168417925050509392505050565b6126fa83612396565b61270e612706826123b7565b8484546126a0565b825550505050565b5f90565b612722612716565b61272d8184846126f1565b505050565b5b81811015612750576127455f8261271a565b600181019050612733565b5050565b601f8211156127955761276681612673565b61276f84612685565b8101602085101561277e578190505b61279261278a85612685565b830182612732565b50505b505050565b5f82821c905092915050565b5f6127b55f198460080261279a565b1980831691505092915050565b5f6127cd83836127a6565b9150826002028217905092915050565b6127e682611c49565b67ffffffffffffffff8111156127ff576127fe612646565b5b612809825461223c565b612814828285612754565b5f60209050601f831160018114612845575f8415612833578287015190505b61283d85826127c2565b8655506128a4565b601f19841661285386612673565b5f5b8281101561287a57848901518255600182019150602085019450602081019050612855565b868310156128975784890151612893601f8916826127a6565b8355505b6001600288020188555050505b505050505050565b5f6040820190506128bf5f830185611ddf565b6128cc6020830184611ddf565b9392505050565b5f81519050919050565b5f81905092915050565b5f6128f1826128d3565b6128fb81856128dd565b935061290b818560208601611c63565b80840191505092915050565b5f61292282846128e7565b91508190509291505056fea26469706673582212202c783ece8850b56f72678b3039e0e3b3c6778d793cdce73474d7c30a64a2e6b464736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43E8BE32 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xCA5C7B91 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFD3D27B8 EQ PUSH2 0x33F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x43E8BE32 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x8F15B414 EQ PUSH2 0x287 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x25D998BB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x25D998BB EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3A05F0D8 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1E9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2068 JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1E57 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x368 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x379 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A5 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x405 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x412 DUP2 DUP6 DUP6 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x427 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x43E PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x44B DUP6 DUP3 DUP6 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x456 DUP6 DUP6 DUP6 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x4AA DUP4 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4CB PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x552 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x50F JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9CDC2ED500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 ADD SLOAD TIMESTAMP LT PUSH2 0x621 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD45C7F9500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFA0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x679 DUP3 DUP3 PUSH2 0x1022 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8ECCD8B900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP SWAP1 POP PUSH2 0x782 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10A1 JUMP JUMPDEST DUP5 PUSH1 0x3 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x3 PUSH1 0x2 ADD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x7B7 JUMPI PUSH2 0x7B6 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP DUP2 DUP2 PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x2427 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x797 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x810 CALLER PUSH2 0x462 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8BC1CF600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x897 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8A8 CALLER DUP3 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x8F4 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x901 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x953 PUSH2 0x1376 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x99B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x9CE JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x9DC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xA60 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xAF0 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP11 DUP11 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x139D JUMP JUMPDEST DUP7 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC09 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x2481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xC21 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xC32 SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC5E SWAP1 PUSH2 0x223C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC80 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCBE PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP PUSH2 0xCCB DUP2 DUP6 DUP6 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCDF PUSH2 0x13B3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xCEC SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCFB PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD8A PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDCA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDDA DUP5 DUP5 PUSH2 0xCF1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xE5B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xE4C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE43 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x13C5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF41 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4C DUP4 DUP4 DUP4 PUSH2 0x15A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF99 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x17D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x101C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xFD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x194A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1092 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x109D PUSH0 DUP4 DUP4 PUSH2 0x15A2 JUMP JUMPDEST POP POP JUMP JUMPDEST TIMESTAMP DUP6 LT ISZERO PUSH2 0x10DB JUMPI PUSH1 0x40 MLOAD PUSH32 0xC18DFCC200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP6 GT ISZERO PUSH2 0x1115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8147E9E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1234 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH1 0x20 ADD CALLDATALOAD DUP3 PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP2 POP PUSH0 DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x11A0 JUMPI POP DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x116C JUMPI PUSH2 0x116B PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD CALLDATALOAD DUP7 DUP7 PUSH1 0x1 DUP6 PUSH2 0x1184 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1194 JUMPI PUSH2 0x1193 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD CALLDATALOAD LT ISZERO JUMPDEST SWAP1 POP DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD CALLDATALOAD DUP8 LT ISZERO DUP1 PUSH2 0x11C9 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1226 JUMPI DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD PUSH0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH32 0x1A3250BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121D SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x111B JUMP JUMPDEST POP PUSH2 0x2710 DUP2 EQ PUSH2 0x1270 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC45B8E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12E8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DF SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12F3 DUP3 PUSH0 DUP4 PUSH2 0x15A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1371 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x132A SWAP3 SWAP2 SWAP1 PUSH2 0x252C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x194A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13A5 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x13AF DUP3 DUP3 PUSH2 0x1A1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13C0 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x17D1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x13CE PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1440 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1437 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A7 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x159B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1592 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15AB PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15FF JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16D1 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x168A JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1681 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x171A JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1766 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x17C3 SWAP2 SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x1 ADD SLOAD DUP3 LT ISZERO PUSH2 0x17E7 JUMPI PUSH0 SWAP1 POP PUSH2 0x1944 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1858 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1815 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x193F JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1881 JUMPI PUSH2 0x1880 PUSH2 0x22FF JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 DUP10 LT ISZERO PUSH2 0x1906 JUMPI PUSH0 DUP8 DUP11 PUSH2 0x18AF SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST SWAP1 POP PUSH0 DUP9 DUP5 PUSH2 0x18BE SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 DUP2 PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST DUP4 DUP4 DUP15 PUSH2 0x18DB SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x18E5 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x25C1 JUMP JUMPDEST DUP11 PUSH2 0x18FA SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP10 POP POP POP POP POP POP PUSH2 0x193F JUMP JUMPDEST PUSH2 0x2710 DUP2 DUP12 PUSH2 0x1915 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0x191F SWAP2 SWAP1 PUSH2 0x25C1 JUMP JUMPDEST DUP9 PUSH2 0x192A SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST SWAP8 POP DUP2 SWAP7 POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1865 JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1974 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A5B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1998 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1996 SWAP2 SWAP1 PUSH2 0x261B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x19DA JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D1 SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x19E7 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x1A1D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1A27 PUSH2 0x19DF JUMP JUMPDEST PUSH0 PUSH2 0x1A30 PUSH2 0xD8F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1A43 SWAP2 SWAP1 PUSH2 0x27DD JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x27DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A68 DUP4 DUP4 PUSH0 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A79 PUSH2 0x1376 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1AD7 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ACE SWAP3 SWAP2 SWAP1 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1AFF SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1B39 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1B4E DUP7 DUP4 DUP4 PUSH2 0x1B59 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1B6E JUMPI PUSH2 0x1B69 DUP3 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x1BDE JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1B94 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1BD6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCD SWAP2 SWAP1 PUSH2 0x24DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1BF8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8B DUP3 PUSH2 0x1C49 JUMP JUMPDEST PUSH2 0x1C95 DUP2 DUP6 PUSH2 0x1C53 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CA5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1CAE DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD1 DUP2 DUP5 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0A DUP3 PUSH2 0x1CE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D1A DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D24 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D35 DUP2 PUSH2 0x1D11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D4D DUP2 PUSH2 0x1D3B JUMP JUMPDEST DUP2 EQ PUSH2 0x1D57 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D68 DUP2 PUSH2 0x1D44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D84 JUMPI PUSH2 0x1D83 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D91 DUP6 DUP3 DUP7 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA2 DUP6 DUP3 DUP7 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC0 DUP2 PUSH2 0x1DAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE8 DUP2 PUSH2 0x1D3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E01 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E1E JUMPI PUSH2 0x1E1D PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2B DUP7 DUP3 DUP8 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E3C DUP7 DUP3 DUP8 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E4D DUP7 DUP3 DUP8 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E79 DUP5 DUP3 DUP6 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E97 DUP2 PUSH2 0x1E82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EBF DUP2 PUSH2 0x1D3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1F02 PUSH0 DUP6 ADD DUP3 PUSH2 0x1EB6 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1F15 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1EB6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F26 DUP4 DUP4 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F48 DUP3 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1F52 DUP2 DUP6 PUSH2 0x1ECF JUMP JUMPDEST SWAP4 POP PUSH2 0x1F5D DUP4 PUSH2 0x1EDF JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F8D JUMPI DUP2 MLOAD PUSH2 0x1F74 DUP9 DUP3 PUSH2 0x1F1B JUMP JUMPDEST SWAP8 POP PUSH2 0x1F7F DUP4 PUSH2 0x1F32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1F60 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x1FAF PUSH0 DUP7 ADD DUP3 PUSH2 0x1EB6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x1FC2 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x1EB6 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1FDA DUP3 DUP3 PUSH2 0x1F3E JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FFF DUP2 DUP5 PUSH2 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2028 JUMPI PUSH2 0x2027 PUSH2 0x2007 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x200B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2061 JUMPI PUSH2 0x2060 PUSH2 0x200F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2080 JUMPI PUSH2 0x207F PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208D DUP8 DUP3 DUP9 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x209E DUP8 DUP3 DUP9 ADD PUSH2 0x1D5A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20BF JUMPI PUSH2 0x20BE PUSH2 0x1CDD JUMP JUMPDEST JUMPDEST PUSH2 0x20CB DUP8 DUP3 DUP9 ADD PUSH2 0x2013 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20EE JUMPI PUSH2 0x20ED PUSH2 0x2007 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x210B JUMPI PUSH2 0x210A PUSH2 0x200B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2127 JUMPI PUSH2 0x2126 PUSH2 0x200F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2148 JUMPI PUSH2 0x2147 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2165 JUMPI PUSH2 0x2164 PUSH2 0x1CDD JUMP JUMPDEST JUMPDEST PUSH2 0x2171 DUP10 DUP3 DUP11 ADD PUSH2 0x20D9 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2194 JUMPI PUSH2 0x2193 PUSH2 0x1CDD JUMP JUMPDEST JUMPDEST PUSH2 0x21A0 DUP10 DUP3 DUP11 ADD PUSH2 0x20D9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 PUSH2 0x21B3 DUP10 DUP3 DUP11 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x21C4 DUP10 DUP3 DUP11 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E7 JUMPI PUSH2 0x21E6 PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21F4 DUP6 DUP3 DUP7 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2205 DUP6 DUP3 DUP7 ADD PUSH2 0x1D27 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2253 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2266 JUMPI PUSH2 0x2265 PUSH2 0x220F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22A3 DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x22AE DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x22C6 JUMPI PUSH2 0x22C5 PUSH2 0x226C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22D6 DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x22E1 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22F9 JUMPI PUSH2 0x22F8 PUSH2 0x226C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 CALLDATALOAD PUSH2 0x2338 DUP2 PUSH2 0x1D44 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2377 DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP4 POP DUP1 NOT DUP4 AND SWAP3 POP DUP1 DUP5 AND DUP4 OR SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B0 PUSH2 0x23AB PUSH2 0x23A6 DUP5 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x238D JUMP JUMPDEST PUSH2 0x1D3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23C9 DUP3 PUSH2 0x2396 JUMP JUMPDEST PUSH2 0x23DC PUSH2 0x23D5 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP4 SLOAD PUSH2 0x234C JUMP JUMPDEST DUP3 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 ADD PUSH0 DUP4 ADD DUP1 PUSH2 0x23F3 DUP2 PUSH2 0x232C JUMP JUMPDEST SWAP1 POP PUSH2 0x23FF DUP2 DUP5 PUSH2 0x23C0 JUMP JUMPDEST POP POP POP PUSH1 0x1 DUP2 ADD PUSH1 0x20 DUP4 ADD DUP1 PUSH2 0x2414 DUP2 PUSH2 0x232C JUMP JUMPDEST SWAP1 POP PUSH2 0x2420 DUP2 DUP5 PUSH2 0x23C0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2431 DUP3 DUP3 PUSH2 0x23E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x246B PUSH2 0x2466 PUSH2 0x2461 DUP5 PUSH2 0x2435 JUMP JUMPDEST PUSH2 0x238D JUMP JUMPDEST PUSH2 0x243E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x247B DUP2 PUSH2 0x2451 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2494 PUSH0 DUP4 ADD DUP5 PUSH2 0x2472 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24A3 DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24BC PUSH0 DUP4 ADD DUP7 PUSH2 0x249A JUMP JUMPDEST PUSH2 0x24C9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DDF JUMP JUMPDEST PUSH2 0x24D6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x249A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH0 DUP4 ADD DUP7 PUSH2 0x249A JUMP JUMPDEST PUSH2 0x2517 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x249A JUMP JUMPDEST PUSH2 0x2524 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x253F PUSH0 DUP4 ADD DUP6 PUSH2 0x249A JUMP JUMPDEST PUSH2 0x254C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x255D DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x2568 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2576 DUP2 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x258D JUMPI PUSH2 0x258C PUSH2 0x226C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25CB DUP3 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 POP PUSH2 0x25D6 DUP4 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25E6 JUMPI PUSH2 0x25E5 PUSH2 0x2594 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25FA DUP2 PUSH2 0x1DAC JUMP JUMPDEST DUP2 EQ PUSH2 0x2604 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2615 DUP2 PUSH2 0x25F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2630 JUMPI PUSH2 0x262F PUSH2 0x1CD9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x263D DUP5 DUP3 DUP6 ADD PUSH2 0x2607 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x26CF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2694 JUMP JUMPDEST PUSH2 0x26D9 DUP7 DUP4 PUSH2 0x2694 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x26FA DUP4 PUSH2 0x2396 JUMP JUMPDEST PUSH2 0x270E PUSH2 0x2706 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26A0 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2722 PUSH2 0x2716 JUMP JUMPDEST PUSH2 0x272D DUP2 DUP5 DUP5 PUSH2 0x26F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2750 JUMPI PUSH2 0x2745 PUSH0 DUP3 PUSH2 0x271A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2733 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2795 JUMPI PUSH2 0x2766 DUP2 PUSH2 0x2673 JUMP JUMPDEST PUSH2 0x276F DUP5 PUSH2 0x2685 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x277E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2792 PUSH2 0x278A DUP6 PUSH2 0x2685 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2732 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27B5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x279A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27CD DUP4 DUP4 PUSH2 0x27A6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27E6 DUP3 PUSH2 0x1C49 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27FF JUMPI PUSH2 0x27FE PUSH2 0x2646 JUMP JUMPDEST JUMPDEST PUSH2 0x2809 DUP3 SLOAD PUSH2 0x223C JUMP JUMPDEST PUSH2 0x2814 DUP3 DUP3 DUP6 PUSH2 0x2754 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2845 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2833 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x283D DUP6 DUP3 PUSH2 0x27C2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28A4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2853 DUP7 PUSH2 0x2673 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x287A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2855 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2897 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2893 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x27A6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28BF PUSH0 DUP4 ADD DUP6 PUSH2 0x1DDF JUMP JUMPDEST PUSH2 0x28CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DDF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28F1 DUP3 PUSH2 0x28D3 JUMP JUMPDEST PUSH2 0x28FB DUP2 DUP6 PUSH2 0x28DD JUMP JUMPDEST SWAP4 POP PUSH2 0x290B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C63 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2922 DUP3 DUP5 PUSH2 0x28E7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH25 0x3ECE8850B56F72678B3039E0E3B3C6778D793CDCE73474D7C3 EXP PUSH5 0xA2E6B46473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1013:7386:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2710:144:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5204:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3890:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5982:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5974:157:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3748:82:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5640:99:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4684:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3163:461;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5259:324;;;:::i;:::-;;4100:171:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2544:288:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2967:148:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4466:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5849:119:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4702:195:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5745:98:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2710:144:14;2755:13;2780:22;2805:18;:16;:18::i;:::-;2780:43;;2840:1;:7;;2833:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2710:144;:::o;5204:186::-;5277:4;5293:13;5309:12;:10;:12::i;:::-;5293:28;;5331:31;5340:5;5347:7;5356:5;5331:8;:31::i;:::-;5379:4;5372:11;;;5204:186;;;;:::o;3890:152::-;3942:7;3961:22;3986:18;:16;:18::i;:::-;3961:43;;4021:1;:14;;;4014:21;;;3890:152;:::o;5982:244::-;6069:4;6085:15;6103:12;:10;:12::i;:::-;6085:30;;6125:37;6141:4;6147:7;6156:5;6125:15;:37::i;:::-;6172:26;6182:4;6188:2;6192:5;6172:9;:26::i;:::-;6215:4;6208:11;;;5982:244;;;;;:::o;5974:157:11:-;6040:18;6106:9;:18;6116:7;6106:18;;;;;;;;;;;;;;;;6083:20;6095:7;6083:11;:20::i;:::-;:41;;;;:::i;:::-;6070:54;;5974:157;;;:::o;3748:82:14:-;3797:5;3821:2;3814:9;;3748:82;:::o;5640:99:11:-;5691:14;;:::i;:::-;5724:8;5717:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5640:99;:::o;4684:359::-;2031:7;;;;;;;;;;2017:21;;:10;:21;;;2013:71;;2061:12;;;;;;;;;;;;;;2013:71;4779:8:::1;:14;;;4760:15;:33;4756:101;;4816:30;;;;;;;;;;;;;;4756:101;4867:62;4895:10;4915:4;4922:6;4867:10;;;;;;;;;;;:27;;;;:62;;;;;;:::i;:::-;4940:17;4946:2;4950:6;4940:5;:17::i;:::-;4990:6;4968:14;:18;4983:2;4968:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;5030:6;5006:20;;:30;;;;;;;:::i;:::-;;;;;;;;4684:359:::0;;:::o;3163:461::-;2166:15;;;;;;;;;;;2152:29;;:10;:29;;;2148:87;;2204:20;;;;;;;;;;;;;;2148:87;3313:22:::1;3338:8;;:15;;3313:40;;3364:65;3386:9;3397:5;3404:8;;3414:14;3364:21;:65::i;:::-;3461:9;3440:8;:18;;:30;;;;3497:5;3480:8;:14;;:22;;;;3518:9;3513:105;3537:14;3533:1;:18;3513:105;;;3572:8;:17;;3595:8;;3604:1;3595:11;;;;;;;:::i;:::-;;;;;;;3572:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3553:3;;;;;;;3513:105;;;;3303:321;3163:461:::0;;;;:::o;5259:324::-;5295:18;5316:30;5335:10;5316:18;:30::i;:::-;5295:51;;5375:1;5361:10;:15;5357:77;;5399:24;;;;;;;;;;;;;;5357:77;5469:10;5444:9;:21;5454:10;5444:21;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;5490:29;5496:10;5508;5490:5;:29::i;:::-;5529:47;5553:10;5565;5529;;;;;;;;;;;:23;;;;:47;;;;;:::i;:::-;5285:298;5259:324::o;4100:171:14:-;4165:7;4184:22;4209:18;:16;:18::i;:::-;4184:43;;4244:1;:11;;:20;4256:7;4244:20;;;;;;;;;;;;;;;;4237:27;;;4100:171;;;:::o;2544:288:11:-;4225:30:12;4258:26;:24;:26::i;:::-;4225:59;;4346:19;4369:1;:15;;;;;;;;;;;;4368:16;4346:38;;4394:18;4415:1;:14;;;;;;;;;;;;4394:35;;4773:17;4808:1;4793:11;:16;;;:34;;;;;4813:14;4793:34;4773:54;;4837:17;4872:1;4857:11;:16;;;:50;;;;;4906:1;4885:4;4877:25;;;:30;4857:50;4837:70;;4923:12;4922:13;:30;;;;;4940:12;4939:13;4922:30;4918:91;;;4975:23;;;;;;;;;;;;;;4918:91;5035:1;5018;:14;;;:18;;;;;;;;;;;;;;;;;;5050:14;5046:67;;;5098:4;5080:1;:15;;;:22;;;;;;;;;;;;;;;;;;5046:67;2694:26:11::1;2707:4;;2694:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:6;;2694:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:26::i;:::-;2741:6;2731:7;::::0;:16:::1;;;;;;;;;;;;;;;;;;2777:9;2757:10;;:30;;;;;;;;;;;;;;;;;;2815:10;2797:15;;:28;;;;;;;;;;;;;;;;;;5137:14:12::0;5133:101;;;5185:5;5167:1;:15;;;:23;;;;;;;;;;;;;;;;;;5209:14;5221:1;5209:14;;;;;;:::i;:::-;;;;;;;;5133:101;4159:1081;;;;;2544:288:11;;;;;;:::o;2967:148:14:-;3014:13;3039:22;3064:18;:16;:18::i;:::-;3039:43;;3099:1;:9;;3092:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2967:148;:::o;4466:178::-;4535:4;4551:13;4567:12;:10;:12::i;:::-;4551:28;;4589:27;4599:5;4606:2;4610:5;4589:9;:27::i;:::-;4633:4;4626:11;;;4466:178;;;;:::o;5849:119:11:-;5896:7;5945:16;:14;:16::i;:::-;5922:20;;:39;;;;:::i;:::-;5915:46;;5849:119;:::o;4702:195:14:-;4782:7;4801:22;4826:18;:16;:18::i;:::-;4801:43;;4861:1;:13;;:20;4875:5;4861:20;;;;;;;;;;;;;;;:29;4882:7;4861:29;;;;;;;;;;;;;;;;4854:36;;;4702:195;;;;:::o;5745:98:11:-;5794:7;5820:16;:14;:16::i;:::-;5813:23;;5745:98;:::o;1941:153:14:-;1991:22;2058:20;2048:30;;1941:153;:::o;887:96:15:-;940:7;966:10;959:17;;887:96;:::o;9995:128:14:-;10079:37;10088:5;10095:7;10104:5;10111:4;10079:8;:37::i;:::-;9995:128;;;:::o;11739:477::-;11838:24;11865:25;11875:5;11882:7;11865:9;:25::i;:::-;11838:52;;11924:17;11904:16;:37;11900:310;;11980:5;11961:16;:24;11957:130;;;12039:7;12048:16;12066:5;12012:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11957:130;12128:57;12137:5;12144:7;12172:5;12153:16;:24;12179:5;12128:8;:57::i;:::-;11900:310;11828:388;11739:477;;;:::o;6599:300::-;6698:1;6682:18;;:4;:18;;;6678:86;;6750:1;6723:30;;;;;;;;;;;:::i;:::-;;;;;;;;6678:86;6791:1;6777:16;;:2;:16;;;6773:86;;6845:1;6816:32;;;;;;;;;;;:::i;:::-;;;;;;;;6773:86;6868:24;6876:4;6882:2;6886:5;6868:7;:24::i;:::-;6599:300;;;:::o;6190:151:11:-;6250:7;6276:58;6293:14;:23;6308:7;6293:23;;;;;;;;;;;;;;;;6318:15;6276:16;:58::i;:::-;6269:65;;6190:151;;;:::o;1702:188:6:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;8727:208:14:-;8816:1;8797:21;;:7;:21;;;8793:91;;8870:1;8841:32;;;;;;;;;;;:::i;:::-;;;;;;;;8793:91;8893:35;8909:1;8913:7;8922:5;8893:7;:35::i;:::-;8727:208;;:::o;3630:865:11:-;3826:15;3814:9;:27;3810:90;;;3864:25;;;;;;;;;;;;;;3810:90;3926:5;3914:9;:17;3910:77;;;3954:22;;;;;;;;;;;;;;3910:77;3997:20;4033:9;4045:1;4033:13;;4028:358;4052:14;4048:1;:18;4028:358;;;4103:8;;4112:1;4103:11;;;;;;;:::i;:::-;;;;;;;:19;;;4087:35;;;;;:::i;:::-;;;4137:24;4170:1;4165;:6;;4164:58;;;;;4203:8;;4212:1;4203:11;;;;;;;:::i;:::-;;;;;;;:19;;;4176:8;;4189:1;4185;:5;;;;:::i;:::-;4176:15;;;;;;;:::i;:::-;;;;;;;:23;;;:46;;4164:58;4137:85;;4250:8;;4259:1;4250:11;;;;;;;:::i;:::-;;;;;;;:19;;;4241:5;:28;;:51;;;;4273:19;4241:51;4237:139;;;4341:8;;4350:1;4341:11;;;;;;;:::i;:::-;;;;;;;:19;;;4319:42;;;;;;;;;;;:::i;:::-;;;;;;;;4237:139;4073:313;4068:3;;;;;;;4028:358;;;;1149:6;4400:12;:28;4396:93;;4451:27;;;;;;;;;;;;;;4396:93;3800:695;3630:865;;;;;:::o;9253:206:14:-;9342:1;9323:21;;:7;:21;;;9319:89;;9394:1;9367:30;;;;;;;;;;;:::i;:::-;;;;;;;;9319:89;9417:35;9425:7;9442:1;9446:5;9417:7;:35::i;:::-;9253:206;;:::o;1303:160:6:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;8804:170:12:-;8862:30;8937:21;8927:31;;8804:170;:::o;2276:147:14:-;6998:20:12;:18;:20::i;:::-;2378:38:14::1;2401:5;2408:7;2378:22;:38::i;:::-;2276:147:::0;;:::o;6347:136:11:-;6395:7;6421:55;6438:20;;6460:15;6421:16;:55::i;:::-;6414:62;;6347:136;:::o;10970:487:14:-;11078:22;11103:18;:16;:18::i;:::-;11078:43;;11152:1;11135:19;;:5;:19;;;11131:89;;11206:1;11177:32;;;;;;;;;;;:::i;:::-;;;;;;;;11131:89;11252:1;11233:21;;:7;:21;;;11229:90;;11305:1;11277:31;;;;;;;;;;;:::i;:::-;;;;;;;;11229:90;11360:5;11328:1;:13;;:20;11342:5;11328:20;;;;;;;;;;;;;;;:29;11349:7;11328:29;;;;;;;;;;;;;;;:37;;;;11379:9;11375:76;;;11425:7;11409:31;;11418:5;11409:31;;;11434:5;11409:31;;;;;;:::i;:::-;;;;;;;;11375:76;11068:389;10970:487;;;;:::o;7214:1170::-;7299:22;7324:18;:16;:18::i;:::-;7299:43;;7372:1;7356:18;;:4;:18;;;7352:546;;7510:5;7492:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7352:546;;;7546:19;7568:1;:11;;:17;7580:4;7568:17;;;;;;;;;;;;;;;;7546:39;;7617:5;7603:11;:19;7599:115;;;7674:4;7680:11;7693:5;7649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7599:115;7868:5;7854:11;:19;7834:1;:11;;:17;7846:4;7834:17;;;;;;;;;;;;;;;:39;;;;7532:366;7352:546;7926:1;7912:16;;:2;:16;;;7908:429;;8093:5;8075:1;:14;;;:23;;;;;;;;;;;7908:429;;;8307:5;8288:1;:11;;:15;8300:2;8288:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7908:429;8367:2;8352:25;;8361:4;8352:25;;;8371:5;8352:25;;;;;;:::i;:::-;;;;;;;;7289:1095;7214:1170;;;:::o;6831:1139:11:-;6915:22;6960:8;:14;;;6953:4;:21;6949:60;;;6997:1;6990:8;;;;6949:60;7019:26;7048:8;:14;;;7019:43;;7072:26;7101:8;:17;;7072:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7128:22;7153:8;:15;7128:40;;7184:9;7179:785;7203:14;7199:1;:18;7179:785;;;7238:29;7270:8;7279:1;7270:11;;;;;;;;:::i;:::-;;;;;;;;7238:43;;7295:24;7322:13;:21;;;7295:48;;7357:28;7388:13;:21;;;7357:52;;7435:16;7428:4;:23;7424:530;;;7471:25;7506:18;7499:4;:25;;;;:::i;:::-;7471:53;;7542:22;7586:18;7567:16;:37;;;;:::i;:::-;7542:62;;1149:6;7722:14;:29;;;;:::i;:::-;7697:20;7677:17;7662:12;:32;;;;:::i;:::-;:55;;;;:::i;:::-;7661:91;;;;:::i;:::-;7623:129;;;;;:::i;:::-;;;7770:5;;;;;;;7424:530;1149:6;7848:20;7833:12;:35;;;;:::i;:::-;7832:52;;;;:::i;:::-;7814:70;;;;;:::i;:::-;;;7923:16;7902:37;;7224:740;;;7219:3;;;;;;;7179:785;;;;6939:1031;;;6831:1139;;;;;:::o;6468:629:6:-;6887:23;6913:33;6941:4;6921:5;6913:27;;;;:33;;;;:::i;:::-;6887:59;;6981:1;6960:10;:17;:22;;:57;;;;;6998:10;6987:30;;;;;;;;;;;;:::i;:::-;6986:31;6960:57;6956:135;;;7073:5;7040:40;;;;;;;;;;;:::i;:::-;;;;;;;;6956:135;6538:559;6468:629;;:::o;7151:141:12:-;7218:17;:15;:17::i;:::-;7213:73;;7258:17;;;;;;;;;;;;;;7213:73;7151:141::o;2429:216:14:-;6998:20:12;:18;:20::i;:::-;2541:22:14::1;2566:18;:16;:18::i;:::-;2541:43;;2604:5;2594:1;:7;;:15;;;;;;:::i;:::-;;2631:7;2619:1;:9;;:19;;;;;;:::i;:::-;;2531:114;2429:216:::0;;:::o;2484:151:7:-;2559:12;2590:38;2612:6;2620:4;2626:1;2590:21;:38::i;:::-;2583:45;;2484:151;;;;:::o;8554:120:12:-;8604:4;8627:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8620:47;;8554:120;:::o;2959:407:7:-;3058:12;3110:5;3086:21;:29;3082:123;;;3165:21;3188:5;3138:56;;;;;;;;;;;;:::i;:::-;;;;;;;;3082:123;3215:12;3229:23;3256:6;:11;;3275:5;3282:4;3256:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3214:73;;;;3304:55;3331:6;3339:7;3348:10;3304:26;:55::i;:::-;3297:62;;;;2959:407;;;;;:::o;4421:582::-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4862:1;4841:10;:17;:22;:49;;;;;4889:1;4867:6;:18;;;:23;4841:49;4837:119;;;4934:6;4917:24;;;;;;;;;;;:::i;:::-;;;;;;;;4837:119;4976:10;4969:17;;;;4589:408;4421:582;;;;;;:::o;5543:518::-;5694:1;5674:10;:17;:21;5670:385;;;5902:10;5896:17;5958:15;5945:10;5941:2;5937:19;5930:44;5670:385;6025:19;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:16:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:329::-;4375:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:119;;;4430:79;;:::i;:::-;4392:119;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4316:329;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:108::-;5158:24;5176:5;5158:24;:::i;:::-;5153:3;5146:37;5081:108;;:::o;5195:140::-;5288:6;5322:5;5316:12;5306:22;;5195:140;;;:::o;5341:200::-;5456:11;5490:6;5485:3;5478:19;5530:4;5525:3;5521:14;5506:29;;5341:200;;;;:::o;5547:158::-;5640:4;5663:3;5655:11;;5693:4;5688:3;5684:14;5676:22;;5547:158;;;:::o;5753:505::-;5892:4;5887:3;5883:14;5982:4;5975:5;5971:16;5965:23;6001:63;6058:4;6053:3;6049:14;6035:12;6001:63;:::i;:::-;5907:167;6159:4;6152:5;6148:16;6142:23;6178:63;6235:4;6230:3;6226:14;6212:12;6178:63;:::i;:::-;6084:167;5861:397;5753:505;;:::o;6264:283::-;6385:10;6406:98;6500:3;6492:6;6406:98;:::i;:::-;6536:4;6531:3;6527:14;6513:28;;6264:283;;;;:::o;6553:139::-;6649:4;6681;6676:3;6672:14;6664:22;;6553:139;;;:::o;6744:920::-;6905:3;6934:80;7008:5;6934:80;:::i;:::-;7030:102;7125:6;7120:3;7030:102;:::i;:::-;7023:109;;7156:82;7232:5;7156:82;:::i;:::-;7261:7;7292:1;7277:362;7302:6;7299:1;7296:13;7277:362;;;7378:6;7372:13;7405:115;7516:3;7501:13;7405:115;:::i;:::-;7398:122;;7543:86;7622:6;7543:86;:::i;:::-;7533:96;;7337:302;7324:1;7321;7317:9;7312:14;;7277:362;;;7281:14;7655:3;7648:10;;6910:754;;;6744:920;;;;:::o;7710:872::-;7829:3;7865:4;7860:3;7856:14;7957:4;7950:5;7946:16;7940:23;7976:63;8033:4;8028:3;8024:14;8010:12;7976:63;:::i;:::-;7880:169;8132:4;8125:5;8121:16;8115:23;8151:63;8208:4;8203:3;8199:14;8185:12;8151:63;:::i;:::-;8059:165;8310:4;8303:5;8299:16;8293:23;8363:3;8357:4;8353:14;8346:4;8341:3;8337:14;8330:38;8389:155;8539:4;8525:12;8389:155;:::i;:::-;8381:163;;8234:321;8572:4;8565:11;;7834:748;7710:872;;;;:::o;8588:373::-;8731:4;8769:2;8758:9;8754:18;8746:26;;8818:9;8812:4;8808:20;8804:1;8793:9;8789:17;8782:47;8846:108;8949:4;8940:6;8846:108;:::i;:::-;8838:116;;8588:373;;;;:::o;8967:117::-;9076:1;9073;9066:12;9090:117;9199:1;9196;9189:12;9213:117;9322:1;9319;9312:12;9361:596;9462:8;9472:6;9522:3;9515:4;9507:6;9503:17;9499:27;9489:122;;9530:79;;:::i;:::-;9489:122;9643:6;9630:20;9620:30;;9673:18;9665:6;9662:30;9659:117;;;9695:79;;:::i;:::-;9659:117;9809:4;9801:6;9797:17;9785:29;;9863:3;9855:4;9847:6;9843:17;9833:8;9829:32;9826:41;9823:128;;;9870:79;;:::i;:::-;9823:128;9361:596;;;;;:::o;9963:905::-;10095:6;10103;10111;10119;10168:2;10156:9;10147:7;10143:23;10139:32;10136:119;;;10174:79;;:::i;:::-;10136:119;10294:1;10319:53;10364:7;10355:6;10344:9;10340:22;10319:53;:::i;:::-;10309:63;;10265:117;10421:2;10447:53;10492:7;10483:6;10472:9;10468:22;10447:53;:::i;:::-;10437:63;;10392:118;10577:2;10566:9;10562:18;10549:32;10608:18;10600:6;10597:30;10594:117;;;10630:79;;:::i;:::-;10594:117;10743:108;10843:7;10834:6;10823:9;10819:22;10743:108;:::i;:::-;10725:126;;;;10520:341;9963:905;;;;;;;:::o;10888:553::-;10946:8;10956:6;11006:3;10999:4;10991:6;10987:17;10983:27;10973:122;;11014:79;;:::i;:::-;10973:122;11127:6;11114:20;11104:30;;11157:18;11149:6;11146:30;11143:117;;;11179:79;;:::i;:::-;11143:117;11293:4;11285:6;11281:17;11269:29;;11347:3;11339:4;11331:6;11327:17;11317:8;11313:32;11310:41;11307:128;;;11354:79;;:::i;:::-;11307:128;10888:553;;;;;:::o;11447:1165::-;11557:6;11565;11573;11581;11589;11597;11646:3;11634:9;11625:7;11621:23;11617:33;11614:120;;;11653:79;;:::i;:::-;11614:120;11801:1;11790:9;11786:17;11773:31;11831:18;11823:6;11820:30;11817:117;;;11853:79;;:::i;:::-;11817:117;11966:65;12023:7;12014:6;12003:9;11999:22;11966:65;:::i;:::-;11948:83;;;;11744:297;12108:2;12097:9;12093:18;12080:32;12139:18;12131:6;12128:30;12125:117;;;12161:79;;:::i;:::-;12125:117;12274:65;12331:7;12322:6;12311:9;12307:22;12274:65;:::i;:::-;12256:83;;;;12051:298;12388:2;12414:53;12459:7;12450:6;12439:9;12435:22;12414:53;:::i;:::-;12404:63;;12359:118;12516:2;12542:53;12587:7;12578:6;12567:9;12563:22;12542:53;:::i;:::-;12532:63;;12487:118;11447:1165;;;;;;;;:::o;12618:474::-;12686:6;12694;12743:2;12731:9;12722:7;12718:23;12714:32;12711:119;;;12749:79;;:::i;:::-;12711:119;12869:1;12894:53;12939:7;12930:6;12919:9;12915:22;12894:53;:::i;:::-;12884:63;;12840:117;12996:2;13022:53;13067:7;13058:6;13047:9;13043:22;13022:53;:::i;:::-;13012:63;;12967:118;12618:474;;;;;:::o;13098:180::-;13146:77;13143:1;13136:88;13243:4;13240:1;13233:15;13267:4;13264:1;13257:15;13284:320;13328:6;13365:1;13359:4;13355:12;13345:22;;13412:1;13406:4;13402:12;13433:18;13423:81;;13489:4;13481:6;13477:17;13467:27;;13423:81;13551:2;13543:6;13540:14;13520:18;13517:38;13514:84;;13570:18;;:::i;:::-;13514:84;13335:269;13284:320;;;:::o;13610:180::-;13658:77;13655:1;13648:88;13755:4;13752:1;13745:15;13779:4;13776:1;13769:15;13796:194;13836:4;13856:20;13874:1;13856:20;:::i;:::-;13851:25;;13890:20;13908:1;13890:20;:::i;:::-;13885:25;;13934:1;13931;13927:9;13919:17;;13958:1;13952:4;13949:11;13946:37;;;13963:18;;:::i;:::-;13946:37;13796:194;;;;:::o;13996:191::-;14036:3;14055:20;14073:1;14055:20;:::i;:::-;14050:25;;14089:20;14107:1;14089:20;:::i;:::-;14084:25;;14132:1;14129;14125:9;14118:16;;14153:3;14150:1;14147:10;14144:36;;;14160:18;;:::i;:::-;14144:36;13996:191;;;;:::o;14193:180::-;14241:77;14238:1;14231:88;14338:4;14335:1;14328:15;14362:4;14359:1;14352:15;14565:186;14610:11;14659:3;14646:17;14672:33;14699:5;14672:33;:::i;:::-;14739:5;14715:29;;14622:129;14565:186;;;:::o;14757:92::-;14789:8;14836:5;14833:1;14829:13;14808:34;;14757:92;;;:::o;14855:290::-;14913:6;14942:66;15029:22;15042:8;15029:22;:::i;:::-;15017:34;;15084:4;15080:9;15073:5;15069:21;15060:30;;15133:4;15123:8;15119:19;15112:5;15109:30;15099:40;;14920:225;14855:290;;;;:::o;15151:60::-;15179:3;15200:5;15193:12;;15151:60;;;:::o;15217:142::-;15267:9;15300:53;15318:34;15327:24;15345:5;15327:24;:::i;:::-;15318:34;:::i;:::-;15300:53;:::i;:::-;15287:66;;15217:142;;;:::o;15365:75::-;15408:3;15429:5;15422:12;;15365:75;;;:::o;15446:262::-;15556:39;15587:7;15556:39;:::i;:::-;15617:84;15659:41;15683:16;15659:41;:::i;:::-;15652:4;15646:11;15617:84;:::i;:::-;15611:4;15604:98;15522:186;15446:262;;:::o;15714:807::-;15892:1;15886:4;15882:12;15938:1;15931:5;15927:13;15988:12;16031:42;16059:13;16031:42;:::i;:::-;16014:59;;16087:78;16151:13;16139:10;16087:78;:::i;:::-;15849:327;;;16229:1;16223:4;16219:12;16275:2;16268:5;16264:14;16326:12;16369:42;16397:13;16369:42;:::i;:::-;16352:59;;16425:78;16489:13;16477:10;16425:78;:::i;:::-;16186:328;;;15714:807;;:::o;16527:260::-;16665:116;16773:7;16767:4;16665:116;:::i;:::-;16527:260;;:::o;16793:85::-;16838:7;16867:5;16856:16;;16793:85;;;:::o;16884:101::-;16920:7;16960:18;16953:5;16949:30;16938:41;;16884:101;;;:::o;16991:156::-;17048:9;17081:60;17098:42;17107:32;17133:5;17107:32;:::i;:::-;17098:42;:::i;:::-;17081:60;:::i;:::-;17068:73;;16991:156;;;:::o;17153:145::-;17247:44;17285:5;17247:44;:::i;:::-;17242:3;17235:57;17153:145;;:::o;17304:236::-;17404:4;17442:2;17431:9;17427:18;17419:26;;17455:78;17530:1;17519:9;17515:17;17506:6;17455:78;:::i;:::-;17304:236;;;;:::o;17546:118::-;17633:24;17651:5;17633:24;:::i;:::-;17628:3;17621:37;17546:118;;:::o;17670:442::-;17819:4;17857:2;17846:9;17842:18;17834:26;;17870:71;17938:1;17927:9;17923:17;17914:6;17870:71;:::i;:::-;17951:72;18019:2;18008:9;18004:18;17995:6;17951:72;:::i;:::-;18033;18101:2;18090:9;18086:18;18077:6;18033:72;:::i;:::-;17670:442;;;;;;:::o;18118:222::-;18211:4;18249:2;18238:9;18234:18;18226:26;;18262:71;18330:1;18319:9;18315:17;18306:6;18262:71;:::i;:::-;18118:222;;;;:::o;18346:442::-;18495:4;18533:2;18522:9;18518:18;18510:26;;18546:71;18614:1;18603:9;18599:17;18590:6;18546:71;:::i;:::-;18627:72;18695:2;18684:9;18680:18;18671:6;18627:72;:::i;:::-;18709;18777:2;18766:9;18762:18;18753:6;18709:72;:::i;:::-;18346:442;;;;;;:::o;18794:332::-;18915:4;18953:2;18942:9;18938:18;18930:26;;18966:71;19034:1;19023:9;19019:17;19010:6;18966:71;:::i;:::-;19047:72;19115:2;19104:9;19100:18;19091:6;19047:72;:::i;:::-;18794:332;;;;;:::o;19132:410::-;19172:7;19195:20;19213:1;19195:20;:::i;:::-;19190:25;;19229:20;19247:1;19229:20;:::i;:::-;19224:25;;19284:1;19281;19277:9;19306:30;19324:11;19306:30;:::i;:::-;19295:41;;19485:1;19476:7;19472:15;19469:1;19466:22;19446:1;19439:9;19419:83;19396:139;;19515:18;;:::i;:::-;19396:139;19180:362;19132:410;;;;:::o;19548:180::-;19596:77;19593:1;19586:88;19693:4;19690:1;19683:15;19717:4;19714:1;19707:15;19734:185;19774:1;19791:20;19809:1;19791:20;:::i;:::-;19786:25;;19825:20;19843:1;19825:20;:::i;:::-;19820:25;;19864:1;19854:35;;19869:18;;:::i;:::-;19854:35;19911:1;19908;19904:9;19899:14;;19734:185;;;;:::o;19925:116::-;19995:21;20010:5;19995:21;:::i;:::-;19988:5;19985:32;19975:60;;20031:1;20028;20021:12;19975:60;19925:116;:::o;20047:137::-;20101:5;20132:6;20126:13;20117:22;;20148:30;20172:5;20148:30;:::i;:::-;20047:137;;;;:::o;20190:345::-;20257:6;20306:2;20294:9;20285:7;20281:23;20277:32;20274:119;;;20312:79;;:::i;:::-;20274:119;20432:1;20457:61;20510:7;20501:6;20490:9;20486:22;20457:61;:::i;:::-;20447:71;;20403:125;20190:345;;;;:::o;20541:180::-;20589:77;20586:1;20579:88;20686:4;20683:1;20676:15;20710:4;20707:1;20700:15;20727:141;20776:4;20799:3;20791:11;;20822:3;20819:1;20812:14;20856:4;20853:1;20843:18;20835:26;;20727:141;;;:::o;20874:93::-;20911:6;20958:2;20953;20946:5;20942:14;20938:23;20928:33;;20874:93;;;:::o;20973:107::-;21017:8;21067:5;21061:4;21057:16;21036:37;;20973:107;;;;:::o;21086:393::-;21155:6;21205:1;21193:10;21189:18;21228:97;21258:66;21247:9;21228:97;:::i;:::-;21346:39;21376:8;21365:9;21346:39;:::i;:::-;21334:51;;21418:4;21414:9;21407:5;21403:21;21394:30;;21467:4;21457:8;21453:19;21446:5;21443:30;21433:40;;21162:317;;21086:393;;;;;:::o;21485:269::-;21595:39;21626:7;21595:39;:::i;:::-;21656:91;21705:41;21729:16;21705:41;:::i;:::-;21697:6;21690:4;21684:11;21656:91;:::i;:::-;21650:4;21643:105;21561:193;21485:269;;;:::o;21760:73::-;21805:3;21760:73;:::o;21839:189::-;21916:32;;:::i;:::-;21957:65;22015:6;22007;22001:4;21957:65;:::i;:::-;21892:136;21839:189;;:::o;22034:186::-;22094:120;22111:3;22104:5;22101:14;22094:120;;;22165:39;22202:1;22195:5;22165:39;:::i;:::-;22138:1;22131:5;22127:13;22118:22;;22094:120;;;22034:186;;:::o;22226:543::-;22327:2;22322:3;22319:11;22316:446;;;22361:38;22393:5;22361:38;:::i;:::-;22445:29;22463:10;22445:29;:::i;:::-;22435:8;22431:44;22628:2;22616:10;22613:18;22610:49;;;22649:8;22634:23;;22610:49;22672:80;22728:22;22746:3;22728:22;:::i;:::-;22718:8;22714:37;22701:11;22672:80;:::i;:::-;22331:431;;22316:446;22226:543;;;:::o;22775:117::-;22829:8;22879:5;22873:4;22869:16;22848:37;;22775:117;;;;:::o;22898:169::-;22942:6;22975:51;23023:1;23019:6;23011:5;23008:1;23004:13;22975:51;:::i;:::-;22971:56;23056:4;23050;23046:15;23036:25;;22949:118;22898:169;;;;:::o;23072:295::-;23148:4;23294:29;23319:3;23313:4;23294:29;:::i;:::-;23286:37;;23356:3;23353:1;23349:11;23343:4;23340:21;23332:29;;23072:295;;;;:::o;23372:1395::-;23489:37;23522:3;23489:37;:::i;:::-;23591:18;23583:6;23580:30;23577:56;;;23613:18;;:::i;:::-;23577:56;23657:38;23689:4;23683:11;23657:38;:::i;:::-;23742:67;23802:6;23794;23788:4;23742:67;:::i;:::-;23836:1;23860:4;23847:17;;23892:2;23884:6;23881:14;23909:1;23904:618;;;;24566:1;24583:6;24580:77;;;24632:9;24627:3;24623:19;24617:26;24608:35;;24580:77;24683:67;24743:6;24736:5;24683:67;:::i;:::-;24677:4;24670:81;24539:222;23874:887;;23904:618;23956:4;23952:9;23944:6;23940:22;23990:37;24022:4;23990:37;:::i;:::-;24049:1;24063:208;24077:7;24074:1;24071:14;24063:208;;;24156:9;24151:3;24147:19;24141:26;24133:6;24126:42;24207:1;24199:6;24195:14;24185:24;;24254:2;24243:9;24239:18;24226:31;;24100:4;24097:1;24093:12;24088:17;;24063:208;;;24299:6;24290:7;24287:19;24284:179;;;24357:9;24352:3;24348:19;24342:26;24400:48;24442:4;24434:6;24430:17;24419:9;24400:48;:::i;:::-;24392:6;24385:64;24307:156;24284:179;24509:1;24505;24497:6;24493:14;24489:22;24483:4;24476:36;23911:611;;;23874:887;;23464:1303;;;23372:1395;;:::o;24773:332::-;24894:4;24932:2;24921:9;24917:18;24909:26;;24945:71;25013:1;25002:9;24998:17;24989:6;24945:71;:::i;:::-;25026:72;25094:2;25083:9;25079:18;25070:6;25026:72;:::i;:::-;24773:332;;;;;:::o;25111:98::-;25162:6;25196:5;25190:12;25180:22;;25111:98;;;:::o;25215:147::-;25316:11;25353:3;25338:18;;25215:147;;;;:::o;25368:386::-;25472:3;25500:38;25532:5;25500:38;:::i;:::-;25554:88;25635:6;25630:3;25554:88;:::i;:::-;25547:95;;25651:65;25709:6;25704:3;25697:4;25690:5;25686:16;25651:65;:::i;:::-;25741:6;25736:3;25732:16;25725:23;;25476:278;25368:386;;;;:::o;25760:271::-;25890:3;25912:93;26001:3;25992:6;25912:93;:::i;:::-;25905:100;;26022:3;26015:10;;25760:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2119000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"availableBalanceOf(address)": "infinite",
								"balanceOf(address)": "2948",
								"claim()": "infinite",
								"decimals()": "383",
								"getVestingSchedule()": "infinite",
								"initialize(string,string,address,address)": "infinite",
								"lockedSupply()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"setVestingSchedule(uint256,uint256,(uint256,uint256)[])": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2553",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unlockedSupply()": "infinite"
							},
							"internal": {
								"_checkVestingSchedule(uint256,uint256,struct Schedule calldata[] calldata,uint256)": "infinite",
								"_computeUnlocked(uint256,uint256)": "infinite",
								"_totalUnlocked()": "infinite",
								"_unlockedOf(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1013,
									"end": 8399,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1332,
									"end": 1385,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1356,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1356,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 1356,
									"end": 1376,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1356,
									"end": 1376,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1356,
									"end": 1378,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1356,
									"end": 1378,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1356,
									"end": 1378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1356,
									"end": 1378,
									"name": "tag",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1356,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7778,
									"end": 8200,
									"name": "tag",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 7778,
									"end": 8200,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7893,
									"end": 7923,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7926,
									"end": 7952,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7926,
									"end": 7950,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 7926,
									"end": 7950,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7926,
									"end": 7950,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 7926,
									"end": 7952,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7926,
									"end": 7952,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 7926,
									"end": 7952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7926,
									"end": 7952,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7926,
									"end": 7952,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7893,
									"end": 7952,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7893,
									"end": 7952,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7967,
									"end": 7968,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 7967,
									"end": 7982,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7963,
									"end": 8039,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7963,
									"end": 8039,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 7963,
									"end": 8039,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "PUSH",
									"source": 12,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8005,
									"end": 8028,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 7963,
									"end": 8039,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 7963,
									"end": 8039,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8070,
									"end": 8086,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8052,
									"end": 8086,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8086,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8053,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8052,
									"end": 8066,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8086,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8052,
									"end": 8086,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8052,
									"end": 8086,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 8048,
									"end": 8194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 8048,
									"end": 8194,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8119,
									"end": 8135,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8102,
									"end": 8103,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8116,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8102,
									"end": 8116,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8116,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8102,
									"end": 8135,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "PUSH",
									"source": 12,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8166,
									"end": 8182,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 8154,
									"end": 8183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8154,
									"end": 8183,
									"name": "LOG1",
									"source": 12
								},
								{
									"begin": 8048,
									"end": 8194,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 8048,
									"end": 8194,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7827,
									"end": 8200,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7778,
									"end": 8200,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8804,
									"end": 8974,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 8804,
									"end": 8974,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8862,
									"end": 8892,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8937,
									"end": 8958,
									"name": "PUSH",
									"source": 12,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8927,
									"end": 8958,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8927,
									"end": 8958,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8804,
									"end": 8974,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8804,
									"end": 8974,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "tag",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 8399,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c783ece8850b56f72678b3039e0e3b3c6778d793cdce73474d7c30a64a2e6b464736f6c63430008190033",
									".code": [
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "43E8BE32"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "CA5C7B91"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "FD3D27B8"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "43E8BE32"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "4E71D92D"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "8F15B414"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "25D998BB"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "25D998BB"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "3A05F0D8"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1013,
											"end": 8399,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2710,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 2710,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 5204,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 5204,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 5204,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 3890,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 3890,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 5982,
											"end": 6226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 5982,
											"end": 6226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5974,
											"end": 6131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 5974,
											"end": 6131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 5974,
											"end": 6131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 3748,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 3748,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5640,
											"end": 5739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5640,
											"end": 5739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 4684,
											"end": 5043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 4684,
											"end": 5043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3163,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3163,
											"end": 3624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5259,
											"end": 5583,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 5259,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5259,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 5259,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 5259,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5259,
											"end": 5583,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 5259,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5259,
											"end": 5583,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4100,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 4100,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 4100,
											"end": 4271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2544,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2544,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 2967,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 2967,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 4466,
											"end": 4644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 4466,
											"end": 4644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 4466,
											"end": 4644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 5849,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 5849,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 4702,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 4702,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "tag",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 4702,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "tag",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5745,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 5745,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2755,
											"end": 2768,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2802,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 2805,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 2805,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2780,
											"end": 2823,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2780,
											"end": 2823,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2840,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 2833,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 2833,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "tag",
											"source": 14,
											"value": "95"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5277,
											"end": 5281,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5306,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 5309,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 5309,
											"end": 5321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "tag",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 5309,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5293,
											"end": 5321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5293,
											"end": 5321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5331,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 5340,
											"end": 5345,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5347,
											"end": 5354,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5356,
											"end": 5361,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5331,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 5331,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5331,
											"end": 5362,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 5331,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5379,
											"end": 5383,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5372,
											"end": 5383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5204,
											"end": 5390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3942,
											"end": 3949,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 3986,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 3986,
											"end": 4004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3961,
											"end": 4004,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3961,
											"end": 4004,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4022,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4035,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4035,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4035,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6085,
											"end": 6100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 6103,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 6103,
											"end": 6115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6085,
											"end": 6115,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6085,
											"end": 6115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6125,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 6141,
											"end": 6145,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6154,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6156,
											"end": 6161,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6125,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 6125,
											"end": 6162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6125,
											"end": 6162,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 6125,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 6182,
											"end": 6186,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6192,
											"end": 6197,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 6172,
											"end": 6198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6172,
											"end": 6198,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 6172,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6215,
											"end": 6219,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6208,
											"end": 6219,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6208,
											"end": 6219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6208,
											"end": 6219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 6226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6115,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6116,
											"end": 6123,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 6095,
											"end": 6102,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 6083,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 6083,
											"end": 6124,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 6083,
											"end": 6124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6124,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 6083,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6124,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6124,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3823,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 3814,
											"end": 3823,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3814,
											"end": 3823,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5691,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 5691,
											"end": 5705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 5691,
											"end": 5705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5691,
											"end": 5705,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 5691,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5724,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5640,
											"end": 5739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2038,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2038,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2027,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2038,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2017,
											"end": 2038,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2017,
											"end": 2038,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2013,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2013,
											"end": 2084,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "PUSH",
											"source": 11,
											"value": "9CDC2ED500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2013,
											"end": 2084,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2013,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4779,
											"end": 4787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4779,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4779,
											"end": 4793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4779,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4775,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4793,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 4756,
											"end": 4857,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "D45C7F9500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4846,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 4756,
											"end": 4857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 4895,
											"end": 4905,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4915,
											"end": 4919,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4928,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 4867,
											"end": 4894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4929,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4929,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4929,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4867,
											"end": 4929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 4867,
											"end": 4929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4940,
											"end": 4957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 4946,
											"end": 4948,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 4956,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4940,
											"end": 4945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4940,
											"end": 4957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4940,
											"end": 4957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 4940,
											"end": 4957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4990,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 4985,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4968,
											"end": 4996,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4996,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5006,
											"end": 5026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 5006,
											"end": 5036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5006,
											"end": 5036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 5043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2148,
											"end": 2235,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "PUSH",
											"source": 11,
											"value": "8ECCD8B900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2224,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2148,
											"end": 2235,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2148,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3346,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3338,
											"end": 3346,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3338,
											"end": 3353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3338,
											"end": 3353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3313,
											"end": 3353,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3364,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3386,
											"end": 3395,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3397,
											"end": 3402,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3404,
											"end": 3412,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3404,
											"end": 3412,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3428,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3364,
											"end": 3385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3364,
											"end": 3429,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3364,
											"end": 3429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3364,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3461,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3440,
											"end": 3448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3440,
											"end": 3458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3458,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3440,
											"end": 3470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3440,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3440,
											"end": 3470,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3440,
											"end": 3470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3502,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3480,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3480,
											"end": 3494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3494,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3480,
											"end": 3502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3480,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3480,
											"end": 3502,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3480,
											"end": 3502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3537,
											"end": 3551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3551,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3572,
											"end": 3589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3572,
											"end": 3589,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3603,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3603,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3604,
											"end": 3605,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 3595,
											"end": 3606,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3595,
											"end": 3606,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3572,
											"end": 3607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3572,
											"end": 3607,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3553,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3553,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3553,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3553,
											"end": 3556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3553,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3553,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3553,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3618,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3303,
											"end": 3624,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5259,
											"end": 5583,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 5259,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5335,
											"end": 5345,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 5316,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5346,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 5316,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5346,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5295,
											"end": 5346,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5376,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 5357,
											"end": 5434,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "PUSH",
											"source": 11,
											"value": "8BC1CF600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5399,
											"end": 5423,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5434,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 5357,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5469,
											"end": 5479,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 5444,
											"end": 5479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5444,
											"end": 5479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 5496,
											"end": 5506,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5508,
											"end": 5518,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5490,
											"end": 5519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5490,
											"end": 5519,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 5490,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5553,
											"end": 5563,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5565,
											"end": 5575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5529,
											"end": 5539,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5552,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5529,
											"end": 5552,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 5529,
											"end": 5552,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5576,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5576,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5576,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5529,
											"end": 5576,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5576,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5529,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5285,
											"end": 5583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5259,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4165,
											"end": 4172,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4209,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 4209,
											"end": 4227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4227,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4245,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4255,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4255,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4263,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4237,
											"end": 4264,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4237,
											"end": 4264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4237,
											"end": 4264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4225,
											"end": 4255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 4258,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 4258,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4284,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4225,
											"end": 4284,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4346,
											"end": 4365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4369,
											"end": 4384,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4384,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4346,
											"end": 4384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4346,
											"end": 4384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4394,
											"end": 4412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4394,
											"end": 4429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4394,
											"end": 4429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4773,
											"end": 4790,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4809,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4804,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4809,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4793,
											"end": 4809,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4809,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4813,
											"end": 4827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4773,
											"end": 4827,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4773,
											"end": 4827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4854,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4873,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4857,
											"end": 4868,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4907,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4907,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 4857,
											"end": 4907,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4907,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4889,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 4902,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 4902,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 4902,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 4907,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4907,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 4857,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4907,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4923,
											"end": 4935,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4935,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 4922,
											"end": 4952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4940,
											"end": 4952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4939,
											"end": 4952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4952,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 4922,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4918,
											"end": 5009,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4918,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 4918,
											"end": 5009,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "PUSH",
											"source": 12,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4998,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4918,
											"end": 5009,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 4918,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5018,
											"end": 5019,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5032,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5050,
											"end": 5064,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5113,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 5046,
											"end": 5113,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5098,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5080,
											"end": 5081,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5095,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5080,
											"end": 5095,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5095,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5080,
											"end": 5102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5113,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 5046,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2707,
											"end": 2711,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 2707,
											"end": 2711,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2694,
											"end": 2720,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2694,
											"end": 2720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2747,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2738,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2747,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2777,
											"end": 2786,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2757,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2815,
											"end": 2825,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2797,
											"end": 2812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2825,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5137,
											"end": 5151,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5133,
											"end": 5234,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5133,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5133,
											"end": 5234,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5185,
											"end": 5190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5168,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5182,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5182,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "PUSH",
											"source": 12,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5221,
											"end": 5222,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 5209,
											"end": 5223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5223,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 5133,
											"end": 5234,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5133,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 5240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 5240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 5240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 5240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 5240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2544,
											"end": 2832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3014,
											"end": 3027,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3039,
											"end": 3061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 3064,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 3064,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3064,
											"end": 3082,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 3064,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3082,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3082,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 3092,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 3092,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 3115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4535,
											"end": 4539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4564,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4567,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 4567,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 4567,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4567,
											"end": 4579,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 4567,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4551,
											"end": 4579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4551,
											"end": 4579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 4599,
											"end": 4604,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4606,
											"end": 4608,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4610,
											"end": 4615,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 4589,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4616,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 4589,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4637,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4626,
											"end": 4637,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4626,
											"end": 4637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4626,
											"end": 4637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5896,
											"end": 5903,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5945,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5945,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5961,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5945,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5942,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 5922,
											"end": 5942,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5922,
											"end": 5961,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5961,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 5922,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5961,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5922,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5915,
											"end": 5961,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5915,
											"end": 5961,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4782,
											"end": 4789,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4823,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 4826,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 4826,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 4826,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4801,
											"end": 4844,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4801,
											"end": 4844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4862,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4874,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4861,
											"end": 4874,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4875,
											"end": 4880,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 4889,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4890,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5820,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5820,
											"end": 5836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5836,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5820,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5813,
											"end": 5836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5813,
											"end": 5836,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5745,
											"end": 5843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1941,
											"end": 2094,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 1941,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1991,
											"end": 2013,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2078,
											"name": "PUSH",
											"source": 14,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 2094,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 2094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 10123,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 9995,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10079,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 10088,
											"end": 10093,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10104,
											"end": 10109,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10111,
											"end": 10115,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10079,
											"end": 10087,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 10079,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10079,
											"end": 10116,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 10079,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9995,
											"end": 10123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9995,
											"end": 10123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9995,
											"end": 10123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9995,
											"end": 10123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11739,
											"end": 12216,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 11739,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 11875,
											"end": 11880,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11882,
											"end": 11889,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11865,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 11865,
											"end": 11890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11865,
											"end": 11890,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 11865,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11838,
											"end": 11890,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11838,
											"end": 11890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11924,
											"end": 11941,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11904,
											"end": 11920,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11904,
											"end": 11941,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 11900,
											"end": 12210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 11900,
											"end": 12210,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11980,
											"end": 11985,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11961,
											"end": 11977,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11961,
											"end": 11985,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12087,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12087,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 11957,
											"end": 12087,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12046,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12048,
											"end": 12064,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12066,
											"end": 12071,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "PUSH",
											"source": 14,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 12012,
											"end": 12072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12012,
											"end": 12072,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12087,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 11957,
											"end": 12087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12128,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 12137,
											"end": 12142,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12144,
											"end": 12151,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12172,
											"end": 12177,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12153,
											"end": 12169,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12153,
											"end": 12177,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12179,
											"end": 12184,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12128,
											"end": 12136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 12128,
											"end": 12185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12128,
											"end": 12185,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 12128,
											"end": 12185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11900,
											"end": 12210,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 11900,
											"end": 12210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11828,
											"end": 12216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11739,
											"end": 12216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11739,
											"end": 12216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11739,
											"end": 12216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11739,
											"end": 12216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6599,
											"end": 6899,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 6599,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6698,
											"end": 6699,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6682,
											"end": 6700,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6682,
											"end": 6700,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6686,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6700,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6682,
											"end": 6700,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6700,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6678,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 6678,
											"end": 6764,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6750,
											"end": 6751,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "PUSH",
											"source": 14,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 6723,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6723,
											"end": 6753,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6678,
											"end": 6764,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 6678,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6791,
											"end": 6792,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6793,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6777,
											"end": 6793,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6777,
											"end": 6779,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6777,
											"end": 6793,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6777,
											"end": 6793,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6777,
											"end": 6793,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6773,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 6773,
											"end": 6859,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6845,
											"end": 6846,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "PUSH",
											"source": 14,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 6816,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6816,
											"end": 6848,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6773,
											"end": 6859,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 6773,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6882,
											"end": 6884,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6886,
											"end": 6891,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 6868,
											"end": 6892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6892,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 6868,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6599,
											"end": 6899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6599,
											"end": 6899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6599,
											"end": 6899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6599,
											"end": 6899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6190,
											"end": 6341,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 6190,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6257,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 6293,
											"end": 6307,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6315,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6293,
											"end": 6316,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6318,
											"end": 6333,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 6276,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6334,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 6276,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6269,
											"end": 6334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6269,
											"end": 6334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8935,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 8727,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8816,
											"end": 8817,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8804,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 8793,
											"end": 8884,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8870,
											"end": 8871,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "PUSH",
											"source": 14,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 8841,
											"end": 8873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8841,
											"end": 8873,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8884,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 8793,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8893,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8920,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8922,
											"end": 8927,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8893,
											"end": 8900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 8893,
											"end": 8928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8893,
											"end": 8928,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 8893,
											"end": 8928,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8727,
											"end": 8935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8727,
											"end": 8935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8727,
											"end": 8935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3630,
											"end": 4495,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3630,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3826,
											"end": 3841,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3823,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3900,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3810,
											"end": 3900,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "PUSH",
											"source": 11,
											"value": "C18DFCC200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3864,
											"end": 3889,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3900,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3810,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3914,
											"end": 3931,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 3987,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 3910,
											"end": 3987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "PUSH",
											"source": 11,
											"value": "8147E9E200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3910,
											"end": 3987,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 3910,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4017,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4045,
											"end": 4046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4052,
											"end": 4066,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4111,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4111,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4103,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4122,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4103,
											"end": 4122,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4122,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4087,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4161,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4165,
											"end": 4171,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4165,
											"end": 4171,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4164,
											"end": 4222,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4164,
											"end": 4222,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4164,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4164,
											"end": 4222,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4164,
											"end": 4222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4211,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4211,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4203,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4214,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4222,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4222,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4184,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4184,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4189,
											"end": 4190,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4185,
											"end": 4186,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 4185,
											"end": 4190,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4190,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4185,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4190,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 4185,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4176,
											"end": 4191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4199,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4199,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4199,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4222,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4222,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4164,
											"end": 4222,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 4164,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4258,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4258,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4259,
											"end": 4260,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4250,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4250,
											"end": 4269,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4246,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4269,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4269,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4241,
											"end": 4292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4292,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4273,
											"end": 4292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4292,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 4241,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4237,
											"end": 4376,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4237,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4237,
											"end": 4376,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4349,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4349,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 4341,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4360,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4341,
											"end": 4360,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "PUSH",
											"source": 11,
											"value": "1A3250BD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4319,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4237,
											"end": 4376,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4237,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4073,
											"end": 4386,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4386,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 4400,
											"end": 4412,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4400,
											"end": 4428,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4396,
											"end": 4489,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "PUSH",
											"source": 11,
											"value": "C45B8E2700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4451,
											"end": 4478,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4489,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 4396,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3800,
											"end": 4495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 4495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 4495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 4495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 4495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 4495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3630,
											"end": 4495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9253,
											"end": 9459,
											"name": "tag",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 9253,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9342,
											"end": 9343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9344,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9323,
											"end": 9344,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9323,
											"end": 9330,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9323,
											"end": 9344,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9323,
											"end": 9344,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9323,
											"end": 9344,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9319,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 9319,
											"end": 9408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "PUSH",
											"source": 14,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 9367,
											"end": 9397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9397,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9319,
											"end": 9408,
											"name": "tag",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 9319,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9417,
											"end": 9452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 9425,
											"end": 9432,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9442,
											"end": 9443,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9451,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9417,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 9417,
											"end": 9452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9417,
											"end": 9452,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 9417,
											"end": 9452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9253,
											"end": 9459,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9253,
											"end": 9459,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9253,
											"end": 9459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8804,
											"end": 8974,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8804,
											"end": 8974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8862,
											"end": 8892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8958,
											"name": "PUSH",
											"source": 12,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8927,
											"end": 8958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8927,
											"end": 8958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8804,
											"end": 8974,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8804,
											"end": 8974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2423,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 2276,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 6998,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 6998,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 2401,
											"end": 2406,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2408,
											"end": 2415,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2378,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 2378,
											"end": 2416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2378,
											"end": 2416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 2378,
											"end": 2416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2276,
											"end": 2423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6347,
											"end": 6483,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 6347,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 6402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 6438,
											"end": 6458,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6460,
											"end": 6475,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 6421,
											"end": 6476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6476,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 6421,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6414,
											"end": 6476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10970,
											"end": 11457,
											"name": "tag",
											"source": 14,
											"value": "195"
										},
										{
											"begin": 10970,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11103,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 11103,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 11103,
											"end": 11121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11103,
											"end": 11121,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 11103,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11121,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11078,
											"end": 11121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11152,
											"end": 11153,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11154,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11135,
											"end": 11154,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11135,
											"end": 11140,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11135,
											"end": 11154,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11135,
											"end": 11154,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11135,
											"end": 11154,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11131,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 11131,
											"end": 11220,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11206,
											"end": 11207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "PUSH",
											"source": 14,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 11177,
											"end": 11209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11177,
											"end": 11209,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11131,
											"end": 11220,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 11131,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11252,
											"end": 11253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11233,
											"end": 11254,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11233,
											"end": 11254,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11233,
											"end": 11240,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11233,
											"end": 11254,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11233,
											"end": 11254,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11233,
											"end": 11254,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11229,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 11229,
											"end": 11319,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11305,
											"end": 11306,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "PUSH",
											"source": 14,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 11277,
											"end": 11308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11277,
											"end": 11308,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11229,
											"end": 11319,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 11229,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11360,
											"end": 11365,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11329,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11341,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11328,
											"end": 11341,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11342,
											"end": 11347,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11349,
											"end": 11356,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11328,
											"end": 11357,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11365,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11365,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11365,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 11328,
											"end": 11365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11379,
											"end": 11388,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11375,
											"end": 11451,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11375,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 11375,
											"end": 11451,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11425,
											"end": 11432,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11418,
											"end": 11423,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "PUSH",
											"source": 14,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11434,
											"end": 11439,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 11409,
											"end": 11440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11440,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 11375,
											"end": 11451,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 11375,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11068,
											"end": 11457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10970,
											"end": 11457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10970,
											"end": 11457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10970,
											"end": 11457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10970,
											"end": 11457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10970,
											"end": 11457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7214,
											"end": 8384,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 7214,
											"end": 8384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7299,
											"end": 7321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 7324,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 7324,
											"end": 7342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 7324,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7299,
											"end": 7342,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7299,
											"end": 7342,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7372,
											"end": 7373,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7356,
											"end": 7360,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7352,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 7352,
											"end": 7898,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7510,
											"end": 7515,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7493,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7506,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 7492,
											"end": 7506,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7506,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 7492,
											"end": 7515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7352,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 7352,
											"end": 7898,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7352,
											"end": 7898,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 7352,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7579,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7579,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7580,
											"end": 7584,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7585,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7546,
											"end": 7585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7546,
											"end": 7585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7603,
											"end": 7614,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7603,
											"end": 7622,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7599,
											"end": 7714,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7599,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 7599,
											"end": 7714,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7674,
											"end": 7678,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7680,
											"end": 7691,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7693,
											"end": 7698,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "PUSH",
											"source": 14,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 7649,
											"end": 7699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7699,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7599,
											"end": 7714,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 7599,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 7873,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7854,
											"end": 7865,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7854,
											"end": 7873,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7835,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7845,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7845,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7850,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7851,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7873,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7352,
											"end": 7898,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 7352,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7926,
											"end": 7927,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7928,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7912,
											"end": 7928,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7912,
											"end": 7928,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7912,
											"end": 7928,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7912,
											"end": 7928,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7908,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 7908,
											"end": 8337,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8093,
											"end": 8098,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8089,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8075,
											"end": 8089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7908,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 7908,
											"end": 8337,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7908,
											"end": 8337,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 7908,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8307,
											"end": 8312,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8289,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8299,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8288,
											"end": 8299,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8300,
											"end": 8302,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8312,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7908,
											"end": 8337,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 7908,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8367,
											"end": 8369,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8361,
											"end": 8365,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "PUSH",
											"source": 14,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8371,
											"end": 8376,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 8352,
											"end": 8377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8377,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 7289,
											"end": 8384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7214,
											"end": 8384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7214,
											"end": 8384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7214,
											"end": 8384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7214,
											"end": 8384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6831,
											"end": 7970,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 6831,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6937,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 6968,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6960,
											"end": 6974,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6960,
											"end": 6974,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6960,
											"end": 6974,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6953,
											"end": 6957,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6953,
											"end": 6974,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6949,
											"end": 7009,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6949,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 6949,
											"end": 7009,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6997,
											"end": 6998,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6990,
											"end": 6998,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6990,
											"end": 6998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6990,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 6990,
											"end": 6998,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6949,
											"end": 7009,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 6949,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7048,
											"end": 7056,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7048,
											"end": 7062,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7048,
											"end": 7062,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7048,
											"end": 7062,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7109,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7101,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7101,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7153,
											"end": 7161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7184,
											"end": 7193,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7203,
											"end": 7217,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7199,
											"end": 7200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7238,
											"end": 7267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7278,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 7270,
											"end": 7281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7238,
											"end": 7281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7238,
											"end": 7281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7295,
											"end": 7319,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7335,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7322,
											"end": 7343,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7322,
											"end": 7343,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7295,
											"end": 7343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7295,
											"end": 7343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7385,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7409,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7388,
											"end": 7409,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7388,
											"end": 7409,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7409,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7357,
											"end": 7409,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7435,
											"end": 7451,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7428,
											"end": 7432,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7428,
											"end": 7451,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7954,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 7424,
											"end": 7954,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7471,
											"end": 7496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7499,
											"end": 7503,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 7499,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 7499,
											"end": 7524,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7499,
											"end": 7524,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7499,
											"end": 7524,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 7499,
											"end": 7524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7499,
											"end": 7524,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 7499,
											"end": 7524,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7471,
											"end": 7524,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7471,
											"end": 7524,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7564,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7604,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7583,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 7567,
											"end": 7604,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7604,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 7567,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7604,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 7567,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7604,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 7722,
											"end": 7736,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 7722,
											"end": 7751,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 7722,
											"end": 7751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7722,
											"end": 7751,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 7722,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7697,
											"end": 7717,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7677,
											"end": 7694,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7674,
											"name": "DUP15",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 7662,
											"end": 7694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 7662,
											"end": 7694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7694,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 7662,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 7662,
											"end": 7717,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7717,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 7662,
											"end": 7717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7717,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 7662,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7661,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 7661,
											"end": 7752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7661,
											"end": 7752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7661,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 7661,
											"end": 7752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7661,
											"end": 7752,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 7661,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7623,
											"end": 7752,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 7623,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 7623,
											"end": 7752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7623,
											"end": 7752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7623,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 7623,
											"end": 7752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7623,
											"end": 7752,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 7623,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7623,
											"end": 7752,
											"name": "SWAP10",
											"source": 11
										},
										{
											"begin": 7623,
											"end": 7752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7770,
											"end": 7775,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7954,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 7424,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1149,
											"end": 1155,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 7848,
											"end": 7868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7845,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 7833,
											"end": 7868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 7833,
											"end": 7868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7868,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 7833,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7832,
											"end": 7884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 7832,
											"end": 7884,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7832,
											"end": 7884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7832,
											"end": 7884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 7832,
											"end": 7884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7832,
											"end": 7884,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 7832,
											"end": 7884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7884,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 7814,
											"end": 7884,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 7814,
											"end": 7884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7884,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 7814,
											"end": 7884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7884,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7923,
											"end": 7939,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7902,
											"end": 7939,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 7902,
											"end": 7939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7224,
											"end": 7964,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7224,
											"end": 7964,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7224,
											"end": 7964,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7179,
											"end": 7964,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6939,
											"end": 7970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6939,
											"end": 7970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6939,
											"end": 7970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 7970,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 6831,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 7970,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 7970,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 7970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 7970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6831,
											"end": 7970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6468,
											"end": 7097,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6468,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6941,
											"end": 6945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6921,
											"end": 6926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6940,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6913,
											"end": 6940,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6913,
											"end": 6940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6946,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6913,
											"end": 6946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6946,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6913,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6981,
											"end": 6982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 6970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6977,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6982,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 6982,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 7017,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 7017,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6960,
											"end": 7017,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 7017,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6998,
											"end": 7008,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6987,
											"end": 7017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6987,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6986,
											"end": 7017,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6960,
											"end": 7017,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6960,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7091,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6956,
											"end": 7091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7073,
											"end": 7078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 7040,
											"end": 7080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7080,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 7091,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 6956,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 7097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 7097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 7097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6468,
											"end": 7097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7292,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 7151,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7218,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 7218,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 7218,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7218,
											"end": 7235,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 7218,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7213,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 7213,
											"end": 7286,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "PUSH",
											"source": 12,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7213,
											"end": 7286,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 7213,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7151,
											"end": 7292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2429,
											"end": 2645,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 2429,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 6998,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 6998,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 2566,
											"end": 2582,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 2566,
											"end": 2584,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2566,
											"end": 2584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 2566,
											"end": 2584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2584,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2604,
											"end": 2609,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2595,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2594,
											"end": 2601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2594,
											"end": 2609,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 2594,
											"end": 2609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2594,
											"end": 2609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2631,
											"end": 2638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2620,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2619,
											"end": 2628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2619,
											"end": 2638,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 2619,
											"end": 2638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2619,
											"end": 2638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2638,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2531,
											"end": 2645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2429,
											"end": 2645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2484,
											"end": 2635,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2484,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2571,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2590,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2590,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2628,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 2590,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2635,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8554,
											"end": 8674,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 8554,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8604,
											"end": 8608,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 8627,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8627,
											"end": 8653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8653,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 8627,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8627,
											"end": 8667,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8620,
											"end": 8667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8620,
											"end": 8667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 8674,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8554,
											"end": 8674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2959,
											"end": 3366,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 2959,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3058,
											"end": 3070,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3110,
											"end": 3115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3107,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3205,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3082,
											"end": 3205,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3186,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "PUSH",
											"source": 7,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 3138,
											"end": 3194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3194,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3205,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3082,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3252,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3267,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3267,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3280,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3282,
											"end": 3286,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3256,
											"end": 3287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3358,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 3304,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3359,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3304,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3359,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3366,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3366,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4917,
											"end": 4941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 6061,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 5543,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 6055,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 6055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5670,
											"end": 6055,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5902,
											"end": 5912,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5913,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5973,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 5943,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5937,
											"end": 5956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 6055,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 5670,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6044,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "119"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4399,
											"end": 4422,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 4430,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5081,
											"end": 5189,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 5081,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5158,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 5176,
											"end": 5181,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5158,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 5158,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5158,
											"end": 5182,
											"name": "tag",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 5158,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5153,
											"end": 5156,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5146,
											"end": 5183,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5081,
											"end": 5189,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5081,
											"end": 5189,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5081,
											"end": 5189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5195,
											"end": 5335,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 5195,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5288,
											"end": 5294,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5327,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5316,
											"end": 5328,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5195,
											"end": 5335,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5195,
											"end": 5335,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5195,
											"end": 5335,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5195,
											"end": 5335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5341,
											"end": 5541,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 5341,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5456,
											"end": 5467,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5485,
											"end": 5488,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5478,
											"end": 5497,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5530,
											"end": 5534,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5528,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5521,
											"end": 5535,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5506,
											"end": 5535,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5506,
											"end": 5535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5341,
											"end": 5541,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5341,
											"end": 5541,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5341,
											"end": 5541,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5341,
											"end": 5541,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5341,
											"end": 5541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5547,
											"end": 5705,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 5547,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5640,
											"end": 5644,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5663,
											"end": 5666,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5655,
											"end": 5666,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5655,
											"end": 5666,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5693,
											"end": 5697,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5688,
											"end": 5691,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5684,
											"end": 5698,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5676,
											"end": 5698,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5676,
											"end": 5698,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5547,
											"end": 5705,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5547,
											"end": 5705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5547,
											"end": 5705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5547,
											"end": 5705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5753,
											"end": 6258,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 5753,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5887,
											"end": 5890,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5883,
											"end": 5897,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5982,
											"end": 5986,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5980,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5971,
											"end": 5987,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5965,
											"end": 5988,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6001,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6056,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6049,
											"end": 6063,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6035,
											"end": 6047,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6001,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 6001,
											"end": 6064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6001,
											"end": 6064,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 6001,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5907,
											"end": 6074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6159,
											"end": 6163,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6157,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6148,
											"end": 6164,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6142,
											"end": 6165,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6178,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 6235,
											"end": 6239,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6230,
											"end": 6233,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6226,
											"end": 6240,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6212,
											"end": 6224,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6178,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 6178,
											"end": 6241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6178,
											"end": 6241,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 6178,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6084,
											"end": 6251,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5861,
											"end": 6258,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5753,
											"end": 6258,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5753,
											"end": 6258,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5753,
											"end": 6258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6264,
											"end": 6547,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 6264,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6385,
											"end": 6395,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 6500,
											"end": 6503,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6492,
											"end": 6498,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6406,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 6406,
											"end": 6504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6406,
											"end": 6504,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 6406,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6536,
											"end": 6540,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6531,
											"end": 6534,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6527,
											"end": 6541,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6513,
											"end": 6541,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6513,
											"end": 6541,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6264,
											"end": 6547,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6264,
											"end": 6547,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6264,
											"end": 6547,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6264,
											"end": 6547,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6264,
											"end": 6547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6692,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 6553,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6649,
											"end": 6653,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6676,
											"end": 6679,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6672,
											"end": 6686,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6664,
											"end": 6686,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6664,
											"end": 6686,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6692,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6692,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6692,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 7664,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 6744,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 7008,
											"end": 7013,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6934,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 6934,
											"end": 7014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6934,
											"end": 7014,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 6934,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7030,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 7125,
											"end": 7131,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7120,
											"end": 7123,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7030,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 7030,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7030,
											"end": 7132,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 7030,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7023,
											"end": 7132,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7023,
											"end": 7132,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7156,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 7232,
											"end": 7237,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7156,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 7156,
											"end": 7238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7156,
											"end": 7238,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 7156,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7261,
											"end": 7268,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7292,
											"end": 7293,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7639,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 7277,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7302,
											"end": 7308,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7296,
											"end": 7309,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7277,
											"end": 7639,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7277,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 7277,
											"end": 7639,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7385,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7405,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 7501,
											"end": 7514,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7405,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 7405,
											"end": 7520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7405,
											"end": 7520,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 7405,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7398,
											"end": 7520,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": 7398,
											"end": 7520,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7543,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7543,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 7543,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7543,
											"end": 7629,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 7543,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7533,
											"end": 7629,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7533,
											"end": 7629,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7337,
											"end": 7639,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7324,
											"end": 7325,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7321,
											"end": 7322,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7326,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7312,
											"end": 7326,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7277,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 7277,
											"end": 7639,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7277,
											"end": 7639,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 7277,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7281,
											"end": 7295,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7655,
											"end": 7658,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7648,
											"end": 7658,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7648,
											"end": 7658,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6910,
											"end": 7664,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6910,
											"end": 7664,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6910,
											"end": 7664,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 7664,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 7664,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 7664,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 7664,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6744,
											"end": 7664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 8582,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 7710,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7829,
											"end": 7832,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7865,
											"end": 7869,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 7860,
											"end": 7863,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7856,
											"end": 7870,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7957,
											"end": 7961,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7950,
											"end": 7955,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 7962,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7940,
											"end": 7963,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7976,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8028,
											"end": 8031,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8024,
											"end": 8038,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8010,
											"end": 8022,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7976,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 7976,
											"end": 8039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7976,
											"end": 8039,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 7976,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7880,
											"end": 8049,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8132,
											"end": 8136,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8125,
											"end": 8130,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8121,
											"end": 8137,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8115,
											"end": 8138,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8151,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 8208,
											"end": 8212,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8203,
											"end": 8206,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8199,
											"end": 8213,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8185,
											"end": 8197,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8151,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 8151,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8151,
											"end": 8214,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 8151,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8059,
											"end": 8224,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8310,
											"end": 8314,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8303,
											"end": 8308,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8299,
											"end": 8315,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8293,
											"end": 8316,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8363,
											"end": 8366,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8353,
											"end": 8367,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8346,
											"end": 8350,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8341,
											"end": 8344,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8337,
											"end": 8351,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8330,
											"end": 8368,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8389,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8525,
											"end": 8537,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8389,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 8389,
											"end": 8544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8389,
											"end": 8544,
											"name": "tag",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 8389,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8381,
											"end": 8544,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8381,
											"end": 8544,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8234,
											"end": 8555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8572,
											"end": 8576,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8565,
											"end": 8576,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8565,
											"end": 8576,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7834,
											"end": 8582,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 8582,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 8582,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 8582,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 8582,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 8582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8588,
											"end": 8961,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 8588,
											"end": 8961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8731,
											"end": 8735,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8769,
											"end": 8771,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8758,
											"end": 8767,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8754,
											"end": 8772,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8746,
											"end": 8772,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8746,
											"end": 8772,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8818,
											"end": 8827,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8812,
											"end": 8816,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8808,
											"end": 8828,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8804,
											"end": 8805,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8793,
											"end": 8802,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8789,
											"end": 8806,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8782,
											"end": 8829,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8846,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 8949,
											"end": 8953,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8940,
											"end": 8946,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8846,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 8846,
											"end": 8954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8846,
											"end": 8954,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 8846,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8838,
											"end": 8954,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8838,
											"end": 8954,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8588,
											"end": 8961,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8588,
											"end": 8961,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8588,
											"end": 8961,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8588,
											"end": 8961,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8588,
											"end": 8961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8967,
											"end": 9084,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 8967,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9076,
											"end": 9077,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9073,
											"end": 9074,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9066,
											"end": 9078,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9090,
											"end": 9207,
											"name": "tag",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 9090,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9199,
											"end": 9200,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9197,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9189,
											"end": 9201,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9213,
											"end": 9330,
											"name": "tag",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 9213,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9322,
											"end": 9323,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9312,
											"end": 9324,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9361,
											"end": 9957,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 9361,
											"end": 9957,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9462,
											"end": 9470,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9472,
											"end": 9478,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9522,
											"end": 9525,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9515,
											"end": 9519,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 9507,
											"end": 9513,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9503,
											"end": 9520,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9499,
											"end": 9526,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 9489,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 9489,
											"end": 9611,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9530,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 9530,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 9530,
											"end": 9609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9530,
											"end": 9609,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 9530,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9489,
											"end": 9611,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 9489,
											"end": 9611,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9643,
											"end": 9649,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 9620,
											"end": 9650,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9620,
											"end": 9650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9673,
											"end": 9691,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9665,
											"end": 9671,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9662,
											"end": 9692,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9659,
											"end": 9776,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9659,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 9659,
											"end": 9776,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9695,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 9695,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 9695,
											"end": 9774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9695,
											"end": 9774,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 9695,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9659,
											"end": 9776,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 9659,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9809,
											"end": 9813,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9801,
											"end": 9807,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9797,
											"end": 9814,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9785,
											"end": 9814,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9785,
											"end": 9814,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9863,
											"end": 9866,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9855,
											"end": 9859,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9847,
											"end": 9853,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9843,
											"end": 9860,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 9833,
											"end": 9841,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9829,
											"end": 9861,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9826,
											"end": 9867,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9823,
											"end": 9951,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9823,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 9823,
											"end": 9951,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9870,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 9870,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 9870,
											"end": 9949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9870,
											"end": 9949,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 9870,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9823,
											"end": 9951,
											"name": "tag",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 9823,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9361,
											"end": 9957,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9361,
											"end": 9957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9361,
											"end": 9957,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9361,
											"end": 9957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9361,
											"end": 9957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9361,
											"end": 9957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9963,
											"end": 10868,
											"name": "tag",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 9963,
											"end": 10868,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10095,
											"end": 10101,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10109,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10111,
											"end": 10117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10119,
											"end": 10125,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10168,
											"end": 10170,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 10156,
											"end": 10165,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10147,
											"end": 10154,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 10143,
											"end": 10166,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10139,
											"end": 10171,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 10136,
											"end": 10255,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10136,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 10136,
											"end": 10255,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10174,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 10174,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 10174,
											"end": 10253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10174,
											"end": 10253,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 10174,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10136,
											"end": 10255,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 10136,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10294,
											"end": 10295,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 10364,
											"end": 10371,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10344,
											"end": 10353,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 10340,
											"end": 10362,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10319,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 10319,
											"end": 10372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10319,
											"end": 10372,
											"name": "tag",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 10319,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10309,
											"end": 10372,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 10309,
											"end": 10372,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10265,
											"end": 10382,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10447,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 10492,
											"end": 10499,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 10483,
											"end": 10489,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10472,
											"end": 10481,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 10468,
											"end": 10490,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10447,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 10447,
											"end": 10500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10447,
											"end": 10500,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 10447,
											"end": 10500,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10437,
											"end": 10500,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 10437,
											"end": 10500,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10392,
											"end": 10510,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10577,
											"end": 10579,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10566,
											"end": 10575,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10562,
											"end": 10580,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10549,
											"end": 10581,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10600,
											"end": 10606,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10597,
											"end": 10627,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10594,
											"end": 10711,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10594,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 10594,
											"end": 10711,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10630,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 10630,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 10630,
											"end": 10709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10630,
											"end": 10709,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 10630,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10594,
											"end": 10711,
											"name": "tag",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 10594,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10743,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 10843,
											"end": 10850,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 10834,
											"end": 10840,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10823,
											"end": 10832,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 10819,
											"end": 10841,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10743,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 10743,
											"end": 10851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10743,
											"end": 10851,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 10743,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10725,
											"end": 10851,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10725,
											"end": 10851,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10725,
											"end": 10851,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10725,
											"end": 10851,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10520,
											"end": 10861,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9963,
											"end": 10868,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9963,
											"end": 10868,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 9963,
											"end": 10868,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9963,
											"end": 10868,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 9963,
											"end": 10868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9963,
											"end": 10868,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9963,
											"end": 10868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9963,
											"end": 10868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10888,
											"end": 11441,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 10888,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10946,
											"end": 10954,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10956,
											"end": 10962,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11006,
											"end": 11009,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10999,
											"end": 11003,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 10991,
											"end": 10997,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10987,
											"end": 11004,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10983,
											"end": 11010,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 10973,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 10973,
											"end": 11095,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 11014,
											"end": 11093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 11014,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10973,
											"end": 11095,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 10973,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11127,
											"end": 11133,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11114,
											"end": 11134,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11104,
											"end": 11134,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11104,
											"end": 11134,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11157,
											"end": 11175,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11149,
											"end": 11155,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11146,
											"end": 11176,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11143,
											"end": 11260,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11143,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 11143,
											"end": 11260,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11179,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 11179,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 11179,
											"end": 11258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11179,
											"end": 11258,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 11179,
											"end": 11258,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11143,
											"end": 11260,
											"name": "tag",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 11143,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11293,
											"end": 11297,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11285,
											"end": 11291,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11281,
											"end": 11298,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11269,
											"end": 11298,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11269,
											"end": 11298,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11347,
											"end": 11350,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11339,
											"end": 11343,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 11331,
											"end": 11337,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11327,
											"end": 11344,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 11317,
											"end": 11325,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11313,
											"end": 11345,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11310,
											"end": 11351,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11307,
											"end": 11435,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11307,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 11307,
											"end": 11435,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11354,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 11354,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 11354,
											"end": 11433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11354,
											"end": 11433,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 11354,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11307,
											"end": 11435,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 11307,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10888,
											"end": 11441,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10888,
											"end": 11441,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10888,
											"end": 11441,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10888,
											"end": 11441,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10888,
											"end": 11441,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10888,
											"end": 11441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "tag",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11557,
											"end": 11563,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11565,
											"end": 11571,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11573,
											"end": 11579,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11581,
											"end": 11587,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11589,
											"end": 11595,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11597,
											"end": 11603,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11646,
											"end": 11649,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 11634,
											"end": 11643,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11625,
											"end": 11632,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 11621,
											"end": 11644,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11617,
											"end": 11650,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11614,
											"end": 11734,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11614,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 11614,
											"end": 11734,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11653,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 11653,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 11653,
											"end": 11732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11653,
											"end": 11732,
											"name": "tag",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 11653,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11614,
											"end": 11734,
											"name": "tag",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 11614,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11801,
											"end": 11802,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11790,
											"end": 11799,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11786,
											"end": 11803,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11773,
											"end": 11804,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11831,
											"end": 11849,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11823,
											"end": 11829,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11820,
											"end": 11850,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11853,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 11853,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 11853,
											"end": 11932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11853,
											"end": 11932,
											"name": "tag",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 11853,
											"end": 11932,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11966,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 12023,
											"end": 12030,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 12014,
											"end": 12020,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12003,
											"end": 12012,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 11999,
											"end": 12021,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11966,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 11966,
											"end": 12031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11966,
											"end": 12031,
											"name": "tag",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 11966,
											"end": 12031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11948,
											"end": 12031,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 11948,
											"end": 12031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11948,
											"end": 12031,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 11948,
											"end": 12031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11744,
											"end": 12041,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12108,
											"end": 12110,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12097,
											"end": 12106,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12093,
											"end": 12111,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12080,
											"end": 12112,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 12139,
											"end": 12157,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12131,
											"end": 12137,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12128,
											"end": 12158,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 12125,
											"end": 12242,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12125,
											"end": 12242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 12125,
											"end": 12242,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12161,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 12161,
											"end": 12240,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 12161,
											"end": 12240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12161,
											"end": 12240,
											"name": "tag",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 12161,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12125,
											"end": 12242,
											"name": "tag",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 12125,
											"end": 12242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12274,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 12331,
											"end": 12338,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 12322,
											"end": 12328,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12311,
											"end": 12320,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 12307,
											"end": 12329,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12274,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 12274,
											"end": 12339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12274,
											"end": 12339,
											"name": "tag",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 12274,
											"end": 12339,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12256,
											"end": 12339,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12256,
											"end": 12339,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12256,
											"end": 12339,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12256,
											"end": 12339,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12051,
											"end": 12349,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12388,
											"end": 12390,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 12459,
											"end": 12466,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 12450,
											"end": 12456,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12439,
											"end": 12448,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 12435,
											"end": 12457,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 12414,
											"end": 12467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12414,
											"end": 12467,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 12414,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12404,
											"end": 12467,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12404,
											"end": 12467,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12359,
											"end": 12477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12516,
											"end": 12518,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12542,
											"end": 12595,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 12587,
											"end": 12594,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 12578,
											"end": 12584,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12567,
											"end": 12576,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 12563,
											"end": 12585,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12595,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 12542,
											"end": 12595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12542,
											"end": 12595,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 12542,
											"end": 12595,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12532,
											"end": 12595,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12532,
											"end": 12595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12487,
											"end": 12605,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 11447,
											"end": 12612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12618,
											"end": 13092,
											"name": "tag",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 12618,
											"end": 13092,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12692,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12694,
											"end": 12700,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12743,
											"end": 12745,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12731,
											"end": 12740,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12722,
											"end": 12729,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12718,
											"end": 12741,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12714,
											"end": 12746,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 12711,
											"end": 12830,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12711,
											"end": 12830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 12711,
											"end": 12830,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12749,
											"end": 12828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 12749,
											"end": 12828,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 12749,
											"end": 12828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12749,
											"end": 12828,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 12749,
											"end": 12828,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12711,
											"end": 12830,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 12711,
											"end": 12830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12869,
											"end": 12870,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12894,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 12939,
											"end": 12946,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12930,
											"end": 12936,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12919,
											"end": 12928,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12915,
											"end": 12937,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12894,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 12894,
											"end": 12947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12894,
											"end": 12947,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 12894,
											"end": 12947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12884,
											"end": 12947,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12884,
											"end": 12947,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12840,
											"end": 12957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12996,
											"end": 12998,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13022,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 13067,
											"end": 13074,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13058,
											"end": 13064,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13047,
											"end": 13056,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13043,
											"end": 13065,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13022,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 13022,
											"end": 13075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13022,
											"end": 13075,
											"name": "tag",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 13022,
											"end": 13075,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13012,
											"end": 13075,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13012,
											"end": 13075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12967,
											"end": 13085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12618,
											"end": 13092,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12618,
											"end": 13092,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12618,
											"end": 13092,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12618,
											"end": 13092,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12618,
											"end": 13092,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12618,
											"end": 13092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13098,
											"end": 13278,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 13098,
											"end": 13278,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13146,
											"end": 13223,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13143,
											"end": 13144,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13136,
											"end": 13224,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13243,
											"end": 13247,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 13240,
											"end": 13241,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 13233,
											"end": 13248,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13267,
											"end": 13271,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 13264,
											"end": 13265,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13257,
											"end": 13272,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 13284,
											"end": 13604,
											"name": "tag",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 13284,
											"end": 13604,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13328,
											"end": 13334,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13366,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 13359,
											"end": 13363,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13355,
											"end": 13367,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 13345,
											"end": 13367,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13345,
											"end": 13367,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13412,
											"end": 13413,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13406,
											"end": 13410,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13402,
											"end": 13414,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13433,
											"end": 13451,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13423,
											"end": 13504,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 13423,
											"end": 13504,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13489,
											"end": 13493,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 13481,
											"end": 13487,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13477,
											"end": 13494,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13467,
											"end": 13494,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13467,
											"end": 13494,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13423,
											"end": 13504,
											"name": "tag",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 13423,
											"end": 13504,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13551,
											"end": 13553,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13543,
											"end": 13549,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13540,
											"end": 13554,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13520,
											"end": 13538,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13517,
											"end": 13555,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13514,
											"end": 13598,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 13514,
											"end": 13598,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13570,
											"end": 13588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 13570,
											"end": 13588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 13570,
											"end": 13588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13570,
											"end": 13588,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 13570,
											"end": 13588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13514,
											"end": 13598,
											"name": "tag",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 13514,
											"end": 13598,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13335,
											"end": 13604,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13284,
											"end": 13604,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13284,
											"end": 13604,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13284,
											"end": 13604,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13284,
											"end": 13604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13610,
											"end": 13790,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 13610,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13658,
											"end": 13735,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13655,
											"end": 13656,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13648,
											"end": 13736,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13755,
											"end": 13759,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 13752,
											"end": 13753,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 13745,
											"end": 13760,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13779,
											"end": 13783,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 13776,
											"end": 13777,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13769,
											"end": 13784,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 13796,
											"end": 13990,
											"name": "tag",
											"source": 16,
											"value": "116"
										},
										{
											"begin": 13796,
											"end": 13990,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13836,
											"end": 13840,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13856,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 13874,
											"end": 13875,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13856,
											"end": 13876,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 13856,
											"end": 13876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13856,
											"end": 13876,
											"name": "tag",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 13856,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13851,
											"end": 13876,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13851,
											"end": 13876,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13890,
											"end": 13910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 13908,
											"end": 13909,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13890,
											"end": 13910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 13890,
											"end": 13910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13890,
											"end": 13910,
											"name": "tag",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 13890,
											"end": 13910,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13885,
											"end": 13910,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13885,
											"end": 13910,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13934,
											"end": 13935,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13931,
											"end": 13932,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13927,
											"end": 13936,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13919,
											"end": 13936,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13919,
											"end": 13936,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13952,
											"end": 13956,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13949,
											"end": 13960,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13946,
											"end": 13983,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13946,
											"end": 13983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 13946,
											"end": 13983,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13963,
											"end": 13981,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 13963,
											"end": 13981,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 13963,
											"end": 13981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13963,
											"end": 13981,
											"name": "tag",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 13963,
											"end": 13981,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13946,
											"end": 13983,
											"name": "tag",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 13946,
											"end": 13983,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13796,
											"end": 13990,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13796,
											"end": 13990,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13796,
											"end": 13990,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13796,
											"end": 13990,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13796,
											"end": 13990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13996,
											"end": 14187,
											"name": "tag",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 13996,
											"end": 14187,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14036,
											"end": 14039,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14055,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 14073,
											"end": 14074,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14055,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 14055,
											"end": 14075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14055,
											"end": 14075,
											"name": "tag",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 14055,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14050,
											"end": 14075,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14050,
											"end": 14075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14089,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 14107,
											"end": 14108,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14089,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 14089,
											"end": 14109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14089,
											"end": 14109,
											"name": "tag",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 14089,
											"end": 14109,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14084,
											"end": 14109,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14084,
											"end": 14109,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14132,
											"end": 14133,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14129,
											"end": 14130,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14125,
											"end": 14134,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14118,
											"end": 14134,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14118,
											"end": 14134,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14153,
											"end": 14156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14150,
											"end": 14151,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14147,
											"end": 14157,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 14144,
											"end": 14180,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14144,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 14144,
											"end": 14180,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14160,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 14160,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 14160,
											"end": 14178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14160,
											"end": 14178,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 14160,
											"end": 14178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14144,
											"end": 14180,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 14144,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13996,
											"end": 14187,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13996,
											"end": 14187,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13996,
											"end": 14187,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13996,
											"end": 14187,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13996,
											"end": 14187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14193,
											"end": 14373,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 14193,
											"end": 14373,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14241,
											"end": 14318,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14238,
											"end": 14239,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14231,
											"end": 14319,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14338,
											"end": 14342,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 14335,
											"end": 14336,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 14328,
											"end": 14343,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14362,
											"end": 14366,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 14359,
											"end": 14360,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14352,
											"end": 14367,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14565,
											"end": 14751,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 14565,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14610,
											"end": 14621,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14659,
											"end": 14662,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14646,
											"end": 14663,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 14672,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 14699,
											"end": 14704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14672,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 14672,
											"end": 14705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14672,
											"end": 14705,
											"name": "tag",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 14672,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14739,
											"end": 14744,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14715,
											"end": 14744,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14715,
											"end": 14744,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14622,
											"end": 14751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14565,
											"end": 14751,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14565,
											"end": 14751,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14565,
											"end": 14751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14565,
											"end": 14751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14757,
											"end": 14849,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 14757,
											"end": 14849,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14789,
											"end": 14797,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14836,
											"end": 14841,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14833,
											"end": 14834,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14829,
											"end": 14842,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 14808,
											"end": 14842,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14808,
											"end": 14842,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14757,
											"end": 14849,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14757,
											"end": 14849,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14757,
											"end": 14849,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14757,
											"end": 14849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14855,
											"end": 15145,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 14855,
											"end": 15145,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14913,
											"end": 14919,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14942,
											"end": 15008,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15029,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 15042,
											"end": 15050,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15029,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 15029,
											"end": 15051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15029,
											"end": 15051,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 15029,
											"end": 15051,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15017,
											"end": 15051,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 15017,
											"end": 15051,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15084,
											"end": 15088,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 15080,
											"end": 15089,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 15073,
											"end": 15078,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15069,
											"end": 15090,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15060,
											"end": 15090,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15060,
											"end": 15090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15133,
											"end": 15137,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 15123,
											"end": 15131,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15119,
											"end": 15138,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15112,
											"end": 15117,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15109,
											"end": 15139,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 15099,
											"end": 15139,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15099,
											"end": 15139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14920,
											"end": 15145,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14855,
											"end": 15145,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14855,
											"end": 15145,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14855,
											"end": 15145,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14855,
											"end": 15145,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14855,
											"end": 15145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15151,
											"end": 15211,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 15151,
											"end": 15211,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15179,
											"end": 15182,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15200,
											"end": 15205,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15193,
											"end": 15205,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15193,
											"end": 15205,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15151,
											"end": 15211,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15151,
											"end": 15211,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15151,
											"end": 15211,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15151,
											"end": 15211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15359,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 15217,
											"end": 15359,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15267,
											"end": 15276,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15300,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 15318,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 15327,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 15345,
											"end": 15350,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15327,
											"end": 15351,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 15327,
											"end": 15351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15327,
											"end": 15351,
											"name": "tag",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 15327,
											"end": 15351,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15318,
											"end": 15352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 15318,
											"end": 15352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15318,
											"end": 15352,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 15318,
											"end": 15352,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15300,
											"end": 15353,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 15300,
											"end": 15353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15300,
											"end": 15353,
											"name": "tag",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 15300,
											"end": 15353,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15287,
											"end": 15353,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15287,
											"end": 15353,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15359,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15359,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15359,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15365,
											"end": 15440,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 15365,
											"end": 15440,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15408,
											"end": 15411,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15429,
											"end": 15434,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15422,
											"end": 15434,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15422,
											"end": 15434,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15365,
											"end": 15440,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15365,
											"end": 15440,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15365,
											"end": 15440,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15365,
											"end": 15440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15446,
											"end": 15708,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 15446,
											"end": 15708,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15556,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 15587,
											"end": 15594,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15556,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 15556,
											"end": 15595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15556,
											"end": 15595,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 15556,
											"end": 15595,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15617,
											"end": 15701,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 15659,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 15683,
											"end": 15699,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15659,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 15659,
											"end": 15700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15659,
											"end": 15700,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 15659,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15652,
											"end": 15656,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15646,
											"end": 15657,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 15617,
											"end": 15701,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 15617,
											"end": 15701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15617,
											"end": 15701,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 15617,
											"end": 15701,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15611,
											"end": 15615,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15604,
											"end": 15702,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 15522,
											"end": 15708,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15446,
											"end": 15708,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15446,
											"end": 15708,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15446,
											"end": 15708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15714,
											"end": 16521,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 15714,
											"end": 16521,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15892,
											"end": 15893,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15886,
											"end": 15890,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15882,
											"end": 15894,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15938,
											"end": 15939,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15936,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15927,
											"end": 15940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15988,
											"end": 16000,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16031,
											"end": 16073,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 16059,
											"end": 16072,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16031,
											"end": 16073,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 16031,
											"end": 16073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16031,
											"end": 16073,
											"name": "tag",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 16031,
											"end": 16073,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16014,
											"end": 16073,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16014,
											"end": 16073,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16087,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 16151,
											"end": 16164,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16139,
											"end": 16149,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16087,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 16087,
											"end": 16165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16087,
											"end": 16165,
											"name": "tag",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 16087,
											"end": 16165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15849,
											"end": 16176,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15849,
											"end": 16176,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15849,
											"end": 16176,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16229,
											"end": 16230,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 16223,
											"end": 16227,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16219,
											"end": 16231,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16275,
											"end": 16277,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16268,
											"end": 16273,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16264,
											"end": 16278,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16326,
											"end": 16338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16369,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 16397,
											"end": 16410,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16369,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 16369,
											"end": 16411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16369,
											"end": 16411,
											"name": "tag",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 16369,
											"end": 16411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16352,
											"end": 16411,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16352,
											"end": 16411,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16425,
											"end": 16503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 16489,
											"end": 16502,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16477,
											"end": 16487,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16425,
											"end": 16503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 16425,
											"end": 16503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16425,
											"end": 16503,
											"name": "tag",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 16425,
											"end": 16503,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16186,
											"end": 16514,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16186,
											"end": 16514,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16186,
											"end": 16514,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15714,
											"end": 16521,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15714,
											"end": 16521,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15714,
											"end": 16521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16527,
											"end": 16787,
											"name": "tag",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 16527,
											"end": 16787,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16665,
											"end": 16781,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 16773,
											"end": 16780,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16767,
											"end": 16771,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16665,
											"end": 16781,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 16665,
											"end": 16781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16665,
											"end": 16781,
											"name": "tag",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 16665,
											"end": 16781,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16527,
											"end": 16787,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16527,
											"end": 16787,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16527,
											"end": 16787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16793,
											"end": 16878,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 16793,
											"end": 16878,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16838,
											"end": 16845,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16867,
											"end": 16872,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16856,
											"end": 16872,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16856,
											"end": 16872,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16793,
											"end": 16878,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16793,
											"end": 16878,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16793,
											"end": 16878,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16793,
											"end": 16878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16884,
											"end": 16985,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 16884,
											"end": 16985,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16920,
											"end": 16927,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16960,
											"end": 16978,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16953,
											"end": 16958,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16949,
											"end": 16979,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16938,
											"end": 16979,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16938,
											"end": 16979,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16884,
											"end": 16985,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16884,
											"end": 16985,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16884,
											"end": 16985,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16884,
											"end": 16985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16991,
											"end": 17147,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 16991,
											"end": 17147,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17048,
											"end": 17057,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17081,
											"end": 17141,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 17098,
											"end": 17140,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 17107,
											"end": 17139,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 17133,
											"end": 17138,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17107,
											"end": 17139,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 17107,
											"end": 17139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17107,
											"end": 17139,
											"name": "tag",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 17107,
											"end": 17139,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17098,
											"end": 17140,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 17098,
											"end": 17140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17098,
											"end": 17140,
											"name": "tag",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 17098,
											"end": 17140,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17081,
											"end": 17141,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 17081,
											"end": 17141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17081,
											"end": 17141,
											"name": "tag",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 17081,
											"end": 17141,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17068,
											"end": 17141,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17068,
											"end": 17141,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16991,
											"end": 17147,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16991,
											"end": 17147,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16991,
											"end": 17147,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16991,
											"end": 17147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17153,
											"end": 17298,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 17153,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17247,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "592"
										},
										{
											"begin": 17285,
											"end": 17290,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17247,
											"end": 17291,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 17247,
											"end": 17291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17247,
											"end": 17291,
											"name": "tag",
											"source": 16,
											"value": "592"
										},
										{
											"begin": 17247,
											"end": 17291,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17242,
											"end": 17245,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17235,
											"end": 17292,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17153,
											"end": 17298,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17153,
											"end": 17298,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17153,
											"end": 17298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17304,
											"end": 17540,
											"name": "tag",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 17304,
											"end": 17540,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17404,
											"end": 17408,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17442,
											"end": 17444,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17440,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17427,
											"end": 17445,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17419,
											"end": 17445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17419,
											"end": 17445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17455,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 17530,
											"end": 17531,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17519,
											"end": 17528,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17515,
											"end": 17532,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17506,
											"end": 17512,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17455,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 17455,
											"end": 17533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17455,
											"end": 17533,
											"name": "tag",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 17455,
											"end": 17533,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17304,
											"end": 17540,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17304,
											"end": 17540,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17304,
											"end": 17540,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17304,
											"end": 17540,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17304,
											"end": 17540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17546,
											"end": 17664,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 17546,
											"end": 17664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17633,
											"end": 17657,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 17651,
											"end": 17656,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17633,
											"end": 17657,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 17633,
											"end": 17657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17633,
											"end": 17657,
											"name": "tag",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 17633,
											"end": 17657,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17628,
											"end": 17631,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17621,
											"end": 17658,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17546,
											"end": 17664,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17546,
											"end": 17664,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17546,
											"end": 17664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17670,
											"end": 18112,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 17670,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17819,
											"end": 17823,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17857,
											"end": 17859,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 17846,
											"end": 17855,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17842,
											"end": 17860,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17834,
											"end": 17860,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17834,
											"end": 17860,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17870,
											"end": 17941,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "598"
										},
										{
											"begin": 17938,
											"end": 17939,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17927,
											"end": 17936,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17923,
											"end": 17940,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17914,
											"end": 17920,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 17870,
											"end": 17941,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 17870,
											"end": 17941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17870,
											"end": 17941,
											"name": "tag",
											"source": 16,
											"value": "598"
										},
										{
											"begin": 17870,
											"end": 17941,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17951,
											"end": 18023,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "599"
										},
										{
											"begin": 18019,
											"end": 18021,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18008,
											"end": 18017,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18004,
											"end": 18022,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17995,
											"end": 18001,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17951,
											"end": 18023,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 17951,
											"end": 18023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17951,
											"end": 18023,
											"name": "tag",
											"source": 16,
											"value": "599"
										},
										{
											"begin": 17951,
											"end": 18023,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18033,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "600"
										},
										{
											"begin": 18101,
											"end": 18103,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 18090,
											"end": 18099,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18086,
											"end": 18104,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18077,
											"end": 18083,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18033,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 18033,
											"end": 18105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18033,
											"end": 18105,
											"name": "tag",
											"source": 16,
											"value": "600"
										},
										{
											"begin": 18033,
											"end": 18105,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17670,
											"end": 18112,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 17670,
											"end": 18112,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 17670,
											"end": 18112,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17670,
											"end": 18112,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17670,
											"end": 18112,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17670,
											"end": 18112,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17670,
											"end": 18112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18118,
											"end": 18340,
											"name": "tag",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 18118,
											"end": 18340,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18211,
											"end": 18215,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18249,
											"end": 18251,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18238,
											"end": 18247,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18234,
											"end": 18252,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18226,
											"end": 18252,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18226,
											"end": 18252,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18262,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "602"
										},
										{
											"begin": 18330,
											"end": 18331,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18319,
											"end": 18328,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18315,
											"end": 18332,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18306,
											"end": 18312,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18262,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 18262,
											"end": 18333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18262,
											"end": 18333,
											"name": "tag",
											"source": 16,
											"value": "602"
										},
										{
											"begin": 18262,
											"end": 18333,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18118,
											"end": 18340,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18118,
											"end": 18340,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18118,
											"end": 18340,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18118,
											"end": 18340,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18118,
											"end": 18340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18346,
											"end": 18788,
											"name": "tag",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 18346,
											"end": 18788,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18495,
											"end": 18499,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18533,
											"end": 18535,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 18522,
											"end": 18531,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18518,
											"end": 18536,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18510,
											"end": 18536,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18510,
											"end": 18536,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18546,
											"end": 18617,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 18614,
											"end": 18615,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18612,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18599,
											"end": 18616,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18590,
											"end": 18596,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 18546,
											"end": 18617,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 18546,
											"end": 18617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18546,
											"end": 18617,
											"name": "tag",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 18546,
											"end": 18617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18627,
											"end": 18699,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "605"
										},
										{
											"begin": 18695,
											"end": 18697,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18684,
											"end": 18693,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18680,
											"end": 18698,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18671,
											"end": 18677,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18627,
											"end": 18699,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 18627,
											"end": 18699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18627,
											"end": 18699,
											"name": "tag",
											"source": 16,
											"value": "605"
										},
										{
											"begin": 18627,
											"end": 18699,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18709,
											"end": 18781,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "606"
										},
										{
											"begin": 18777,
											"end": 18779,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 18766,
											"end": 18775,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18762,
											"end": 18780,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18753,
											"end": 18759,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18709,
											"end": 18781,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 18709,
											"end": 18781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18709,
											"end": 18781,
											"name": "tag",
											"source": 16,
											"value": "606"
										},
										{
											"begin": 18709,
											"end": 18781,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18346,
											"end": 18788,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 18346,
											"end": 18788,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 18346,
											"end": 18788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18346,
											"end": 18788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18346,
											"end": 18788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18346,
											"end": 18788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18346,
											"end": 18788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 19126,
											"name": "tag",
											"source": 16,
											"value": "253"
										},
										{
											"begin": 18794,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18915,
											"end": 18919,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18953,
											"end": 18955,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 18942,
											"end": 18951,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18938,
											"end": 18956,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18930,
											"end": 18956,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18930,
											"end": 18956,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18966,
											"end": 19037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "608"
										},
										{
											"begin": 19034,
											"end": 19035,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19023,
											"end": 19032,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19019,
											"end": 19036,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19010,
											"end": 19016,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18966,
											"end": 19037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 18966,
											"end": 19037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18966,
											"end": 19037,
											"name": "tag",
											"source": 16,
											"value": "608"
										},
										{
											"begin": 18966,
											"end": 19037,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19047,
											"end": 19119,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "609"
										},
										{
											"begin": 19115,
											"end": 19117,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19104,
											"end": 19113,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19100,
											"end": 19118,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19091,
											"end": 19097,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19047,
											"end": 19119,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 19047,
											"end": 19119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19047,
											"end": 19119,
											"name": "tag",
											"source": 16,
											"value": "609"
										},
										{
											"begin": 19047,
											"end": 19119,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 19126,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 19126,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 19126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 19126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 19126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 19126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19132,
											"end": 19542,
											"name": "tag",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 19132,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19172,
											"end": 19179,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19195,
											"end": 19215,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 19213,
											"end": 19214,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19195,
											"end": 19215,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 19195,
											"end": 19215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19195,
											"end": 19215,
											"name": "tag",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 19195,
											"end": 19215,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19190,
											"end": 19215,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19190,
											"end": 19215,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19229,
											"end": 19249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 19247,
											"end": 19248,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19229,
											"end": 19249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 19229,
											"end": 19249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19229,
											"end": 19249,
											"name": "tag",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 19229,
											"end": 19249,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19224,
											"end": 19249,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19224,
											"end": 19249,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19284,
											"end": 19285,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19281,
											"end": 19282,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19277,
											"end": 19286,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 19306,
											"end": 19336,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "613"
										},
										{
											"begin": 19324,
											"end": 19335,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19306,
											"end": 19336,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 19306,
											"end": 19336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19306,
											"end": 19336,
											"name": "tag",
											"source": 16,
											"value": "613"
										},
										{
											"begin": 19306,
											"end": 19336,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19295,
											"end": 19336,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19295,
											"end": 19336,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19485,
											"end": 19486,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19476,
											"end": 19483,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19472,
											"end": 19487,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 19469,
											"end": 19470,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19466,
											"end": 19488,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 19446,
											"end": 19447,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19439,
											"end": 19448,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19419,
											"end": 19502,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 19396,
											"end": 19535,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "614"
										},
										{
											"begin": 19396,
											"end": 19535,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19515,
											"end": 19533,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "615"
										},
										{
											"begin": 19515,
											"end": 19533,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 19515,
											"end": 19533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19515,
											"end": 19533,
											"name": "tag",
											"source": 16,
											"value": "615"
										},
										{
											"begin": 19515,
											"end": 19533,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19396,
											"end": 19535,
											"name": "tag",
											"source": 16,
											"value": "614"
										},
										{
											"begin": 19396,
											"end": 19535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19180,
											"end": 19542,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19132,
											"end": 19542,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19132,
											"end": 19542,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19132,
											"end": 19542,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19132,
											"end": 19542,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19132,
											"end": 19542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19548,
											"end": 19728,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 19548,
											"end": 19728,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19596,
											"end": 19673,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19593,
											"end": 19594,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19586,
											"end": 19674,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19693,
											"end": 19697,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 19690,
											"end": 19691,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 19683,
											"end": 19698,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19717,
											"end": 19721,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 19714,
											"end": 19715,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19707,
											"end": 19722,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 19734,
											"end": 19919,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 19734,
											"end": 19919,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19774,
											"end": 19775,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19791,
											"end": 19811,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "618"
										},
										{
											"begin": 19809,
											"end": 19810,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19791,
											"end": 19811,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 19791,
											"end": 19811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19791,
											"end": 19811,
											"name": "tag",
											"source": 16,
											"value": "618"
										},
										{
											"begin": 19791,
											"end": 19811,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19786,
											"end": 19811,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19786,
											"end": 19811,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19825,
											"end": 19845,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "619"
										},
										{
											"begin": 19843,
											"end": 19844,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19825,
											"end": 19845,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 19825,
											"end": 19845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19825,
											"end": 19845,
											"name": "tag",
											"source": 16,
											"value": "619"
										},
										{
											"begin": 19825,
											"end": 19845,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19820,
											"end": 19845,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19820,
											"end": 19845,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19864,
											"end": 19865,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19854,
											"end": 19889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "620"
										},
										{
											"begin": 19854,
											"end": 19889,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19869,
											"end": 19887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "621"
										},
										{
											"begin": 19869,
											"end": 19887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 19869,
											"end": 19887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19869,
											"end": 19887,
											"name": "tag",
											"source": 16,
											"value": "621"
										},
										{
											"begin": 19869,
											"end": 19887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19854,
											"end": 19889,
											"name": "tag",
											"source": 16,
											"value": "620"
										},
										{
											"begin": 19854,
											"end": 19889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19911,
											"end": 19912,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19908,
											"end": 19909,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19904,
											"end": 19913,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 19899,
											"end": 19913,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19899,
											"end": 19913,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19734,
											"end": 19919,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19734,
											"end": 19919,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19734,
											"end": 19919,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19734,
											"end": 19919,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19734,
											"end": 19919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19925,
											"end": 20041,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 19925,
											"end": 20041,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19995,
											"end": 20016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "623"
										},
										{
											"begin": 20010,
											"end": 20015,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19995,
											"end": 20016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 19995,
											"end": 20016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19995,
											"end": 20016,
											"name": "tag",
											"source": 16,
											"value": "623"
										},
										{
											"begin": 19995,
											"end": 20016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19988,
											"end": 19993,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19985,
											"end": 20017,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 19975,
											"end": 20035,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "624"
										},
										{
											"begin": 19975,
											"end": 20035,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20031,
											"end": 20032,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20028,
											"end": 20029,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 20021,
											"end": 20033,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 19975,
											"end": 20035,
											"name": "tag",
											"source": 16,
											"value": "624"
										},
										{
											"begin": 19975,
											"end": 20035,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19925,
											"end": 20041,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19925,
											"end": 20041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20047,
											"end": 20184,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 20047,
											"end": 20184,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20101,
											"end": 20106,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20132,
											"end": 20138,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20126,
											"end": 20139,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20117,
											"end": 20139,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20117,
											"end": 20139,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20148,
											"end": 20178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "626"
										},
										{
											"begin": 20172,
											"end": 20177,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20148,
											"end": 20178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 20148,
											"end": 20178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20148,
											"end": 20178,
											"name": "tag",
											"source": 16,
											"value": "626"
										},
										{
											"begin": 20148,
											"end": 20178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20047,
											"end": 20184,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20047,
											"end": 20184,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20047,
											"end": 20184,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20047,
											"end": 20184,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20047,
											"end": 20184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20190,
											"end": 20535,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 20190,
											"end": 20535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20257,
											"end": 20263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20306,
											"end": 20308,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20294,
											"end": 20303,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20285,
											"end": 20292,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20281,
											"end": 20304,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 20277,
											"end": 20309,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 20274,
											"end": 20393,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20274,
											"end": 20393,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "628"
										},
										{
											"begin": 20274,
											"end": 20393,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20312,
											"end": 20391,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "629"
										},
										{
											"begin": 20312,
											"end": 20391,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 20312,
											"end": 20391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20312,
											"end": 20391,
											"name": "tag",
											"source": 16,
											"value": "629"
										},
										{
											"begin": 20312,
											"end": 20391,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20274,
											"end": 20393,
											"name": "tag",
											"source": 16,
											"value": "628"
										},
										{
											"begin": 20274,
											"end": 20393,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20432,
											"end": 20433,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20457,
											"end": 20518,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "630"
										},
										{
											"begin": 20510,
											"end": 20517,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20501,
											"end": 20507,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20490,
											"end": 20499,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20486,
											"end": 20508,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20457,
											"end": 20518,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 20457,
											"end": 20518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20457,
											"end": 20518,
											"name": "tag",
											"source": 16,
											"value": "630"
										},
										{
											"begin": 20457,
											"end": 20518,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20447,
											"end": 20518,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20447,
											"end": 20518,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20403,
											"end": 20528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20190,
											"end": 20535,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20190,
											"end": 20535,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20190,
											"end": 20535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20190,
											"end": 20535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20190,
											"end": 20535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20541,
											"end": 20721,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 20541,
											"end": 20721,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20589,
											"end": 20666,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20586,
											"end": 20587,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20579,
											"end": 20667,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20686,
											"end": 20690,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 20683,
											"end": 20684,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 20676,
											"end": 20691,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20710,
											"end": 20714,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 20707,
											"end": 20708,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20700,
											"end": 20715,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 20727,
											"end": 20868,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 20727,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20776,
											"end": 20780,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20799,
											"end": 20802,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20791,
											"end": 20802,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20791,
											"end": 20802,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20822,
											"end": 20825,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20819,
											"end": 20820,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20812,
											"end": 20826,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20856,
											"end": 20860,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20853,
											"end": 20854,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20843,
											"end": 20861,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 20835,
											"end": 20861,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20835,
											"end": 20861,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20727,
											"end": 20868,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20727,
											"end": 20868,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20727,
											"end": 20868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20727,
											"end": 20868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20874,
											"end": 20967,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 20874,
											"end": 20967,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20911,
											"end": 20917,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20958,
											"end": 20960,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20953,
											"end": 20955,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 20946,
											"end": 20951,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20942,
											"end": 20956,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20938,
											"end": 20961,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 20928,
											"end": 20961,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20928,
											"end": 20961,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20874,
											"end": 20967,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20874,
											"end": 20967,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20874,
											"end": 20967,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20874,
											"end": 20967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20973,
											"end": 21080,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 20973,
											"end": 21080,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21017,
											"end": 21025,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21067,
											"end": 21072,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21061,
											"end": 21065,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21057,
											"end": 21073,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 21036,
											"end": 21073,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21036,
											"end": 21073,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20973,
											"end": 21080,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20973,
											"end": 21080,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20973,
											"end": 21080,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20973,
											"end": 21080,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20973,
											"end": 21080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21086,
											"end": 21479,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 21086,
											"end": 21479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21155,
											"end": 21161,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21205,
											"end": 21206,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 21193,
											"end": 21203,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21189,
											"end": 21207,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 21228,
											"end": 21325,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "636"
										},
										{
											"begin": 21258,
											"end": 21324,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21247,
											"end": 21256,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21228,
											"end": 21325,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 21228,
											"end": 21325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21228,
											"end": 21325,
											"name": "tag",
											"source": 16,
											"value": "636"
										},
										{
											"begin": 21228,
											"end": 21325,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21346,
											"end": 21385,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 21376,
											"end": 21384,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21365,
											"end": 21374,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21346,
											"end": 21385,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 21346,
											"end": 21385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21346,
											"end": 21385,
											"name": "tag",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 21346,
											"end": 21385,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21334,
											"end": 21385,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 21334,
											"end": 21385,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21418,
											"end": 21422,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 21414,
											"end": 21423,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 21407,
											"end": 21412,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21403,
											"end": 21424,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 21394,
											"end": 21424,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 21394,
											"end": 21424,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21467,
											"end": 21471,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 21457,
											"end": 21465,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21453,
											"end": 21472,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 21446,
											"end": 21451,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21443,
											"end": 21473,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 21433,
											"end": 21473,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21433,
											"end": 21473,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21162,
											"end": 21479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21162,
											"end": 21479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21086,
											"end": 21479,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 21086,
											"end": 21479,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21086,
											"end": 21479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21086,
											"end": 21479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21086,
											"end": 21479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21086,
											"end": 21479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21485,
											"end": 21754,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 21485,
											"end": 21754,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21595,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 21626,
											"end": 21633,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21595,
											"end": 21634,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 21595,
											"end": 21634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21595,
											"end": 21634,
											"name": "tag",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 21595,
											"end": 21634,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21656,
											"end": 21747,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "640"
										},
										{
											"begin": 21705,
											"end": 21746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "641"
										},
										{
											"begin": 21729,
											"end": 21745,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21705,
											"end": 21746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 21705,
											"end": 21746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21705,
											"end": 21746,
											"name": "tag",
											"source": 16,
											"value": "641"
										},
										{
											"begin": 21705,
											"end": 21746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21697,
											"end": 21703,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21690,
											"end": 21694,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21684,
											"end": 21695,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 21656,
											"end": 21747,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 21656,
											"end": 21747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21656,
											"end": 21747,
											"name": "tag",
											"source": 16,
											"value": "640"
										},
										{
											"begin": 21656,
											"end": 21747,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21650,
											"end": 21654,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21643,
											"end": 21748,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 21561,
											"end": 21754,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21485,
											"end": 21754,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21485,
											"end": 21754,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21485,
											"end": 21754,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21485,
											"end": 21754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21760,
											"end": 21833,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 21760,
											"end": 21833,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21805,
											"end": 21808,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21760,
											"end": 21833,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21760,
											"end": 21833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21839,
											"end": 22028,
											"name": "tag",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 21839,
											"end": 22028,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21916,
											"end": 21948,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "644"
										},
										{
											"begin": 21916,
											"end": 21948,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 21916,
											"end": 21948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21916,
											"end": 21948,
											"name": "tag",
											"source": 16,
											"value": "644"
										},
										{
											"begin": 21916,
											"end": 21948,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21957,
											"end": 22022,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "645"
										},
										{
											"begin": 22015,
											"end": 22021,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22007,
											"end": 22013,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22001,
											"end": 22005,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21957,
											"end": 22022,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 21957,
											"end": 22022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21957,
											"end": 22022,
											"name": "tag",
											"source": 16,
											"value": "645"
										},
										{
											"begin": 21957,
											"end": 22022,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21892,
											"end": 22028,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21839,
											"end": 22028,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21839,
											"end": 22028,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21839,
											"end": 22028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22034,
											"end": 22220,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 22034,
											"end": 22220,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22094,
											"end": 22214,
											"name": "tag",
											"source": 16,
											"value": "647"
										},
										{
											"begin": 22094,
											"end": 22214,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22111,
											"end": 22114,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22104,
											"end": 22109,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22101,
											"end": 22115,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 22094,
											"end": 22214,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 22094,
											"end": 22214,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "649"
										},
										{
											"begin": 22094,
											"end": 22214,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22165,
											"end": 22204,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "650"
										},
										{
											"begin": 22202,
											"end": 22203,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22195,
											"end": 22200,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22165,
											"end": 22204,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 22165,
											"end": 22204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22165,
											"end": 22204,
											"name": "tag",
											"source": 16,
											"value": "650"
										},
										{
											"begin": 22165,
											"end": 22204,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22138,
											"end": 22139,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 22131,
											"end": 22136,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22127,
											"end": 22140,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22118,
											"end": 22140,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22118,
											"end": 22140,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22094,
											"end": 22214,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "647"
										},
										{
											"begin": 22094,
											"end": 22214,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22094,
											"end": 22214,
											"name": "tag",
											"source": 16,
											"value": "649"
										},
										{
											"begin": 22094,
											"end": 22214,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22034,
											"end": 22220,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22034,
											"end": 22220,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22034,
											"end": 22220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22226,
											"end": 22769,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 22226,
											"end": 22769,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22327,
											"end": 22329,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 22322,
											"end": 22325,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22319,
											"end": 22330,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 22316,
											"end": 22762,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 22316,
											"end": 22762,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "652"
										},
										{
											"begin": 22316,
											"end": 22762,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22361,
											"end": 22399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 22393,
											"end": 22398,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22361,
											"end": 22399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 22361,
											"end": 22399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22361,
											"end": 22399,
											"name": "tag",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 22361,
											"end": 22399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22445,
											"end": 22474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 22463,
											"end": 22473,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22445,
											"end": 22474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 22445,
											"end": 22474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22445,
											"end": 22474,
											"name": "tag",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 22445,
											"end": 22474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22435,
											"end": 22443,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22431,
											"end": 22475,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22628,
											"end": 22630,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22616,
											"end": 22626,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22613,
											"end": 22631,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 22610,
											"end": 22659,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 22610,
											"end": 22659,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "655"
										},
										{
											"begin": 22610,
											"end": 22659,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22649,
											"end": 22657,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22634,
											"end": 22657,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22634,
											"end": 22657,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22610,
											"end": 22659,
											"name": "tag",
											"source": 16,
											"value": "655"
										},
										{
											"begin": 22610,
											"end": 22659,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22672,
											"end": 22752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "656"
										},
										{
											"begin": 22728,
											"end": 22750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "657"
										},
										{
											"begin": 22746,
											"end": 22749,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22728,
											"end": 22750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 22728,
											"end": 22750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22728,
											"end": 22750,
											"name": "tag",
											"source": 16,
											"value": "657"
										},
										{
											"begin": 22728,
											"end": 22750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22718,
											"end": 22726,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22714,
											"end": 22751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22701,
											"end": 22712,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22672,
											"end": 22752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 22672,
											"end": 22752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22672,
											"end": 22752,
											"name": "tag",
											"source": 16,
											"value": "656"
										},
										{
											"begin": 22672,
											"end": 22752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22331,
											"end": 22762,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22331,
											"end": 22762,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22316,
											"end": 22762,
											"name": "tag",
											"source": 16,
											"value": "652"
										},
										{
											"begin": 22316,
											"end": 22762,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22226,
											"end": 22769,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22226,
											"end": 22769,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22226,
											"end": 22769,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22226,
											"end": 22769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22775,
											"end": 22892,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 22775,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22829,
											"end": 22837,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22879,
											"end": 22884,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22873,
											"end": 22877,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22869,
											"end": 22885,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 22848,
											"end": 22885,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22848,
											"end": 22885,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22775,
											"end": 22892,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22775,
											"end": 22892,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22775,
											"end": 22892,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22775,
											"end": 22892,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22775,
											"end": 22892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22898,
											"end": 23067,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 22898,
											"end": 23067,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22942,
											"end": 22948,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22975,
											"end": 23026,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "660"
										},
										{
											"begin": 23023,
											"end": 23024,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23019,
											"end": 23025,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 23011,
											"end": 23016,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 23008,
											"end": 23009,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 23004,
											"end": 23017,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 22975,
											"end": 23026,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 22975,
											"end": 23026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22975,
											"end": 23026,
											"name": "tag",
											"source": 16,
											"value": "660"
										},
										{
											"begin": 22975,
											"end": 23026,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22971,
											"end": 23027,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 23056,
											"end": 23060,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 23050,
											"end": 23054,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23046,
											"end": 23061,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 23036,
											"end": 23061,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23036,
											"end": 23061,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22949,
											"end": 23067,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22898,
											"end": 23067,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22898,
											"end": 23067,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22898,
											"end": 23067,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22898,
											"end": 23067,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22898,
											"end": 23067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23072,
											"end": 23367,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 23072,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23148,
											"end": 23152,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23294,
											"end": 23323,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "662"
										},
										{
											"begin": 23319,
											"end": 23322,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23313,
											"end": 23317,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23294,
											"end": 23323,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 23294,
											"end": 23323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23294,
											"end": 23323,
											"name": "tag",
											"source": 16,
											"value": "662"
										},
										{
											"begin": 23294,
											"end": 23323,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23286,
											"end": 23323,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23286,
											"end": 23323,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23356,
											"end": 23359,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23353,
											"end": 23354,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 23349,
											"end": 23360,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 23343,
											"end": 23347,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23340,
											"end": 23361,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 23332,
											"end": 23361,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23332,
											"end": 23361,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23072,
											"end": 23367,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 23072,
											"end": 23367,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23072,
											"end": 23367,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23072,
											"end": 23367,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23072,
											"end": 23367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23372,
											"end": 24767,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 23372,
											"end": 24767,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23489,
											"end": 23526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "664"
										},
										{
											"begin": 23522,
											"end": 23525,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23489,
											"end": 23526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 23489,
											"end": 23526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23489,
											"end": 23526,
											"name": "tag",
											"source": 16,
											"value": "664"
										},
										{
											"begin": 23489,
											"end": 23526,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23591,
											"end": 23609,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23583,
											"end": 23589,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23580,
											"end": 23610,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 23577,
											"end": 23633,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 23577,
											"end": 23633,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "665"
										},
										{
											"begin": 23577,
											"end": 23633,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 23613,
											"end": 23631,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "666"
										},
										{
											"begin": 23613,
											"end": 23631,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 23613,
											"end": 23631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23613,
											"end": 23631,
											"name": "tag",
											"source": 16,
											"value": "666"
										},
										{
											"begin": 23613,
											"end": 23631,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23577,
											"end": 23633,
											"name": "tag",
											"source": 16,
											"value": "665"
										},
										{
											"begin": 23577,
											"end": 23633,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23657,
											"end": 23695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "667"
										},
										{
											"begin": 23689,
											"end": 23693,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23683,
											"end": 23694,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 23657,
											"end": 23695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 23657,
											"end": 23695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23657,
											"end": 23695,
											"name": "tag",
											"source": 16,
											"value": "667"
										},
										{
											"begin": 23657,
											"end": 23695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23742,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 23802,
											"end": 23808,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23794,
											"end": 23800,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23788,
											"end": 23792,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 23742,
											"end": 23809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 23742,
											"end": 23809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23742,
											"end": 23809,
											"name": "tag",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 23742,
											"end": 23809,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23836,
											"end": 23837,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23860,
											"end": 23864,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 23847,
											"end": 23864,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23847,
											"end": 23864,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23892,
											"end": 23894,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 23884,
											"end": 23890,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23881,
											"end": 23895,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 23909,
											"end": 23910,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 23904,
											"end": 24522,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23904,
											"end": 24522,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 23904,
											"end": 24522,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "670"
										},
										{
											"begin": 23904,
											"end": 24522,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 24566,
											"end": 24567,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 24583,
											"end": 24589,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 24580,
											"end": 24657,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 24580,
											"end": 24657,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "671"
										},
										{
											"begin": 24580,
											"end": 24657,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 24632,
											"end": 24641,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24627,
											"end": 24630,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 24623,
											"end": 24642,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24617,
											"end": 24643,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 24608,
											"end": 24643,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24608,
											"end": 24643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24580,
											"end": 24657,
											"name": "tag",
											"source": 16,
											"value": "671"
										},
										{
											"begin": 24580,
											"end": 24657,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24683,
											"end": 24750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "672"
										},
										{
											"begin": 24743,
											"end": 24749,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 24736,
											"end": 24741,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24683,
											"end": 24750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 24683,
											"end": 24750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24683,
											"end": 24750,
											"name": "tag",
											"source": 16,
											"value": "672"
										},
										{
											"begin": 24683,
											"end": 24750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24677,
											"end": 24681,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 24670,
											"end": 24751,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 24539,
											"end": 24761,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23874,
											"end": 24761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "669"
										},
										{
											"begin": 23874,
											"end": 24761,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23904,
											"end": 24522,
											"name": "tag",
											"source": 16,
											"value": "670"
										},
										{
											"begin": 23904,
											"end": 24522,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23956,
											"end": 23960,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 23952,
											"end": 23961,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 23944,
											"end": 23950,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 23940,
											"end": 23962,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 23990,
											"end": 24027,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "673"
										},
										{
											"begin": 24022,
											"end": 24026,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 23990,
											"end": 24027,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 23990,
											"end": 24027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23990,
											"end": 24027,
											"name": "tag",
											"source": 16,
											"value": "673"
										},
										{
											"begin": 23990,
											"end": 24027,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24049,
											"end": 24050,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 24063,
											"end": 24271,
											"name": "tag",
											"source": 16,
											"value": "674"
										},
										{
											"begin": 24063,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24077,
											"end": 24084,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24074,
											"end": 24075,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 24071,
											"end": 24085,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 24063,
											"end": 24271,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 24063,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "676"
										},
										{
											"begin": 24063,
											"end": 24271,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 24156,
											"end": 24165,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 24151,
											"end": 24154,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 24147,
											"end": 24166,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24141,
											"end": 24167,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 24133,
											"end": 24139,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24126,
											"end": 24168,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 24207,
											"end": 24208,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 24199,
											"end": 24205,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24195,
											"end": 24209,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24185,
											"end": 24209,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 24185,
											"end": 24209,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24254,
											"end": 24256,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 24243,
											"end": 24252,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 24239,
											"end": 24257,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24226,
											"end": 24257,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 24226,
											"end": 24257,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24100,
											"end": 24104,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 24097,
											"end": 24098,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 24093,
											"end": 24105,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24088,
											"end": 24105,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24088,
											"end": 24105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24063,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "674"
										},
										{
											"begin": 24063,
											"end": 24271,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24063,
											"end": 24271,
											"name": "tag",
											"source": 16,
											"value": "676"
										},
										{
											"begin": 24063,
											"end": 24271,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24299,
											"end": 24305,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 24290,
											"end": 24297,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 24287,
											"end": 24306,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 24284,
											"end": 24463,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 24284,
											"end": 24463,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "677"
										},
										{
											"begin": 24284,
											"end": 24463,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 24357,
											"end": 24366,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 24352,
											"end": 24355,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 24348,
											"end": 24367,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24342,
											"end": 24368,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 24400,
											"end": 24448,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "678"
										},
										{
											"begin": 24442,
											"end": 24446,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 24434,
											"end": 24440,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 24430,
											"end": 24447,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 24419,
											"end": 24428,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24400,
											"end": 24448,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 24400,
											"end": 24448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24400,
											"end": 24448,
											"name": "tag",
											"source": 16,
											"value": "678"
										},
										{
											"begin": 24400,
											"end": 24448,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24392,
											"end": 24398,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 24385,
											"end": 24449,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 24307,
											"end": 24463,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24284,
											"end": 24463,
											"name": "tag",
											"source": 16,
											"value": "677"
										},
										{
											"begin": 24284,
											"end": 24463,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24509,
											"end": 24510,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 24505,
											"end": 24506,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 24497,
											"end": 24503,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 24493,
											"end": 24507,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 24489,
											"end": 24511,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24483,
											"end": 24487,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 24476,
											"end": 24512,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 23911,
											"end": 24522,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23911,
											"end": 24522,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23911,
											"end": 24522,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23874,
											"end": 24761,
											"name": "tag",
											"source": 16,
											"value": "669"
										},
										{
											"begin": 23874,
											"end": 24761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23874,
											"end": 24761,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23464,
											"end": 24767,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23464,
											"end": 24767,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23464,
											"end": 24767,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23372,
											"end": 24767,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23372,
											"end": 24767,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23372,
											"end": 24767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24773,
											"end": 25105,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 24773,
											"end": 25105,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24894,
											"end": 24898,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 24932,
											"end": 24934,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 24921,
											"end": 24930,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24917,
											"end": 24935,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24909,
											"end": 24935,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24909,
											"end": 24935,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24945,
											"end": 25016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "680"
										},
										{
											"begin": 25013,
											"end": 25014,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 25002,
											"end": 25011,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 24998,
											"end": 25015,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24989,
											"end": 24995,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 24945,
											"end": 25016,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 24945,
											"end": 25016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24945,
											"end": 25016,
											"name": "tag",
											"source": 16,
											"value": "680"
										},
										{
											"begin": 24945,
											"end": 25016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25026,
											"end": 25098,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "681"
										},
										{
											"begin": 25094,
											"end": 25096,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 25083,
											"end": 25092,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 25079,
											"end": 25097,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 25070,
											"end": 25076,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 25026,
											"end": 25098,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 25026,
											"end": 25098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25026,
											"end": 25098,
											"name": "tag",
											"source": 16,
											"value": "681"
										},
										{
											"begin": 25026,
											"end": 25098,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24773,
											"end": 25105,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 24773,
											"end": 25105,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 24773,
											"end": 25105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24773,
											"end": 25105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24773,
											"end": 25105,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24773,
											"end": 25105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25111,
											"end": 25209,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 25111,
											"end": 25209,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25162,
											"end": 25168,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 25196,
											"end": 25201,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 25190,
											"end": 25202,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 25180,
											"end": 25202,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 25180,
											"end": 25202,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25111,
											"end": 25209,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 25111,
											"end": 25209,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 25111,
											"end": 25209,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25111,
											"end": 25209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25215,
											"end": 25362,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 25215,
											"end": 25362,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25316,
											"end": 25327,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 25353,
											"end": 25356,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 25338,
											"end": 25356,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 25338,
											"end": 25356,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25215,
											"end": 25362,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 25215,
											"end": 25362,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 25215,
											"end": 25362,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25215,
											"end": 25362,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25215,
											"end": 25362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25368,
											"end": 25754,
											"name": "tag",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 25368,
											"end": 25754,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25472,
											"end": 25475,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 25500,
											"end": 25538,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "685"
										},
										{
											"begin": 25532,
											"end": 25537,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 25500,
											"end": 25538,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 25500,
											"end": 25538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25500,
											"end": 25538,
											"name": "tag",
											"source": 16,
											"value": "685"
										},
										{
											"begin": 25500,
											"end": 25538,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25554,
											"end": 25642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "686"
										},
										{
											"begin": 25635,
											"end": 25641,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 25630,
											"end": 25633,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 25554,
											"end": 25642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 25554,
											"end": 25642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25554,
											"end": 25642,
											"name": "tag",
											"source": 16,
											"value": "686"
										},
										{
											"begin": 25554,
											"end": 25642,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25547,
											"end": 25642,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 25547,
											"end": 25642,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25651,
											"end": 25716,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "687"
										},
										{
											"begin": 25709,
											"end": 25715,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 25704,
											"end": 25707,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 25697,
											"end": 25701,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 25690,
											"end": 25695,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 25686,
											"end": 25702,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 25651,
											"end": 25716,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 25651,
											"end": 25716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25651,
											"end": 25716,
											"name": "tag",
											"source": 16,
											"value": "687"
										},
										{
											"begin": 25651,
											"end": 25716,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25741,
											"end": 25747,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 25736,
											"end": 25739,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 25732,
											"end": 25748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 25725,
											"end": 25748,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 25725,
											"end": 25748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25476,
											"end": 25754,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25368,
											"end": 25754,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 25368,
											"end": 25754,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 25368,
											"end": 25754,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25368,
											"end": 25754,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25368,
											"end": 25754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25760,
											"end": 26031,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 25760,
											"end": 26031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25890,
											"end": 25893,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 25912,
											"end": 26005,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "689"
										},
										{
											"begin": 26001,
											"end": 26004,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 25992,
											"end": 25998,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 25912,
											"end": 26005,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 25912,
											"end": 26005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25912,
											"end": 26005,
											"name": "tag",
											"source": 16,
											"value": "689"
										},
										{
											"begin": 25912,
											"end": 26005,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25905,
											"end": 26005,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 25905,
											"end": 26005,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 26022,
											"end": 26025,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 26015,
											"end": 26025,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 26015,
											"end": 26025,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25760,
											"end": 26031,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 25760,
											"end": 26031,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 25760,
											"end": 26031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25760,
											"end": 26031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25760,
											"end": 26031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"contracts/interfaces/IERC1363.sol",
								"contracts/interfaces/IERC165.sol",
								"contracts/interfaces/IERC20.sol",
								"contracts/interfaces/draft-IERC6093.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"contracts/token/ERC20/utils/SafeERC20.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Errors.sol",
								"contracts/utils/introspection/IERC165.sol",
								"src/IVestingToken.sol",
								"src/VestingToken.sol",
								"upgradeable/contracts/proxy/utils/Initializable.sol",
								"upgradeable/contracts/proxy/utils/InitializableStorage.sol",
								"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
								"upgradeable/contracts/utils/ContextUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"availableBalanceOf(address)": "25d998bb",
							"balanceOf(address)": "70a08231",
							"claim()": "4e71d92d",
							"decimals()": "313ce567",
							"getVestingSchedule()": "3a05f0d8",
							"initialize(string,string,address,address)": "8f15b414",
							"lockedSupply()": "ca5c7b91",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"setVestingSchedule(uint256,uint256,(uint256,uint256)[])": "43e8be32",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlockedSupply()": "fd3d27b8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CliffBeforeStartTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectSchedulePortions\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"incorrectTime\",\"type\":\"uint256\"}],\"name\":\"IncorrectScheduleTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintingAfterCliffIsForbidden\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughTokensToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyMinter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyVestingManager\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StartTimeAlreadyElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransfersNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"availableBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"releasable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingSchedule\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"portion\",\"type\":\"uint256\"}],\"internalType\":\"struct Schedule[]\",\"name\":\"schedule\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Vesting\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cliff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"portion\",\"type\":\"uint256\"}],\"internalType\":\"struct Schedule[]\",\"name\":\"schedule\",\"type\":\"tuple[]\"}],\"name\":\"setVestingSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u041a\\u043e\\u0434 \\u043f\\u0440\\u0435\\u0434\\u043e\\u0441\\u0442\\u0430\\u0432\\u043b\\u0435\\u043d \\u0438\\u0441\\u043a\\u043b\\u044e\\u0447\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e \\u0432 \\u043e\\u0437\\u043d\\u0430\\u043a\\u043e\\u043c\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u044b\\u0445 \\u0446\\u0435\\u043b\\u044f\\u0445 \\u0438 \\u043d\\u0435 \\u043f\\u0440\\u043e\\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d \\u0418\\u0437 \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u0430 \\u0443\\u0431\\u0440\\u0430\\u043d\\u043e \\u0432\\u0441\\u0435 \\u043b\\u0438\\u0448\\u043d\\u0435\\u0435, \\u0432\\u043a\\u043b\\u044e\\u0447\\u0430\\u044f \\u043d\\u0435\\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0435 \\u043f\\u0440\\u043e\\u0432\\u0435\\u0440\\u043a\\u0438, \\u0433\\u0435\\u0442\\u0442\\u0435\\u0440\\u044b/\\u0441\\u0435\\u0442\\u0442\\u0435\\u0440\\u044b \\u0438 \\u0441\\u043e\\u0431\\u044b\\u0442\\u0438\\u044f\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"initialize(string,string,address,address)\":{\"details\":\"\\u0421\\u043e\\u0437\\u0434\\u0430\\u0435\\u0442\\u0441\\u044f \\u0438 \\u0438\\u043d\\u0438\\u0446\\u0438\\u0430\\u043b\\u0438\\u0437\\u0438\\u0440\\u0443\\u0435\\u0442\\u0441\\u044f \\u0442\\u043e\\u043b\\u044c\\u043a\\u043e \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u043e\\u043c VestingManager\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"setVestingSchedule(uint256,uint256,(uint256,uint256)[])\":{\"details\":\"\\u0417\\u0434\\u0435\\u0441\\u044c \\u0432\\u0430\\u0436\\u043d\\u043e \\u043f\\u0440\\u043e\\u0432\\u0435\\u0440\\u0438\\u0442\\u044c \\u0447\\u0442\\u043e \\u0440\\u0430\\u0441\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u0435 \\u0431\\u044b\\u043b\\u043e \\u043f\\u0435\\u0440\\u0435\\u0434\\u0430\\u043d\\u043e \\u043a\\u043e\\u0440\\u0440\\u0435\\u043a\\u0442\\u043d\\u043e\\u0435\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"\\u041a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442 share-\\u0442\\u043e\\u043a\\u0435\\u043d\\u0430 (\\u0432\\u0435\\u0441\\u0442\\u0438\\u043d\\u0433-\\u0442\\u043e\\u043a\\u0435\\u043d)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"\\u0421\\u0436\\u0438\\u0433\\u0430\\u0435\\u043c share-\\u0442\\u043e\\u043a\\u0435\\u043d \\u0438 \\u043f\\u0435\\u0440\\u0435\\u0432\\u043e\\u0434\\u0438\\u043c \\u0431\\u0435\\u043d\\u0435\\u0444\\u0438\\u0446\\u0438\\u0430\\u0440\\u0443 \\u0440\\u0430\\u0437\\u0431\\u043b\\u043e\\u043a\\u0438\\u0440\\u043e\\u0432\\u0430\\u043d\\u043d\\u044b\\u0435 \\u0431\\u0430\\u0437\\u043e\\u0432\\u044b\\u0435 \\u0442\\u043e\\u043a\\u0435\\u043d\\u044b\"},\"initialize(string,string,address,address)\":{\"notice\":\"\\u0422\\u0430\\u043a \\u043a\\u0430\\u043a \\u044d\\u0442\\u043e \\u043f\\u0440\\u043e\\u043a\\u0441\\u0438, \\u043d\\u0443\\u0436\\u043d\\u043e \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u044c \\u0438\\u043d\\u0438\\u0446\\u0438\\u0430\\u043b\\u0438\\u0437\\u0430\\u0446\\u0438\\u044e\"},\"mint(address,uint256)\":{\"notice\":\"\\u0421\\u043f\\u0438\\u0441\\u044b\\u0432\\u0430\\u0435\\u043c \\u0442\\u043e\\u043a\\u0435\\u043d \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u0431\\u0443\\u0434\\u0435\\u043c \\u0431\\u043b\\u043e\\u043a\\u0438\\u0440\\u043e\\u0432\\u0430\\u0442\\u044c \\u0438 \\u043c\\u0438\\u043d\\u0442\\u0438\\u043c share-\\u0442\\u043e\\u043a\\u0435\\u043d\"},\"setVestingSchedule(uint256,uint256,(uint256,uint256)[])\":{\"notice\":\"\\u0423\\u0441\\u0442\\u0430\\u043d\\u043e\\u0432\\u043a\\u0430 \\u0440\\u0430\\u0441\\u043f\\u0438\\u0441\\u0430\\u043d\\u0438\\u044f \\u0442\\u0430\\u043a\\u0436\\u0435 \\u0432\\u044b\\u043f\\u043e\\u043b\\u043d\\u044f\\u0435\\u0442\\u0441\\u044f \\u043a\\u043e\\u043d\\u0442\\u0440\\u0430\\u043a\\u0442\\u043e\\u043c VestingManager\"}},\"notice\":\"\\u041e\\u0442\\u0432\\u0435\\u0447\\u0430\\u0435\\u0442 \\u0437\\u0430 \\u043b\\u043e\\u0433\\u0438\\u043a\\u0443 \\u0431\\u043b\\u043e\\u043a\\u0438\\u0440\\u043e\\u0432\\u043a\\u0438/\\u0440\\u0430\\u0437\\u0431\\u043b\\u043e\\u043a\\u0438\\u0440\\u043e\\u0432\\u043a\\u0438 \\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/VestingToken.sol\":\"VestingToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x80b4189de089dc632b752b365a16c5063b58cc24da0dd38b82f2c25f56d25c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2717e78844156a86733f1cada84dba906ffe03e4957de12ca219c65e9191b\",\"dweb:/ipfs/QmW8vg3AafPJRo7EC75RQJTtjiaYmfPa4U4sqmEuBXXzaP\"]},\"contracts/utils/Errors.sol\":{\"keccak256\":\"0x1b0625096e82d06abdcf1844172ef78ef54a5e878761f4d905fda07eaf098424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd99f1a4836c07461cb3ea023ae2f6d1d01e80694b764a87623aa7252754756\",\"dweb:/ipfs/QmNPNDuiNU6TJatZcdBcrwixBoo5MSXNDq4kaXhpJLWGpB\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"src/IVestingToken.sol\":{\"keccak256\":\"0x2cad48b2342daf84c93169f521b5c77cbd621e1fbee9b4ac4e8ed10d01e0473f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be3abb4136cb9c74775cc2642530d2777ad949044d55ab4affe10e533b1a298\",\"dweb:/ipfs/QmNwMFhm1BvCEm2wxyf1ycfynrrwdkGP4e5C9Sdc2AdmU9\"]},\"src/VestingToken.sol\":{\"keccak256\":\"0x9f1edabc0304265ec51f3491c0e1f604c772bbe59b1c4853c7e28940e00f05f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d30d609d1a2586de663feb421f784840407b26928e562f23bea622c553d61c54\",\"dweb:/ipfs/QmTZiGsSykdVRqpQDokSFCjUvFpHZsaGrygDTawtDvEgZJ\"]},\"upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x60a75ec64b9a1d362dfd4b3d65a68e0b99caa1e3f8dbb66034f7a48264e93850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655b9556c673bf5c316ac2b7397b4b00f7ef5bdfcbc3652a0335e2c8e0b89a6a\",\"dweb:/ipfs/Qmcd4MhZacdVi5whFiqj2YP5aWsHeb5ca16NHfn4QZQkEc\"]},\"upgradeable/contracts/proxy/utils/InitializableStorage.sol\":{\"keccak256\":\"0x0f5b6e1eab4aa9708d30122c894a02af418e6f0eee913673a9c0b6c3bee25a9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://880461a65aaaf108562def3ef8f007baa1f0669bd3877c2e3f1fcf93e7b68956\",\"dweb:/ipfs/QmRPFPZKt7nEsuAckAmPqTMcngd9uFrgVhNXMNR5M1XTLn\"]},\"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfaa10ae0ed480b307515b612dfb4669a1b86bc6b81f3eff9a36fd6d890050215\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f38f0f9543d06bc69ab5a11ccb8f612afd679f67fdf8821d8515451cd4d2801\",\"dweb:/ipfs/Qmf8LJHwZ6sdyP8R41MTrEouYo68fpntBiryQzQgvN6XnJ\"]},\"upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1119,
								"contract": "src/VestingToken.sol:VestingToken",
								"label": "_minter",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1121,
								"contract": "src/VestingToken.sol:VestingToken",
								"label": "_vestingManager",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1124,
								"contract": "src/VestingToken.sol:VestingToken",
								"label": "_baseToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)304"
							},
							{
								"astId": 1127,
								"contract": "src/VestingToken.sol:VestingToken",
								"label": "_vesting",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Vesting)1057_storage"
							},
							{
								"astId": 1129,
								"contract": "src/VestingToken.sol:VestingToken",
								"label": "_initialLockedSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1140,
								"contract": "src/VestingToken.sol:VestingToken",
								"label": "_initialLocked",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1144,
								"contract": "src/VestingToken.sol:VestingToken",
								"label": "_released",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Schedule)1048_storage)dyn_storage": {
								"base": "t_struct(Schedule)1048_storage",
								"encoding": "dynamic_array",
								"label": "struct Schedule[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)304": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Schedule)1048_storage": {
								"encoding": "inplace",
								"label": "struct Schedule",
								"members": [
									{
										"astId": 1045,
										"contract": "src/VestingToken.sol:VestingToken",
										"label": "endTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1047,
										"contract": "src/VestingToken.sol:VestingToken",
										"label": "portion",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Vesting)1057_storage": {
								"encoding": "inplace",
								"label": "struct Vesting",
								"members": [
									{
										"astId": 1050,
										"contract": "src/VestingToken.sol:VestingToken",
										"label": "startTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1052,
										"contract": "src/VestingToken.sol:VestingToken",
										"label": "cliff",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1056,
										"contract": "src/VestingToken.sol:VestingToken",
										"label": "schedule",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_struct(Schedule)1048_storage)dyn_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim()": {
								"notice": "Сжигаем share-токен и переводим бенефициару разблокированные базовые токены"
							},
							"initialize(string,string,address,address)": {
								"notice": "Так как это прокси, нужно выполнить инициализацию"
							},
							"mint(address,uint256)": {
								"notice": "Списываем токен который будем блокировать и минтим share-токен"
							},
							"setVestingSchedule(uint256,uint256,(uint256,uint256)[])": {
								"notice": "Установка расписания также выполняется контрактом VestingManager"
							}
						},
						"notice": "Отвечает за логику блокировки/разблокировки средств",
						"version": 1
					}
				}
			},
			"upgradeable/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"INITIALIZABLE_STORAGE": {
								"custom:storage-location": "erc7201:openzeppelin.storage.Initializable",
								"details": "Storage of the initializable contract. It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions when using with upgradeable contracts."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"INITIALIZABLE_STORAGE\":{\"custom:storage-location\":\"erc7201:openzeppelin.storage.Initializable\",\"details\":\"Storage of the initializable contract. It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions when using with upgradeable contracts.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"upgradeable/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x60a75ec64b9a1d362dfd4b3d65a68e0b99caa1e3f8dbb66034f7a48264e93850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655b9556c673bf5c316ac2b7397b4b00f7ef5bdfcbc3652a0335e2c8e0b89a6a\",\"dweb:/ipfs/Qmcd4MhZacdVi5whFiqj2YP5aWsHeb5ca16NHfn4QZQkEc\"]},\"upgradeable/contracts/proxy/utils/InitializableStorage.sol\":{\"keccak256\":\"0x0f5b6e1eab4aa9708d30122c894a02af418e6f0eee913673a9c0b6c3bee25a9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://880461a65aaaf108562def3ef8f007baa1f0669bd3877c2e3f1fcf93e7b68956\",\"dweb:/ipfs/QmRPFPZKt7nEsuAckAmPqTMcngd9uFrgVhNXMNR5M1XTLn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x60a75ec64b9a1d362dfd4b3d65a68e0b99caa1e3f8dbb66034f7a48264e93850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655b9556c673bf5c316ac2b7397b4b00f7ef5bdfcbc3652a0335e2c8e0b89a6a\",\"dweb:/ipfs/Qmcd4MhZacdVi5whFiqj2YP5aWsHeb5ca16NHfn4QZQkEc\"]},\"upgradeable/contracts/proxy/utils/InitializableStorage.sol\":{\"keccak256\":\"0x0f5b6e1eab4aa9708d30122c894a02af418e6f0eee913673a9c0b6c3bee25a9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://880461a65aaaf108562def3ef8f007baa1f0669bd3877c2e3f1fcf93e7b68956\",\"dweb:/ipfs/QmRPFPZKt7nEsuAckAmPqTMcngd9uFrgVhNXMNR5M1XTLn\"]},\"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfaa10ae0ed480b307515b612dfb4669a1b86bc6b81f3eff9a36fd6d890050215\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f38f0f9543d06bc69ab5a11ccb8f612afd679f67fdf8821d8515451cd4d2801\",\"dweb:/ipfs/Qmf8LJHwZ6sdyP8R41MTrEouYo68fpntBiryQzQgvN6XnJ\"]},\"upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"upgradeable/contracts/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"upgradeable/contracts/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x60a75ec64b9a1d362dfd4b3d65a68e0b99caa1e3f8dbb66034f7a48264e93850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655b9556c673bf5c316ac2b7397b4b00f7ef5bdfcbc3652a0335e2c8e0b89a6a\",\"dweb:/ipfs/Qmcd4MhZacdVi5whFiqj2YP5aWsHeb5ca16NHfn4QZQkEc\"]},\"upgradeable/contracts/proxy/utils/InitializableStorage.sol\":{\"keccak256\":\"0x0f5b6e1eab4aa9708d30122c894a02af418e6f0eee913673a9c0b6c3bee25a9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://880461a65aaaf108562def3ef8f007baa1f0669bd3877c2e3f1fcf93e7b68956\",\"dweb:/ipfs/QmRPFPZKt7nEsuAckAmPqTMcngd9uFrgVhNXMNR5M1XTLn\"]},\"upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							1041
						],
						"IERC20": [
							304
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 304,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 304,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								1041,
								304
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								238,
								247
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1041
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 1042,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							304
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 305,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 304,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							226
						],
						"IERC20Errors": [
							131
						],
						"IERC721Errors": [
							179
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 101,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 106,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 111,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 120,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 125,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 130,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 227,
							"src": "280:1764:3",
							"usedErrors": [
								101,
								106,
								111,
								120,
								125,
								130
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 179,
							"linearizedBaseContracts": [
								179
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 137,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 142,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 151,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 156,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 161,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 168,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 173,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 178,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 227,
							"src": "2190:2092:3",
							"usedErrors": [
								137,
								142,
								151,
								156,
								161,
								168,
								173,
								178
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 191,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 196,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 201,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 208,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 213,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 218,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 225,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 227,
							"src": "4430:2107:3",
							"usedErrors": [
								191,
								196,
								201,
								208,
								213,
								218,
								225
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							304
						]
					},
					"id": 305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 229,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 238,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 247,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 304,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 304,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 304,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 304,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 304,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 304,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 305,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								238,
								247
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							304
						],
						"IERC20Metadata": [
							330
						]
					},
					"id": 331,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 331,
							"sourceUnit": 305,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 307,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 304,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 310,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 304,
										"src": "306:6:5"
									},
									"id": 311,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 309,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 330,
							"linearizedBaseContracts": [
								330,
								304
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 314,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 330,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 330,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 326,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 330,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 331,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								238,
								247
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1012
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							304
						],
						"SafeERC20": [
							753
						]
					},
					"id": 754,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 332,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 305,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 333,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 304,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 82,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 335,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 754,
							"sourceUnit": 1013,
							"src": "238:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 337,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1012,
										"src": "246:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 339,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 753,
							"linearizedBaseContracts": [
								753
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 342,
									"libraryName": {
										"id": 340,
										"name": "Address",
										"nameLocations": [
											"780:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1012,
										"src": "780:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "774:26:6",
									"typeName": {
										"id": 341,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "792:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "806:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 347,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "907:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:6"
									},
									"src": "876:46:6"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 356,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1043:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1060:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1086:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:6"
									},
									"src": "1004:109:6"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1375:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 368,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "1405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$304",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 371,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "1427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$304",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 271,
																	"src": "1427:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 373,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 362,
																			"src": "1444:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 374,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 364,
																			"src": "1448:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 375,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 369,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$304",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 367,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1385:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:6"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1325:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$304",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 358,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 304,
														"src": "1325:6:6"
													},
													"referencedDeclaration": 304,
													"src": "1325:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$304",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1339:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1351:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:6"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:6"
									},
									"scope": 753,
									"src": "1303:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "1792:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 394,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$304",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 397,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "1844:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$304",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 303,
																	"src": "1844:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 399,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "1865:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 400,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "1871:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 401,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "1875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 402,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 395,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$304",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 393,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1802:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:6"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$304",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 383,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 382,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 304,
														"src": "1728:6:6"
													},
													"referencedDeclaration": 304,
													"src": "1728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$304",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1756:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1768:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:6"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:6"
									},
									"scope": 753,
									"src": "1702:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "2167:139:6",
										"statements": [
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 437,
														"src": "2177:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$753",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$753",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "2231:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 420,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$304",
																"typeString": "contract IERC20"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 281,
														"src": "2200:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 430,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2262:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$304",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 431,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 432,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "2278:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 433,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2293:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$304",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 429,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "2249:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:6"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2112:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$304",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 409,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 304,
														"src": "2112:6:6"
													},
													"referencedDeclaration": 304,
													"src": "2112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$304",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2126:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:6"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:6"
									},
									"scope": 753,
									"src": "2081:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2607:370:6",
										"statements": [
											{
												"id": 479,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:6",
												"statements": [
													{
														"assignments": [
															450
														],
														"declarations": [
															{
																"constant": false,
																"id": 450,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 479,
																"src": "2641:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 449,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 459,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 455,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$753",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$753",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 453,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 457,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "2699:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 451,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "2668:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$304",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 281,
																"src": "2668:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "2725:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 461,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "2744:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 470,
														"nodeType": "IfStatement",
														"src": "2721:160:6",
														"trueBody": {
															"id": 469,
															"nodeType": "Block",
															"src": "2763:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 464,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 444,
																				"src": "2821:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 465,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 450,
																				"src": "2830:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 466,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "2848:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 463,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 356,
																			"src": "2788:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 468,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "2907:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$304",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 473,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "2914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 474,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "2923:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 475,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "2942:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$304",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 471,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "2894:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 478,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2540:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$304",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 441,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 440,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 304,
														"src": "2540:6:6"
													},
													"referencedDeclaration": 304,
													"src": "2540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$304",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2554:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "2571:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:6"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:6"
									},
									"scope": 753,
									"src": "2509:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "3373:303:6",
										"statements": [
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 527,
														"src": "3383:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 492,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 496,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "3426:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$304",
																	"typeString": "contract IERC20"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 291,
															"src": "3426:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 498,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3442:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 499,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3451:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 500,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 494,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:6"
											},
											{
												"condition": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 504,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "3498:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$304",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 505,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "3505:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$304",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 503,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3474:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "IfStatement",
												"src": "3469:201:6",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "3520:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 509,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "3554:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$304",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 512,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 485,
																					"src": "3576:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$304",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 291,
																				"src": "3576:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 514,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 487,
																						"src": "3592:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 515,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 516,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 510,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$304",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 508,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3534:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 521,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "3639:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$304",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 522,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "3646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$304",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 520,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "3619:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 524,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3318:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$304",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 483,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 304,
														"src": "3318:6:6"
													},
													"referencedDeclaration": 304,
													"src": "3318:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$304",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3332:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:6"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 753,
									"src": "3296:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "4123:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 541,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "4137:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4140:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4145:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4137:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4155:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4137:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4223:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 555,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4246:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 556,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "4250:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 557,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "4257:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 553,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4224:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4230:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "4224:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4224:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 568,
													"nodeType": "IfStatement",
													"src": "4219:117:6",
													"trueBody": {
														"id": 567,
														"nodeType": "Block",
														"src": "4264:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 563,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "4318:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4310:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 561,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4310:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4310:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 560,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "4285:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4285:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 566,
																"nodeType": "RevertStatement",
																"src": "4278:47:6"
															}
														]
													}
												},
												"id": 569,
												"nodeType": "IfStatement",
												"src": "4133:203:6",
												"trueBody": {
													"id": 552,
													"nodeType": "Block",
													"src": "4158:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 547,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "4185:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 548,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "4192:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 549,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "4196:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 546,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "4172:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4172:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 551,
															"nodeType": "ExpressionStatement",
															"src": "4172:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "3682:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "4029:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4061:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4052:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 531,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 530,
														"name": "IERC1363",
														"nameLocations": [
															"4052:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "4052:8:6"
													},
													"referencedDeclaration": 81,
													"src": "4052:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4076:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4068:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4068:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4088:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4080:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4080:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4108:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4095:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 537,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4095:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:62:6"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4123:0:6"
									},
									"scope": 753,
									"src": "4020:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "4861:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 586,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "4875:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4878:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4875:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4883:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4875:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4893:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4875:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4971:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 601,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "4998:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 602,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5004:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 603,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5008:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 604,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5015:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 599,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "4972:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4978:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "4972:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4972:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 615,
													"nodeType": "IfStatement",
													"src": "4967:127:6",
													"trueBody": {
														"id": 614,
														"nodeType": "Block",
														"src": "5022:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 610,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 575,
																					"src": "5076:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5068:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 608,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5068:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5068:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 607,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "5043:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5043:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 613,
																"nodeType": "RevertStatement",
																"src": "5036:47:6"
															}
														]
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "4871:223:6",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4896:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 575,
																		"src": "4927:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "4934:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "4940:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4944:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 591,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "4910:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4910:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 597,
															"nodeType": "ExpressionStatement",
															"src": "4910:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "4348:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "4703:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4748:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4739:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 574,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 573,
														"name": "IERC1363",
														"nameLocations": [
															"4739:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "4739:8:6"
													},
													"referencedDeclaration": 81,
													"src": "4739:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4771:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4763:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4793:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4785:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4805:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4841:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4828:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4828:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4729:122:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4861:0:6"
									},
									"scope": 753,
									"src": "4694:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "5867:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 631,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5881:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5884:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5881:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5889:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5881:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5899:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5881:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5967:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 645,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "5989:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 646,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "5993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 647,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6000:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 643,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "5968:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5974:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "5968:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5968:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 658,
													"nodeType": "IfStatement",
													"src": "5963:116:6",
													"trueBody": {
														"id": 657,
														"nodeType": "Block",
														"src": "6007:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 653,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6061:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6053:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 651,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6053:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6053:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 650,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "6028:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6028:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 656,
																"nodeType": "RevertStatement",
																"src": "6021:47:6"
															}
														]
													}
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "5877:202:6",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "5902:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "5929:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 638,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "5936:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "5940:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "5916:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5916:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "5916:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5106:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "5774:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5805:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "5796:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 620,
														"name": "IERC1363",
														"nameLocations": [
															"5796:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5796:8:6"
													},
													"referencedDeclaration": 81,
													"src": "5796:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5820:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "5812:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5812:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5832:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "5824:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5824:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5852:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "5839:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5839:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5795:62:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5867:0:6"
									},
									"scope": 753,
									"src": "5765:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6538:559:6",
										"statements": [
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6900:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "6887:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 670,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6887:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"id": 677,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "6941:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 674,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "6921:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$304",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$304",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6913:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 672,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6913:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6913:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6928:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 827,
														"src": "6913:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6913:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6887:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 680,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "6960:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6971:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6960:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6981:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6960:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6986:31:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 686,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "6998:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7011:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "7011:4:6",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7010:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 684,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6987:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6991:6:6",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "6987:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6987:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6960:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "6956:135:6",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "7019:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 696,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 665,
																				"src": "7073:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$304",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$304",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7065:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 694,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7065:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7065:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 693,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "7040:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7040:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 699,
															"nodeType": "RevertStatement",
															"src": "7033:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "6091:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "6477:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6504:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6497:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$304",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "IERC20",
														"nameLocations": [
															"6497:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 304,
														"src": "6497:6:6"
													},
													"referencedDeclaration": 304,
													"src": "6497:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$304",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6524:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6511:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 666,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6511:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6496:33:6"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6538:0:6"
									},
									"scope": 753,
									"src": "6468:629:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "7687:489:6",
										"statements": [
											{
												"assignments": [
													715,
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7988:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "7983:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 714,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7983:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "8010:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "7997:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 716,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7997:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [
														{
															"id": 723,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8044:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 720,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "8032:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$304",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$304",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8024:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 718,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8024:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8024:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8039:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "8024:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8024:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7982:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 726,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "8066:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 727,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "8078:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8089:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "8078:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8099:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8078:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 733,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 717,
																				"src": "8115:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 735,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8128:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 734,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "8128:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 736,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8127:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 731,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "8104:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "8108:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "8104:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8104:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8078:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 739,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8077:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8066:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 743,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 707,
																			"src": "8147:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$304",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$304",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8139:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 741,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8139:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8139:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8154:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8139:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8159:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8139:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8168:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8139:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8066:103:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 713,
												"id": 750,
												"nodeType": "Return",
												"src": "8059:110:6"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "7103:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "7607:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7638:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "7631:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$304",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "IERC20",
														"nameLocations": [
															"7631:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 304,
														"src": "7631:6:6"
													},
													"referencedDeclaration": 304,
													"src": "7631:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$304",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7658:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "7645:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7645:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7630:33:6"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "7681:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7681:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7680:6:6"
									},
									"scope": 753,
									"src": "7598:578:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 754,
							"src": "750:7428:6",
							"usedErrors": [
								347,
								356
							],
							"usedEvents": []
						}
					],
					"src": "115:8064:6"
				},
				"id": 6
			},
			"contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1012
						],
						"Errors": [
							1029
						]
					},
					"id": 1013,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 755,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1013,
							"sourceUnit": 1030,
							"src": "127:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 756,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1029,
										"src": "135:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1012,
							"linearizedBaseContracts": [
								1012
							],
							"name": "Address",
							"nameLocation": "241:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 763,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:7"
									},
									"src": "335:39:7"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "1361:278:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 773,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1012",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1012",
																		"typeString": "library Address"
																	}
																],
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 771,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 776,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "1399:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "1371:125:7",
												"trueBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "1407:89:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 783,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1012",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1012",
																						"typeString": "library Address"
																					}
																				],
																				"id": 782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 781,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 786,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "1478:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 778,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1029_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1022,
																	"src": "1428:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 788,
															"nodeType": "RevertStatement",
															"src": "1421:64:7"
														}
													]
												}
											},
											{
												"assignments": [
													792,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 809,
														"src": "1507:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 791,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 799,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 793,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "1525:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 795,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "1547:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:7"
											},
											{
												"condition": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:7",
													"subExpression": {
														"id": 800,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "1573:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "1568:65:7",
												"trueBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "1582:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 802,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "1603:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1029_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "1603:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 806,
															"nodeType": "RevertStatement",
															"src": "1596:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1309:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1336:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:7"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:7"
									},
									"scope": 1012,
									"src": "1290:349:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "2573:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2612:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "2620:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 820,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "2590:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 819,
												"id": 825,
												"nodeType": "Return",
												"src": "2583:45:7"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2506:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:7"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2559:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:7"
									},
									"scope": 1012,
									"src": "2484:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "3072:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 841,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1012",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1012",
																		"typeString": "library Address"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 839,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 844,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "3110:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 858,
												"nodeType": "IfStatement",
												"src": "3082:123:7",
												"trueBody": {
													"id": 857,
													"nodeType": "Block",
													"src": "3117:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 851,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1012",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1012",
																						"typeString": "library Address"
																					}
																				],
																				"id": 850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 849,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 854,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "3188:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 846,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "3138:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1029_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1022,
																	"src": "3138:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 856,
															"nodeType": "RevertStatement",
															"src": "3131:63:7"
														}
													]
												}
											},
											{
												"assignments": [
													860,
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 876,
														"src": "3215:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 859,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 876,
														"src": "3229:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 861,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 869,
												"initialValue": {
													"arguments": [
														{
															"id": 867,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "3282:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 863,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "3256:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 865,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "3275:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 871,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "3331:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "3339:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 873,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "3348:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 870,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "3304:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 838,
												"id": 875,
												"nodeType": "Return",
												"src": "3297:62:7"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2990:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3006:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3025:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:7"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "3058:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:7"
									},
									"scope": 1012,
									"src": "2959:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "3605:154:7",
										"statements": [
											{
												"assignments": [
													888,
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 902,
														"src": "3616:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 887,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 890,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 902,
														"src": "3630:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 889,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"initialValue": {
													"arguments": [
														{
															"id": 893,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "3675:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 891,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "3657:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "3724:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "3732:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 899,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "3741:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 896,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "3697:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 886,
												"id": 901,
												"nodeType": "Return",
												"src": "3690:62:7"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "3533:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "3549:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:7"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "3591:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:7"
									},
									"scope": 1012,
									"src": "3505:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "3997:156:7",
										"statements": [
											{
												"assignments": [
													914,
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 914,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "4008:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 913,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "4022:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 915,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 921,
												"initialValue": {
													"arguments": [
														{
															"id": 919,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "4069:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 917,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "4049:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "4118:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "4126:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 925,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "4135:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "4091:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 912,
												"id": 927,
												"nodeType": "Return",
												"src": "4084:62:7"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "3930:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "3946:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 907,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:7"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "3983:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 910,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:7"
									},
									"scope": 1012,
									"src": "3900:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "4579:424:7",
										"statements": [
											{
												"condition": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:7",
													"subExpression": {
														"id": 941,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "4594:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "4653:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 948,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "4841:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 952,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 932,
																				"src": "4867:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 963,
															"nodeType": "IfStatement",
															"src": "4837:119:7",
															"trueBody": {
																"id": 962,
																"nodeType": "Block",
																"src": "4892:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 959,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 932,
																					"src": "4934:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 958,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "4917:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 961,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 964,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "4976:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 940,
															"id": 965,
															"nodeType": "Return",
															"src": "4969:17:7"
														}
													]
												},
												"id": 967,
												"nodeType": "IfStatement",
												"src": "4589:408:7",
												"trueBody": {
													"id": 947,
													"nodeType": "Block",
													"src": "4603:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 944,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "4625:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 943,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "4617:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 946,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "4466:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "4490:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "4512:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 935,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:7"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "4565:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:7"
									},
									"scope": 1012,
									"src": "4421:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "5307:122:7",
										"statements": [
											{
												"condition": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:7",
													"subExpression": {
														"id": 979,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "5322:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "5381:42:7",
													"statements": [
														{
															"expression": {
																"id": 986,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "5402:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 978,
															"id": 987,
															"nodeType": "Return",
															"src": "5395:17:7"
														}
													]
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "5317:106:7",
												"trueBody": {
													"id": 985,
													"nodeType": "Block",
													"src": "5331:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "5353:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 981,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "5345:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "5231:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 971,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "5245:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:7"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "5293:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 976,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:7"
									},
									"scope": 1012,
									"src": "5205:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "5598:463:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 997,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "5674:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1008,
													"nodeType": "Block",
													"src": "6004:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1003,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "6025:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1029_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6032:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "6025:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6025:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1007,
															"nodeType": "RevertStatement",
															"src": "6018:26:7"
														}
													]
												},
												"id": 1009,
												"nodeType": "IfStatement",
												"src": "5670:385:7",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "5697:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5855:133:7",
																"nodeType": "YulBlock",
																"src": "5855:133:7",
																"statements": [
																	{
																		"nativeSrc": "5873:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5873:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5902:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "5902:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5896:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5896:5:7"
																			},
																			"nativeSrc": "5896:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5896:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5877:15:7",
																				"nodeType": "YulTypedName",
																				"src": "5877:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5941:2:7",
																							"nodeType": "YulLiteral",
																							"src": "5941:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5945:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5945:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5937:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5937:3:7"
																					},
																					"nativeSrc": "5937:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5937:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5958:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "5958:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5930:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:7"
																			},
																			"nativeSrc": "5930:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5930:44:7"
																		},
																		"nativeSrc": "5930:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 994,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5902:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 994,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5945:10:7",
																	"valueSize": 1
																}
															],
															"id": 1001,
															"nodeType": "InlineAssembly",
															"src": "5846:142:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "5560:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 993,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:7"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:7"
									},
									"scope": 1012,
									"src": "5543:518:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1013,
							"src": "233:5830:7",
							"usedErrors": [
								763
							],
							"usedEvents": []
						}
					],
					"src": "101:5963:7"
				},
				"id": 7
			},
			"contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1029
						]
					},
					"id": 1030,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1014,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1015,
								"nodeType": "StructuredDocumentation",
								"src": "59:254:8",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality."
							},
							"fullyImplemented": true,
							"id": 1029,
							"linearizedBaseContracts": [
								1029
							],
							"name": "Errors",
							"nameLocation": "322:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "335:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1022,
									"name": "InsufficientBalance",
									"nameLocation": "440:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "468:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "460:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "485:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "477:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:33:8"
									},
									"src": "434:59:8"
								},
								{
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "499:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1025,
									"name": "FailedCall",
									"nameLocation": "599:10:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:8"
									},
									"src": "593:19:8"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "618:46:8",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1028,
									"name": "FailedDeployment",
									"nameLocation": "675:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:8"
									},
									"src": "669:25:8"
								}
							],
							"scope": 1030,
							"src": "314:382:8",
							"usedErrors": [
								1022,
								1025,
								1028
							],
							"usedEvents": []
						}
					],
					"src": "33:664:8"
				},
				"id": 8
			},
			"contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1031,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1032,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1041,
							"linearizedBaseContracts": [
								1041
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1041,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1042,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"src/IVestingToken.sol": {
				"ast": {
					"absolutePath": "src/IVestingToken.sol",
					"exportedSymbols": {
						"IVestingToken": [
							1093
						],
						"Schedule": [
							1048
						],
						"Vesting": [
							1057
						]
					},
					"id": 1094,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"canonicalName": "Schedule",
							"id": 1048,
							"members": [
								{
									"constant": false,
									"id": 1045,
									"mutability": "mutable",
									"name": "endTime",
									"nameLocation": "88:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "80:15:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1044,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1047,
									"mutability": "mutable",
									"name": "portion",
									"nameLocation": "109:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1048,
									"src": "101:15:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1046,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "101:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Schedule",
							"nameLocation": "65:8:10",
							"nodeType": "StructDefinition",
							"scope": 1094,
							"src": "58:61:10",
							"visibility": "public"
						},
						{
							"canonicalName": "Vesting",
							"id": 1057,
							"members": [
								{
									"constant": false,
									"id": 1050,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "150:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "142:17:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1049,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "142:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1052,
									"mutability": "mutable",
									"name": "cliff",
									"nameLocation": "173:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "165:13:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1051,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "165:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1056,
									"mutability": "mutable",
									"name": "schedule",
									"nameLocation": "195:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1057,
									"src": "184:19:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage_ptr",
										"typeString": "struct Schedule[]"
									},
									"typeName": {
										"baseType": {
											"id": 1054,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1053,
												"name": "Schedule",
												"nameLocations": [
													"184:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1048,
												"src": "184:8:10"
											},
											"referencedDeclaration": 1048,
											"src": "184:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Schedule_$1048_storage_ptr",
												"typeString": "struct Schedule"
											}
										},
										"id": 1055,
										"nodeType": "ArrayTypeName",
										"src": "184:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage_ptr",
											"typeString": "struct Schedule[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Vesting",
							"nameLocation": "128:7:10",
							"nodeType": "StructDefinition",
							"scope": 1094,
							"src": "121:85:10",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVestingToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1093,
							"linearizedBaseContracts": [
								1093
							],
							"name": "IVestingToken",
							"nameLocation": "218:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8f15b414",
									"id": 1068,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "247:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "283:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "267:20:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1058,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "267:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "313:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "297:22:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "297:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "337:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "329:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "361:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "353:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:115:10"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:0:10"
									},
									"scope": 1093,
									"src": "238:144:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "43e8be32",
									"id": 1079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setVestingSchedule",
									"nameLocation": "397:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "433:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "425:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "cliff",
												"nameLocation": "460:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "452:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "schedule",
												"nameLocation": "495:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "475:28:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Schedule[]"
												},
												"typeName": {
													"baseType": {
														"id": 1074,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1073,
															"name": "Schedule",
															"nameLocations": [
																"475:8:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1048,
															"src": "475:8:10"
														},
														"referencedDeclaration": 1048,
														"src": "475:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Schedule_$1048_storage_ptr",
															"typeString": "struct Schedule"
														}
													},
													"id": 1075,
													"nodeType": "ArrayTypeName",
													"src": "475:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage_ptr",
														"typeString": "struct Schedule[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:94:10"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:0:10"
									},
									"scope": 1093,
									"src": "388:131:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 1086,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "534:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "547:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "539:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "559:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "551:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:28:10"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:10"
									},
									"scope": 1093,
									"src": "525:51:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3a05f0d8",
									"id": 1092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVestingSchedule",
									"nameLocation": "591:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:10"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "635:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Vesting_$1057_memory_ptr",
													"typeString": "struct Vesting"
												},
												"typeName": {
													"id": 1089,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1088,
														"name": "Vesting",
														"nameLocations": [
															"635:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1057,
														"src": "635:7:10"
													},
													"referencedDeclaration": 1057,
													"src": "635:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vesting_$1057_storage_ptr",
														"typeString": "struct Vesting"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:16:10"
									},
									"scope": 1093,
									"src": "582:69:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1094,
							"src": "208:445:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:622:10"
				},
				"id": 10
			},
			"src/VestingToken.sol": {
				"ast": {
					"absolutePath": "src/VestingToken.sol",
					"exportedSymbols": {
						"ERC20Upgradeable": [
							2534
						],
						"IERC20": [
							304
						],
						"Initializable": [
							1908
						],
						"SafeERC20": [
							753
						],
						"Schedule": [
							1048
						],
						"Vesting": [
							1057
						],
						"VestingToken": [
							1660
						]
					},
					"id": 1661,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1095,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1098,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1661,
							"sourceUnit": 754,
							"src": "58:79:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1096,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 304,
										"src": "66:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1097,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 753,
										"src": "74:9:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "upgradeable/contracts/proxy/utils/Initializable.sol",
							"file": "../upgradeable/contracts/proxy/utils/Initializable.sol",
							"id": 1100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1661,
							"sourceUnit": 1909,
							"src": "215:89:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1099,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1908,
										"src": "223:13:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
							"file": "../upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
							"id": 1102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1661,
							"sourceUnit": 2535,
							"src": "305:91:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1101,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2534,
										"src": "313:16:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/IVestingToken.sol",
							"file": "./IVestingToken.sol",
							"id": 1105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1661,
							"sourceUnit": 1094,
							"src": "458:54:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1103,
										"name": "Vesting",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1057,
										"src": "466:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1104,
										"name": "Schedule",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1048,
										"src": "475:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1107,
										"name": "Initializable",
										"nameLocations": [
											"1038:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1908,
										"src": "1038:13:11"
									},
									"id": 1108,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:13:11"
								},
								{
									"baseName": {
										"id": 1109,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"1053:16:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2534,
										"src": "1053:16:11"
									},
									"id": 1110,
									"nodeType": "InheritanceSpecifier",
									"src": "1053:16:11"
								}
							],
							"canonicalName": "VestingToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1106,
								"nodeType": "StructuredDocumentation",
								"src": "514:498:11",
								"text": " @title Контракт share-токена (вестинг-токен)\n @notice Отвечает за логику блокировки/разблокировки средств\n @dev Код предоставлен исключительно в ознакомительных целях и не протестирован\n Из контракта убрано все лишнее, включая некоторые проверки, геттеры/сеттеры и события"
							},
							"fullyImplemented": true,
							"id": 1660,
							"linearizedBaseContracts": [
								1660,
								2534,
								131,
								330,
								304,
								2580,
								1908
							],
							"name": "VestingToken",
							"nameLocation": "1022:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1114,
									"libraryName": {
										"id": 1111,
										"name": "SafeERC20",
										"nameLocations": [
											"1082:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 753,
										"src": "1082:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1076:27:11",
									"typeName": {
										"id": 1113,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1112,
											"name": "IERC20",
											"nameLocations": [
												"1096:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 304,
											"src": "1096:6:11"
										},
										"referencedDeclaration": 304,
										"src": "1096:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$304",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 1117,
									"mutability": "constant",
									"name": "BASIS_POINTS",
									"nameLocation": "1134:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1109:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1115,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1109:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f303030",
										"id": 1116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1149:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10_000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1119,
									"mutability": "mutable",
									"name": "_minter",
									"nameLocation": "1178:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1162:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1118,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1162:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1121,
									"mutability": "mutable",
									"name": "_vestingManager",
									"nameLocation": "1207:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1191:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1120,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1191:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1124,
									"mutability": "mutable",
									"name": "_baseToken",
									"nameLocation": "1243:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1228:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$304",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1123,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1122,
											"name": "IERC20",
											"nameLocations": [
												"1228:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 304,
											"src": "1228:6:11"
										},
										"referencedDeclaration": 304,
										"src": "1228:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$304",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1127,
									"mutability": "mutable",
									"name": "_vesting",
									"nameLocation": "1275:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1259:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Vesting_$1057_storage",
										"typeString": "struct Vesting"
									},
									"typeName": {
										"id": 1126,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1125,
											"name": "Vesting",
											"nameLocations": [
												"1259:7:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1057,
											"src": "1259:7:11"
										},
										"referencedDeclaration": 1057,
										"src": "1259:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Vesting_$1057_storage_ptr",
											"typeString": "struct Vesting"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1129,
									"mutability": "mutable",
									"name": "_initialLockedSupply",
									"nameLocation": "1305:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1289:36:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1289:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "1346:39:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1132,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "1356:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1356:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "1356:22:11"
											}
										]
									},
									"id": 1136,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:2:11"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1346:0:11"
									},
									"scope": 1660,
									"src": "1332:53:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1140,
									"mutability": "mutable",
									"name": "_initialLocked",
									"nameLocation": "1427:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1391:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1139,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1137,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1399:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1391:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1138,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1410:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1144,
									"mutability": "mutable",
									"name": "_released",
									"nameLocation": "1483:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 1660,
									"src": "1447:45:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1143,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1141,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1455:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1466:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"errorSelector": "9cdc2ed5",
									"id": 1146,
									"name": "OnlyMinter",
									"nameLocation": "1608:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:2:11"
									},
									"src": "1602:19:11"
								},
								{
									"errorSelector": "8eccd8b9",
									"id": 1148,
									"name": "OnlyVestingManager",
									"nameLocation": "1632:18:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1650:2:11"
									},
									"src": "1626:27:11"
								},
								{
									"errorSelector": "08bc1cf6",
									"id": 1150,
									"name": "NotEnoughTokensToClaim",
									"nameLocation": "1664:22:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1686:2:11"
									},
									"src": "1658:31:11"
								},
								{
									"errorSelector": "c18dfcc2",
									"id": 1152,
									"name": "StartTimeAlreadyElapsed",
									"nameLocation": "1700:23:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1723:2:11"
									},
									"src": "1694:32:11"
								},
								{
									"errorSelector": "8147e9e2",
									"id": 1154,
									"name": "CliffBeforeStartTime",
									"nameLocation": "1737:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:2:11"
									},
									"src": "1731:29:11"
								},
								{
									"errorSelector": "c45b8e27",
									"id": 1156,
									"name": "IncorrectSchedulePortions",
									"nameLocation": "1771:25:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:2:11"
									},
									"src": "1765:34:11"
								},
								{
									"errorSelector": "1a3250bd",
									"id": 1160,
									"name": "IncorrectScheduleTime",
									"nameLocation": "1810:21:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "incorrectTime",
												"nameLocation": "1840:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1832:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:23:11"
									},
									"src": "1804:51:11"
								},
								{
									"errorSelector": "ab064ad3",
									"id": 1162,
									"name": "TransfersNotAllowed",
									"nameLocation": "1866:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:2:11"
									},
									"src": "1860:28:11"
								},
								{
									"errorSelector": "d45c7f95",
									"id": 1164,
									"name": "MintingAfterCliffIsForbidden",
									"nameLocation": "1899:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1927:2:11"
									},
									"src": "1893:37:11"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "2003:99:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1166,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2017:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2021:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2017:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1168,
														"name": "_minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "2031:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2017:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "2013:71:11",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "2040:44:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1170,
																	"name": "OnlyMinter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "2061:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2061:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1172,
															"nodeType": "RevertStatement",
															"src": "2054:19:11"
														}
													]
												}
											},
											{
												"id": 1175,
												"nodeType": "PlaceholderStatement",
												"src": "2094:1:11"
											}
										]
									},
									"id": 1177,
									"name": "onlyMinter",
									"nameLocation": "1990:10:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2000:2:11"
									},
									"src": "1981:121:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "2138:115:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1179,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2152:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2156:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2152:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1181,
														"name": "_vestingManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2166:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2152:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "IfStatement",
												"src": "2148:87:11",
												"trueBody": {
													"id": 1186,
													"nodeType": "Block",
													"src": "2183:52:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1183,
																	"name": "OnlyVestingManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "2204:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2204:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1185,
															"nodeType": "RevertStatement",
															"src": "2197:27:11"
														}
													]
												}
											},
											{
												"id": 1188,
												"nodeType": "PlaceholderStatement",
												"src": "2245:1:11"
											}
										]
									},
									"id": 1190,
									"name": "onlyVestingManager",
									"nameLocation": "2117:18:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:2:11"
									},
									"src": "2108:145:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "2684:148:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1205,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "2707:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														},
														{
															"id": 1206,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "2713:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 1204,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "2694:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2694:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "2694:26:11"
											},
											{
												"expression": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1209,
														"name": "_minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "2731:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1210,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2741:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2731:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "2731:16:11"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1213,
														"name": "_baseToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "2757:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$304",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1215,
																"name": "baseToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "2777:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1214,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "2770:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$304_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2770:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$304",
															"typeString": "contract IERC20"
														}
													},
													"src": "2757:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$304",
														"typeString": "contract IERC20"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "2757:30:11"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "_vestingManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2797:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1220,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2815:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2819:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2815:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2797:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "2797:28:11"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "2305:234:11",
										"text": " @notice Так как это прокси, нужно выполнить инициализацию\n @dev Создается и инициализируется только контрактом VestingManager"
									},
									"functionSelector": "8f15b414",
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1201,
												"name": "initializer",
												"nameLocations": [
													"2668:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1762,
												"src": "2668:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2668:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "2553:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2580:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2564:20:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1192,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2564:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2602:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2586:22:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1194,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "2618:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2610:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "baseToken",
												"nameLocation": "2634:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "2626:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:81:11"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2684:0:11"
									},
									"scope": 1660,
									"src": "2544:288:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "3303:321:11",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "scheduleLength",
														"nameLocation": "3321:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "3313:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3313:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"expression": {
														"id": 1241,
														"name": "schedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "3338:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
															"typeString": "struct Schedule calldata[] calldata"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3347:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3338:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3313:40:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1245,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "3386:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1246,
															"name": "cliff",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "3397:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1247,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "3404:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct Schedule calldata[] calldata"
															}
														},
														{
															"id": 1248,
															"name": "scheduleLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "3414:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct Schedule calldata[] calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "_checkVestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "3364:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,struct Schedule calldata[] calldata,uint256) view"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3364:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "3364:65:11"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1251,
															"name": "_vesting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "3440:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vesting_$1057_storage",
																"typeString": "struct Vesting storage ref"
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3449:9:11",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1050,
														"src": "3440:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1254,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3461:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3440:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "3440:30:11"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1257,
															"name": "_vesting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "3480:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vesting_$1057_storage",
																"typeString": "struct Vesting storage ref"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3489:5:11",
														"memberName": "cliff",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "3480:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1260,
														"name": "cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "3497:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3480:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "3480:22:11"
											},
											{
												"body": {
													"id": 1283,
													"nodeType": "Block",
													"src": "3558:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1278,
																			"name": "schedule",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1234,
																			"src": "3595:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct Schedule calldata[] calldata"
																			}
																		},
																		"id": 1280,
																		"indexExpression": {
																			"id": 1279,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1264,
																			"src": "3604:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3595:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Schedule_$1048_calldata_ptr",
																			"typeString": "struct Schedule calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Schedule_$1048_calldata_ptr",
																			"typeString": "struct Schedule calldata"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1273,
																			"name": "_vesting",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1127,
																			"src": "3572:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vesting_$1057_storage",
																				"typeString": "struct Vesting storage ref"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3581:8:11",
																		"memberName": "schedule",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1056,
																		"src": "3572:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage",
																			"typeString": "struct Schedule storage ref[] storage ref"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3590:4:11",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3572:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage_ptr_$_t_struct$_Schedule_$1048_storage_$returns$__$attached_to$_t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Schedule storage ref[] storage pointer,struct Schedule storage ref)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3572:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1282,
															"nodeType": "ExpressionStatement",
															"src": "3572:35:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1267,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "3533:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1268,
														"name": "scheduleLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "3537:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3533:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"initializationExpression": {
													"assignments": [
														1264
													],
													"declarations": [
														{
															"constant": false,
															"id": 1264,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3526:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1284,
															"src": "3518:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1263,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3518:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1266,
													"initialValue": {
														"hexValue": "30",
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3530:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3518:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3553:3:11",
														"subExpression": {
															"id": 1270,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "3553:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1272,
													"nodeType": "ExpressionStatement",
													"src": "3553:3:11"
												},
												"nodeType": "ForStatement",
												"src": "3513:105:11"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "2894:264:11",
										"text": " @notice Установка расписания также выполняется контрактом VestingManager\n @dev Здесь важно проверить что расписание было передано корректное"
									},
									"functionSelector": "43e8be32",
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1236,
												"name": "onlyVestingManager",
												"nameLocations": [
													"3280:18:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1190,
												"src": "3280:18:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3280:18:11"
										}
									],
									"name": "setVestingSchedule",
									"nameLocation": "3172:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "3199:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3191:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "cliff",
												"nameLocation": "3218:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3210:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "schedule",
												"nameLocation": "3245:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "3225:28:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Schedule[]"
												},
												"typeName": {
													"baseType": {
														"id": 1232,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1231,
															"name": "Schedule",
															"nameLocations": [
																"3225:8:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1048,
															"src": "3225:8:11"
														},
														"referencedDeclaration": 1048,
														"src": "3225:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Schedule_$1048_storage_ptr",
															"typeString": "struct Schedule"
														}
													},
													"id": 1233,
													"nodeType": "ArrayTypeName",
													"src": "3225:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage_ptr",
														"typeString": "struct Schedule[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3190:64:11"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3303:0:11"
									},
									"scope": 1660,
									"src": "3163:461:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "3800:695:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1299,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "3814:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1300,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3826:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3832:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3826:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3814:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1307,
												"nodeType": "IfStatement",
												"src": "3810:90:11",
												"trueBody": {
													"id": 1306,
													"nodeType": "Block",
													"src": "3843:57:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1303,
																	"name": "StartTimeAlreadyElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "3864:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3864:25:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1305,
															"nodeType": "RevertStatement",
															"src": "3857:32:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1308,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "3914:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1309,
														"name": "cliff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "3926:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3914:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1315,
												"nodeType": "IfStatement",
												"src": "3910:77:11",
												"trueBody": {
													"id": 1314,
													"nodeType": "Block",
													"src": "3933:54:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1311,
																	"name": "CliffBeforeStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "3954:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3954:22:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1313,
															"nodeType": "RevertStatement",
															"src": "3947:29:11"
														}
													]
												}
											},
											{
												"assignments": [
													1317
												],
												"declarations": [
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "totalPercent",
														"nameLocation": "4005:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1382,
														"src": "3997:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1316,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3997:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1318,
												"nodeType": "VariableDeclarationStatement",
												"src": "3997:20:11"
											},
											{
												"body": {
													"id": 1372,
													"nodeType": "Block",
													"src": "4073:313:11",
													"statements": [
														{
															"expression": {
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1329,
																	"name": "totalPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "4087:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1330,
																			"name": "schedule",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "4103:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct Schedule calldata[] calldata"
																			}
																		},
																		"id": 1332,
																		"indexExpression": {
																			"id": 1331,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "4112:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4103:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Schedule_$1048_calldata_ptr",
																			"typeString": "struct Schedule calldata"
																		}
																	},
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4115:7:11",
																	"memberName": "portion",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1047,
																	"src": "4103:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4087:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1335,
															"nodeType": "ExpressionStatement",
															"src": "4087:35:11"
														},
														{
															"assignments": [
																1337
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1337,
																	"mutability": "mutable",
																	"name": "isEndTimeOutOfOrder",
																	"nameLocation": "4142:19:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1372,
																	"src": "4137:24:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1336,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4137:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1354,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1338,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "4165:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4170:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4165:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1341,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4164:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1342,
																				"name": "schedule",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "4176:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct Schedule calldata[] calldata"
																				}
																			},
																			"id": 1346,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1343,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1320,
																					"src": "4185:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1344,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4189:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "4185:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4176:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Schedule_$1048_calldata_ptr",
																				"typeString": "struct Schedule calldata"
																			}
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4192:7:11",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1045,
																		"src": "4176:23:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1348,
																				"name": "schedule",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "4203:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct Schedule calldata[] calldata"
																				}
																			},
																			"id": 1350,
																			"indexExpression": {
																				"id": 1349,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "4212:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4203:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Schedule_$1048_calldata_ptr",
																				"typeString": "struct Schedule calldata"
																			}
																		},
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4215:7:11",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1045,
																		"src": "4203:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4176:46:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4164:58:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4137:85:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1355,
																		"name": "cliff",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1290,
																		"src": "4241:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1356,
																				"name": "schedule",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "4250:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
																					"typeString": "struct Schedule calldata[] calldata"
																				}
																			},
																			"id": 1358,
																			"indexExpression": {
																				"id": 1357,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "4259:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4250:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Schedule_$1048_calldata_ptr",
																				"typeString": "struct Schedule calldata"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4262:7:11",
																		"memberName": "endTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1045,
																		"src": "4250:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4241:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"id": 1361,
																	"name": "isEndTimeOutOfOrder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "4273:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4241:51:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1371,
															"nodeType": "IfStatement",
															"src": "4237:139:11",
															"trueBody": {
																"id": 1370,
																"nodeType": "Block",
																"src": "4294:82:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1364,
																							"name": "schedule",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1294,
																							"src": "4341:8:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
																								"typeString": "struct Schedule calldata[] calldata"
																							}
																						},
																						"id": 1366,
																						"indexExpression": {
																							"id": 1365,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1320,
																							"src": "4350:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4341:11:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Schedule_$1048_calldata_ptr",
																							"typeString": "struct Schedule calldata"
																						}
																					},
																					"id": 1367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4353:7:11",
																					"memberName": "endTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1045,
																					"src": "4341:19:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1363,
																				"name": "IncorrectScheduleTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "4319:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4319:42:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1369,
																		"nodeType": "RevertStatement",
																		"src": "4312:49:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1323,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "4048:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1324,
														"name": "scheduleLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "4052:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4048:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1373,
												"initializationExpression": {
													"assignments": [
														1320
													],
													"declarations": [
														{
															"constant": false,
															"id": 1320,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4041:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1373,
															"src": "4033:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1319,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4033:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1322,
													"initialValue": {
														"hexValue": "30",
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4045:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4033:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4068:3:11",
														"subExpression": {
															"id": 1326,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "4068:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1328,
													"nodeType": "ExpressionStatement",
													"src": "4068:3:11"
												},
												"nodeType": "ForStatement",
												"src": "4028:358:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1374,
														"name": "totalPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "4400:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1375,
														"name": "BASIS_POINTS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4416:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"nodeType": "IfStatement",
												"src": "4396:93:11",
												"trueBody": {
													"id": 1380,
													"nodeType": "Block",
													"src": "4430:59:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1377,
																	"name": "IncorrectSchedulePortions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "4451:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4451:27:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1379,
															"nodeType": "RevertStatement",
															"src": "4444:34:11"
														}
													]
												}
											}
										]
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkVestingSchedule",
									"nameLocation": "3639:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "3678:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3670:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3670:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "cliff",
												"nameLocation": "3705:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3697:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3697:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "schedule",
												"nameLocation": "3740:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3720:28:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Schedule[]"
												},
												"typeName": {
													"baseType": {
														"id": 1292,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1291,
															"name": "Schedule",
															"nameLocations": [
																"3720:8:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1048,
															"src": "3720:8:11"
														},
														"referencedDeclaration": 1048,
														"src": "3720:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Schedule_$1048_storage_ptr",
															"typeString": "struct Schedule"
														}
													},
													"id": 1293,
													"nodeType": "ArrayTypeName",
													"src": "3720:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage_ptr",
														"typeString": "struct Schedule[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "scheduleLength",
												"nameLocation": "3766:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "3758:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3660:126:11"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3800:0:11"
									},
									"scope": 1660,
									"src": "3630:865:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "4746:297:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1393,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4760:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4766:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4760:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1395,
															"name": "_vesting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4779:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vesting_$1057_storage",
																"typeString": "struct Vesting storage ref"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4788:5:11",
														"memberName": "cliff",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "4779:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4760:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1402,
												"nodeType": "IfStatement",
												"src": "4756:101:11",
												"trueBody": {
													"id": 1401,
													"nodeType": "Block",
													"src": "4795:62:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1398,
																	"name": "MintingAfterCliffIsForbidden",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "4816:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4816:30:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1400,
															"nodeType": "RevertStatement",
															"src": "4809:37:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1406,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4895:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4899:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4895:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1410,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4915:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VestingToken_$1660",
																		"typeString": "contract VestingToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_VestingToken_$1660",
																		"typeString": "contract VestingToken"
																	}
																],
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4907:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4907:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4907:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1412,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "4922:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1403,
															"name": "_baseToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "4867:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$304",
																"typeString": "contract IERC20"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4878:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "4867:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$304_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4867:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "4867:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1416,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4946:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1417,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "4950:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1415,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2366,
														"src": "4940:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4940:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "4940:17:11"
											},
											{
												"expression": {
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1420,
															"name": "_initialLocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "4968:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1422,
														"indexExpression": {
															"id": 1421,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "4983:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4968:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1423,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "4990:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4968:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "4968:28:11"
											},
											{
												"expression": {
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1426,
														"name": "_initialLockedSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "5006:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1427,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "5030:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5006:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "5006:30:11"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4541:138:11",
										"text": " @notice Списываем токен который будем блокировать и минтим share-токен"
									},
									"functionSelector": "40c10f19",
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1390,
												"name": "onlyMinter",
												"nameLocations": [
													"4735:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "4735:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4735:10:11"
										}
									],
									"name": "mint",
									"nameLocation": "4693:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4706:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4698:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4718:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4710:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4710:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4697:28:11"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4746:0:11"
									},
									"scope": 1660,
									"src": "4684:359:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "5285:298:11",
										"statements": [
											{
												"assignments": [
													1436
												],
												"declarations": [
													{
														"constant": false,
														"id": 1436,
														"mutability": "mutable",
														"name": "releasable",
														"nameLocation": "5303:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "5295:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5295:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1441,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1438,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5335:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5339:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5335:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1437,
														"name": "availableBalanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "5316:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5316:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5295:51:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1442,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "5361:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5375:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5361:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1449,
												"nodeType": "IfStatement",
												"src": "5357:77:11",
												"trueBody": {
													"id": 1448,
													"nodeType": "Block",
													"src": "5378:56:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1445,
																	"name": "NotEnoughTokensToClaim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "5399:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5399:24:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1447,
															"nodeType": "RevertStatement",
															"src": "5392:31:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1450,
															"name": "_released",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "5444:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1453,
														"indexExpression": {
															"expression": {
																"id": 1451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5454:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5458:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5454:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5444:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1454,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "5469:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5444:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "5444:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1458,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5496:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5500:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5496:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1460,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "5508:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1457,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "5490:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5490:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "5490:29:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1466,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5553:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5557:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5553:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1468,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "5565:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1463,
															"name": "_baseToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "5529:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$304",
																"typeString": "contract IERC20"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5540:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 380,
														"src": "5529:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$304_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$304_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:47:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "5529:47:11"
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "5090:164:11",
										"text": " @notice Сжигаем share-токен и переводим бенефициару разблокированные базовые токены"
									},
									"functionSelector": "4e71d92d",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "5268:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5273:2:11"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5285:0:11"
									},
									"scope": 1660,
									"src": "5259:324:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "5707:32:11",
										"statements": [
											{
												"expression": {
													"id": 1478,
													"name": "_vesting",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1127,
													"src": "5724:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vesting_$1057_storage",
														"typeString": "struct Vesting storage ref"
													}
												},
												"functionReturnParameters": 1477,
												"id": 1479,
												"nodeType": "Return",
												"src": "5717:15:11"
											}
										]
									},
									"functionSelector": "3a05f0d8",
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVestingSchedule",
									"nameLocation": "5649:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5667:2:11"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "5691:14:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Vesting_$1057_memory_ptr",
													"typeString": "struct Vesting"
												},
												"typeName": {
													"id": 1475,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1474,
														"name": "Vesting",
														"nameLocations": [
															"5691:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1057,
														"src": "5691:7:11"
													},
													"referencedDeclaration": 1057,
													"src": "5691:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vesting_$1057_storage_ptr",
														"typeString": "struct Vesting"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5690:16:11"
									},
									"scope": 1660,
									"src": "5640:99:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "5803:40:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1486,
														"name": "_totalUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "5820:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5820:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1485,
												"id": 1488,
												"nodeType": "Return",
												"src": "5813:23:11"
											}
										]
									},
									"functionSelector": "fd3d27b8",
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlockedSupply",
									"nameLocation": "5754:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5768:2:11"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "5794:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5794:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5793:9:11"
									},
									"scope": 1660,
									"src": "5745:98:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "5905:63:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1495,
														"name": "_initialLockedSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "5922:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1496,
															"name": "_totalUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "5945:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5945:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5922:39:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1499,
												"nodeType": "Return",
												"src": "5915:46:11"
											}
										]
									},
									"functionSelector": "ca5c7b91",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockedSupply",
									"nameLocation": "5858:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5870:2:11"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "5896:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:9:11"
									},
									"scope": 1660,
									"src": "5849:119:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "6060:71:11",
										"statements": [
											{
												"expression": {
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1508,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "6070:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1510,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "6095:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1509,
																"name": "_unlockedOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "6083:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6083:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"baseExpression": {
																"id": 1512,
																"name": "_released",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "6106:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1514,
															"indexExpression": {
																"id": 1513,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "6116:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6106:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6083:41:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6070:54:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "6070:54:11"
											}
										]
									},
									"functionSelector": "25d998bb",
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "availableBalanceOf",
									"nameLocation": "5983:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6010:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "6002:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6002:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6001:17:11"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "releasable",
												"nameLocation": "6048:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "6040:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6040:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6039:20:11"
									},
									"scope": 1660,
									"src": "5974:157:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "6259:82:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1527,
																"name": "_initialLocked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "6293:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1529,
															"indexExpression": {
																"id": 1528,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1521,
																"src": "6308:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6293:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1530,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6318:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6324:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6318:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1526,
														"name": "_computeUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "6276:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6276:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1525,
												"id": 1533,
												"nodeType": "Return",
												"src": "6269:65:11"
											}
										]
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unlockedOf",
									"nameLocation": "6199:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6219:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "6211:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6211:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6210:17:11"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "6250:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6250:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6249:9:11"
									},
									"scope": 1660,
									"src": "6190:151:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "6404:79:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1541,
															"name": "_initialLockedSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "6438:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1542,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6460:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6466:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6460:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1540,
														"name": "_computeUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "6421:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6421:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1539,
												"id": 1545,
												"nodeType": "Return",
												"src": "6414:62:11"
											}
										]
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalUnlocked",
									"nameLocation": "6356:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6370:2:11"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "6395:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6395:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6394:9:11"
									},
									"scope": 1660,
									"src": "6347:136:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "6939:1031:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1557,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "6953:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1558,
															"name": "_vesting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "6960:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vesting_$1057_storage",
																"typeString": "struct Vesting storage ref"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6969:5:11",
														"memberName": "cliff",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "6960:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6953:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"nodeType": "IfStatement",
												"src": "6949:60:11",
												"trueBody": {
													"id": 1563,
													"nodeType": "Block",
													"src": "6976:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6997:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1556,
															"id": 1562,
															"nodeType": "Return",
															"src": "6990:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "currentPeriodStart",
														"nameLocation": "7027:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "7019:26:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7019:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1569,
												"initialValue": {
													"expression": {
														"id": 1567,
														"name": "_vesting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "7048:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vesting_$1057_storage",
															"typeString": "struct Vesting storage ref"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7057:5:11",
													"memberName": "cliff",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1052,
													"src": "7048:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7019:43:11"
											},
											{
												"assignments": [
													1574
												],
												"declarations": [
													{
														"constant": false,
														"id": 1574,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "7090:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "7072:26:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Schedule[]"
														},
														"typeName": {
															"baseType": {
																"id": 1572,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1571,
																	"name": "Schedule",
																	"nameLocations": [
																		"7072:8:11"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1048,
																	"src": "7072:8:11"
																},
																"referencedDeclaration": 1048,
																"src": "7072:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Schedule_$1048_storage_ptr",
																	"typeString": "struct Schedule"
																}
															},
															"id": 1573,
															"nodeType": "ArrayTypeName",
															"src": "7072:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage_ptr",
																"typeString": "struct Schedule[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"expression": {
														"id": 1575,
														"name": "_vesting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "7101:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vesting_$1057_storage",
															"typeString": "struct Vesting storage ref"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7110:8:11",
													"memberName": "schedule",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1056,
													"src": "7101:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_storage_$dyn_storage",
														"typeString": "struct Schedule storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7072:46:11"
											},
											{
												"assignments": [
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "scheduleLength",
														"nameLocation": "7136:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "7128:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7128:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1582,
												"initialValue": {
													"expression": {
														"id": 1580,
														"name": "schedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "7153:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Schedule memory[] memory"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7162:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7153:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7128:40:11"
											},
											{
												"body": {
													"id": 1656,
													"nodeType": "Block",
													"src": "7224:740:11",
													"statements": [
														{
															"assignments": [
																1595
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1595,
																	"mutability": "mutable",
																	"name": "currentPeriod",
																	"nameLocation": "7254:13:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1656,
																	"src": "7238:29:11",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Schedule_$1048_memory_ptr",
																		"typeString": "struct Schedule"
																	},
																	"typeName": {
																		"id": 1594,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1593,
																			"name": "Schedule",
																			"nameLocations": [
																				"7238:8:11"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1048,
																			"src": "7238:8:11"
																		},
																		"referencedDeclaration": 1048,
																		"src": "7238:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Schedule_$1048_storage_ptr",
																			"typeString": "struct Schedule"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1599,
															"initialValue": {
																"baseExpression": {
																	"id": 1596,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "7270:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Schedule_$1048_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Schedule memory[] memory"
																	}
																},
																"id": 1598,
																"indexExpression": {
																	"id": 1597,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "7279:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7270:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Schedule_$1048_memory_ptr",
																	"typeString": "struct Schedule memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7238:43:11"
														},
														{
															"assignments": [
																1601
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1601,
																	"mutability": "mutable",
																	"name": "currentPeriodEnd",
																	"nameLocation": "7303:16:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1656,
																	"src": "7295:24:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1600,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7295:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1604,
															"initialValue": {
																"expression": {
																	"id": 1602,
																	"name": "currentPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "7322:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Schedule_$1048_memory_ptr",
																		"typeString": "struct Schedule memory"
																	}
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7336:7:11",
																"memberName": "endTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1045,
																"src": "7322:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7295:48:11"
														},
														{
															"assignments": [
																1606
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1606,
																	"mutability": "mutable",
																	"name": "currentPeriodPortion",
																	"nameLocation": "7365:20:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1656,
																	"src": "7357:28:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1605,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7357:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1609,
															"initialValue": {
																"expression": {
																	"id": 1607,
																	"name": "currentPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "7388:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Schedule_$1048_memory_ptr",
																		"typeString": "struct Schedule memory"
																	}
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7402:7:11",
																"memberName": "portion",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1047,
																"src": "7388:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7357:52:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1610,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "7428:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1611,
																	"name": "currentPeriodEnd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "7435:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7428:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1654,
																"nodeType": "Block",
																"src": "7796:158:11",
																"statements": [
																	{
																		"expression": {
																			"id": 1648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1641,
																				"name": "unlockedTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1555,
																				"src": "7814:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1644,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1642,
																								"name": "lockedTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1550,
																								"src": "7833:12:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1643,
																								"name": "currentPeriodPortion",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1606,
																								"src": "7848:20:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7833:35:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1645,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7832:37:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1646,
																					"name": "BASIS_POINTS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "7872:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7832:52:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7814:70:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1649,
																		"nodeType": "ExpressionStatement",
																		"src": "7814:70:11"
																	},
																	{
																		"expression": {
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1650,
																				"name": "currentPeriodStart",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1566,
																				"src": "7902:18:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1651,
																				"name": "currentPeriodEnd",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "7923:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7902:37:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1653,
																		"nodeType": "ExpressionStatement",
																		"src": "7902:37:11"
																	}
																]
															},
															"id": 1655,
															"nodeType": "IfStatement",
															"src": "7424:530:11",
															"trueBody": {
																"id": 1640,
																"nodeType": "Block",
																"src": "7453:337:11",
																"statements": [
																	{
																		"assignments": [
																			1614
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1614,
																				"mutability": "mutable",
																				"name": "elapsedPeriodTime",
																				"nameLocation": "7479:17:11",
																				"nodeType": "VariableDeclaration",
																				"scope": 1640,
																				"src": "7471:25:11",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1613,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7471:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1618,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1615,
																				"name": "time",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1552,
																				"src": "7499:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1616,
																				"name": "currentPeriodStart",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1566,
																				"src": "7506:18:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7499:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7471:53:11"
																	},
																	{
																		"assignments": [
																			1620
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1620,
																				"mutability": "mutable",
																				"name": "periodDuration",
																				"nameLocation": "7550:14:11",
																				"nodeType": "VariableDeclaration",
																				"scope": 1640,
																				"src": "7542:22:11",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1619,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7542:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1624,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1621,
																				"name": "currentPeriodEnd",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "7567:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1622,
																				"name": "currentPeriodStart",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1566,
																				"src": "7586:18:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7567:37:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7542:62:11"
																	},
																	{
																		"expression": {
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1625,
																				"name": "unlockedTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1555,
																				"src": "7623:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1630,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1628,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1626,
																									"name": "lockedTokens",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1550,
																									"src": "7662:12:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"id": 1627,
																									"name": "elapsedPeriodTime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1614,
																									"src": "7677:17:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "7662:32:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1629,
																								"name": "currentPeriodPortion",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1606,
																								"src": "7697:20:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7662:55:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1631,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7661:57:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1634,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1632,
																								"name": "periodDuration",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1620,
																								"src": "7722:14:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1633,
																								"name": "BASIS_POINTS",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1117,
																								"src": "7739:12:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7722:29:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1635,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7721:31:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7661:91:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7623:129:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1638,
																		"nodeType": "ExpressionStatement",
																		"src": "7623:129:11"
																	},
																	{
																		"id": 1639,
																		"nodeType": "Break",
																		"src": "7770:5:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1587,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "7199:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1588,
														"name": "scheduleLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "7203:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7199:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1657,
												"initializationExpression": {
													"assignments": [
														1584
													],
													"declarations": [
														{
															"constant": false,
															"id": 1584,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7192:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1657,
															"src": "7184:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1583,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7184:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1586,
													"initialValue": {
														"hexValue": "30",
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7196:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7184:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7219:3:11",
														"subExpression": {
															"id": 1590,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "7219:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1592,
													"nodeType": "ExpressionStatement",
													"src": "7219:3:11"
												},
												"nodeType": "ForStatement",
												"src": "7179:785:11"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "6489:337:11",
										"text": " @notice Основная функция для расчета разблокированных токенов\n @dev Проверяется сколько прошло полных периодов и сколько времени прошло\n после последнего полного периода."
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeUnlocked",
									"nameLocation": "6840:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "lockedTokens",
												"nameLocation": "6865:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "6857:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "6887:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "6879:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6879:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6856:36:11"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "unlockedTokens",
												"nameLocation": "6923:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "6915:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6915:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6914:24:11"
									},
									"scope": 1660,
									"src": "6831:1139:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1661,
							"src": "1013:7386:11",
							"usedErrors": [
								101,
								106,
								111,
								120,
								125,
								130,
								347,
								763,
								1022,
								1025,
								1146,
								1148,
								1150,
								1152,
								1154,
								1156,
								1160,
								1162,
								1164,
								1671,
								1674
							],
							"usedEvents": [
								238,
								247,
								1679
							]
						}
					],
					"src": "32:8368:11"
				},
				"id": 11
			},
			"upgradeable/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "upgradeable/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							1908
						],
						"InitializableStorage": [
							1917
						]
					},
					"id": 1909,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1662,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:12"
						},
						{
							"absolutePath": "upgradeable/contracts/proxy/utils/InitializableStorage.sol",
							"file": "./InitializableStorage.sol",
							"id": 1663,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1909,
							"sourceUnit": 1918,
							"src": "139:36:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1664,
								"nodeType": "StructuredDocumentation",
								"src": "176:2209:12",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 1908,
							"linearizedBaseContracts": [
								1908
							],
							"name": "Initializable",
							"nameLocation": "2404:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "2424:293:12",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 1668,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3190:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 1908,
									"src": "3165:115:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1666,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3165:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 1667,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3214:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "3287:60:12",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 1671,
									"name": "InvalidInitialization",
									"nameLocation": "3358:21:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3379:2:12"
									},
									"src": "3352:30:12"
								},
								{
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "3388:57:12",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 1674,
									"name": "NotInitializing",
									"nameLocation": "3456:15:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3471:2:12"
									},
									"src": "3450:24:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "3480:90:12",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 1679,
									"name": "Initialized",
									"nameLocation": "3581:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3600:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3593:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1676,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3593:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3592:16:12"
									},
									"src": "3575:34:12"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "4159:1081:12",
										"statements": [
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4254:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 1761,
														"src": "4225:30:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
															"typeString": "struct InitializableStorage"
														},
														"typeName": {
															"id": 1683,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1682,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4225:20:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1917,
																"src": "4225:20:12"
															},
															"referencedDeclaration": 1917,
															"src": "4225:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1687,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1685,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "4258:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1917_storage_ptr_$",
															"typeString": "function () pure returns (struct InitializableStorage storage pointer)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
														"typeString": "struct InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4225:59:12"
											},
											{
												"assignments": [
													1689
												],
												"declarations": [
													{
														"constant": false,
														"id": 1689,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4351:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 1761,
														"src": "4346:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1688,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4346:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4368:16:12",
													"subExpression": {
														"expression": {
															"id": 1690,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "4369:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage storage pointer"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4371:13:12",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1916,
														"src": "4369:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4346:38:12"
											},
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4401:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1761,
														"src": "4394:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 1694,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4394:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1698,
												"initialValue": {
													"expression": {
														"id": 1696,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "4415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
															"typeString": "struct InitializableStorage storage pointer"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4417:12:12",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1913,
													"src": "4415:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4394:35:12"
											},
											{
												"assignments": [
													1700
												],
												"declarations": [
													{
														"constant": false,
														"id": 1700,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4778:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 1761,
														"src": "4773:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1699,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4773:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1706,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1701,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "4793:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4808:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4793:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1704,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "4813:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4793:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4773:54:12"
											},
											{
												"assignments": [
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4842:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 1761,
														"src": "4837:17:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4837:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1721,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1709,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "4857:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4872:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4857:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1714,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4885:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$1908",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$1908",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4877:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1712,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4877:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4877:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4891:4:12",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4877:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4896:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4877:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4906:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4877:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4857:50:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4837:70:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4922:13:12",
														"subExpression": {
															"id": 1722,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "4923:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4939:13:12",
														"subExpression": {
															"id": 1724,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "4940:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4922:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1731,
												"nodeType": "IfStatement",
												"src": "4918:91:12",
												"trueBody": {
													"id": 1730,
													"nodeType": "Block",
													"src": "4954:55:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1727,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "4975:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4975:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1729,
															"nodeType": "RevertStatement",
															"src": "4968:30:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1732,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "5018:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage storage pointer"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5020:12:12",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1913,
														"src": "5018:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5035:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5018:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "5018:18:12"
											},
											{
												"condition": {
													"id": 1738,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1689,
													"src": "5050:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1746,
												"nodeType": "IfStatement",
												"src": "5046:67:12",
												"trueBody": {
													"id": 1745,
													"nodeType": "Block",
													"src": "5066:47:12",
													"statements": [
														{
															"expression": {
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1739,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1684,
																		"src": "5080:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																			"typeString": "struct InitializableStorage storage pointer"
																		}
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5082:13:12",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1916,
																	"src": "5080:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5098:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5080:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1744,
															"nodeType": "ExpressionStatement",
															"src": "5080:22:12"
														}
													]
												}
											},
											{
												"id": 1747,
												"nodeType": "PlaceholderStatement",
												"src": "5122:1:12"
											},
											{
												"condition": {
													"id": 1748,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1689,
													"src": "5137:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "5133:101:12",
												"trueBody": {
													"id": 1759,
													"nodeType": "Block",
													"src": "5153:81:12",
													"statements": [
														{
															"expression": {
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1749,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1684,
																		"src": "5167:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																			"typeString": "struct InitializableStorage storage pointer"
																		}
																	},
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5169:13:12",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1916,
																	"src": "5167:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5185:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5167:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1754,
															"nodeType": "ExpressionStatement",
															"src": "5167:23:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5221:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 1755,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "5209:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5209:14:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1758,
															"nodeType": "EmitStatement",
															"src": "5204:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "3615:516:12",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 1762,
									"name": "initializer",
									"nameLocation": "4145:11:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4156:2:12"
									},
									"src": "4136:1104:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "6358:392:12",
										"statements": [
											{
												"assignments": [
													1769
												],
												"declarations": [
													{
														"constant": false,
														"id": 1769,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6453:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "6424:30:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
															"typeString": "struct InitializableStorage"
														},
														"typeName": {
															"id": 1768,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1767,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6424:20:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1917,
																"src": "6424:20:12"
															},
															"referencedDeclaration": 1917,
															"src": "6424:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1772,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1770,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "6457:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1917_storage_ptr_$",
															"typeString": "function () pure returns (struct InitializableStorage storage pointer)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
														"typeString": "struct InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6424:59:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1773,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "6498:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage storage pointer"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6500:13:12",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1916,
														"src": "6498:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1775,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "6517:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																	"typeString": "struct InitializableStorage storage pointer"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6519:12:12",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1913,
															"src": "6517:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 1777,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "6535:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6517:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6498:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1784,
												"nodeType": "IfStatement",
												"src": "6494:105:12",
												"trueBody": {
													"id": 1783,
													"nodeType": "Block",
													"src": "6544:55:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1780,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "6565:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6565:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1782,
															"nodeType": "RevertStatement",
															"src": "6558:30:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1785,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "6608:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage storage pointer"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6610:12:12",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1913,
														"src": "6608:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1788,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "6625:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6608:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "6608:24:12"
											},
											{
												"expression": {
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1791,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "6642:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage storage pointer"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6644:13:12",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1916,
														"src": "6642:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6642:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "6642:22:12"
											},
											{
												"id": 1797,
												"nodeType": "PlaceholderStatement",
												"src": "6674:1:12"
											},
											{
												"expression": {
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1798,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "6685:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage storage pointer"
															}
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6687:13:12",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1916,
														"src": "6685:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6703:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6685:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "6685:23:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1805,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "6735:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1804,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "6723:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6723:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1807,
												"nodeType": "EmitStatement",
												"src": "6718:25:12"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "5246:1068:12",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 1809,
									"name": "reinitializer",
									"nameLocation": "6328:13:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6349:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "6342:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1764,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6342:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6341:16:12"
									},
									"src": "6319:431:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "6988:48:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1812,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "6998:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6998:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "6998:20:12"
											},
											{
												"id": 1815,
												"nodeType": "PlaceholderStatement",
												"src": "7028:1:12"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "6756:199:12",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 1817,
									"name": "onlyInitializing",
									"nameLocation": "6969:16:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6985:2:12"
									},
									"src": "6960:76:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "7203:89:12",
										"statements": [
											{
												"condition": {
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7217:18:12",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1821,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "7218:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7218:17:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1828,
												"nodeType": "IfStatement",
												"src": "7213:73:12",
												"trueBody": {
													"id": 1827,
													"nodeType": "Block",
													"src": "7237:49:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1824,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1674,
																	"src": "7258:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7258:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1826,
															"nodeType": "RevertStatement",
															"src": "7251:24:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "7042:104:12",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7160:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7178:2:12"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7203:0:12"
									},
									"scope": 1908,
									"src": "7151:141:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "7827:373:12",
										"statements": [
											{
												"assignments": [
													1836
												],
												"declarations": [
													{
														"constant": false,
														"id": 1836,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7922:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 1875,
														"src": "7893:30:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
															"typeString": "struct InitializableStorage"
														},
														"typeName": {
															"id": 1835,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1834,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7893:20:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1917,
																"src": "7893:20:12"
															},
															"referencedDeclaration": 1917,
															"src": "7893:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1839,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1837,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "7926:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1917_storage_ptr_$",
															"typeString": "function () pure returns (struct InitializableStorage storage pointer)"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7926:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
														"typeString": "struct InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7893:59:12"
											},
											{
												"condition": {
													"expression": {
														"id": 1840,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "7967:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
															"typeString": "struct InitializableStorage storage pointer"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7969:13:12",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1916,
													"src": "7967:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1846,
												"nodeType": "IfStatement",
												"src": "7963:76:12",
												"trueBody": {
													"id": 1845,
													"nodeType": "Block",
													"src": "7984:55:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1842,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "8005:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8005:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1844,
															"nodeType": "RevertStatement",
															"src": "7998:30:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1847,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "8052:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																"typeString": "struct InitializableStorage storage pointer"
															}
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8054:12:12",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1913,
														"src": "8052:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8075:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1850,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8075:6:12",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 1849,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8070:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8070:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8083:3:12",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8070:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "8052:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1874,
												"nodeType": "IfStatement",
												"src": "8048:146:12",
												"trueBody": {
													"id": 1873,
													"nodeType": "Block",
													"src": "8088:106:12",
													"statements": [
														{
															"expression": {
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1855,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "8102:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
																			"typeString": "struct InitializableStorage storage pointer"
																		}
																	},
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8104:12:12",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1913,
																	"src": "8102:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8124:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 1859,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8124:6:12",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 1858,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8119:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8119:12:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8132:3:12",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8119:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8102:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 1864,
															"nodeType": "ExpressionStatement",
															"src": "8102:33:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8171:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 1867,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8171:6:12",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 1866,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8166:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8166:12:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8179:3:12",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8166:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 1865,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "8154:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8154:29:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1872,
															"nodeType": "EmitStatement",
															"src": "8149:34:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "7298:475:12",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7787:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7807:2:12"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7827:0:12"
									},
									"scope": 1908,
									"src": "7778:422:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "8375:63:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1882,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "8392:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1917_storage_ptr_$",
																"typeString": "function () pure returns (struct InitializableStorage storage pointer)"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8392:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
															"typeString": "struct InitializableStorage storage pointer"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8419:12:12",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1913,
													"src": "8392:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1885,
												"nodeType": "Return",
												"src": "8385:46:12"
											}
										]
									},
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "8206:99:12",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8319:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8341:2:12"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "8367:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1879,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8367:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8366:8:12"
									},
									"scope": 1908,
									"src": "8310:128:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "8610:64:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1893,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "8627:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$1917_storage_ptr_$",
																"typeString": "function () pure returns (struct InitializableStorage storage pointer)"
															}
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8627:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
															"typeString": "struct InitializableStorage storage pointer"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8654:13:12",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1916,
													"src": "8627:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1892,
												"id": 1896,
												"nodeType": "Return",
												"src": "8620:47:12"
											}
										]
									},
									"documentation": {
										"id": 1888,
										"nodeType": "StructuredDocumentation",
										"src": "8444:105:12",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8563:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8578:2:12"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "8604:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8604:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8603:6:12"
									},
									"scope": 1908,
									"src": "8554:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "8894:80:12",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8913:55:12",
													"nodeType": "YulBlock",
													"src": "8913:55:12",
													"statements": [
														{
															"nativeSrc": "8927:31:12",
															"nodeType": "YulAssignment",
															"src": "8927:31:12",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8937:21:12",
																"nodeType": "YulIdentifier",
																"src": "8937:21:12"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8927:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8927:6:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1903,
														"isOffset": false,
														"isSlot": true,
														"src": "8927:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1668,
														"isOffset": false,
														"isSlot": false,
														"src": "8937:21:12",
														"valueSize": 1
													}
												],
												"id": 1905,
												"nodeType": "InlineAssembly",
												"src": "8904:64:12"
											}
										]
									},
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "8680:67:12",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8813:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8837:2:12"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8891:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "8862:30:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
													"typeString": "struct InitializableStorage"
												},
												"typeName": {
													"id": 1902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1901,
														"name": "InitializableStorage",
														"nameLocations": [
															"8862:20:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1917,
														"src": "8862:20:12"
													},
													"referencedDeclaration": 1917,
													"src": "8862:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$1917_storage_ptr",
														"typeString": "struct InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8861:32:12"
									},
									"scope": 1908,
									"src": "8804:170:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1909,
							"src": "2386:6590:12",
							"usedErrors": [
								1671,
								1674
							],
							"usedEvents": [
								1679
							]
						}
					],
					"src": "113:8864:12"
				},
				"id": 12
			},
			"upgradeable/contracts/proxy/utils/InitializableStorage.sol": {
				"ast": {
					"absolutePath": "upgradeable/contracts/proxy/utils/InitializableStorage.sol",
					"exportedSymbols": {
						"InitializableStorage": [
							1917
						]
					},
					"id": 1918,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1910,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"canonicalName": "InitializableStorage",
							"id": 1917,
							"members": [
								{
									"constant": false,
									"id": 1913,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "198:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1917,
									"src": "191:19:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1912,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "191:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1916,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "333:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 1917,
									"src": "328:18:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1915,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "328:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "InitializableStorage",
							"nameLocation": "70:20:13",
							"nodeType": "StructDefinition",
							"scope": 1918,
							"src": "63:290:13",
							"visibility": "public"
						}
					],
					"src": "32:321:13"
				},
				"id": 13
			},
			"upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							2580
						],
						"ERC20Upgradeable": [
							2534
						],
						"IERC20": [
							304
						],
						"IERC20Errors": [
							131
						],
						"IERC20Metadata": [
							330
						],
						"Initializable": [
							1908
						]
					},
					"id": 2535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1919,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:14"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../../../../contracts/token/ERC20/IERC20.sol",
							"id": 1921,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2535,
							"sourceUnit": 305,
							"src": "131:68:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1920,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 304,
										"src": "139:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "../../../../contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 1923,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2535,
							"sourceUnit": 331,
							"src": "200:95:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1922,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 330,
										"src": "208:14:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "upgradeable/contracts/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 1925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2535,
							"sourceUnit": 2581,
							"src": "296:70:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1924,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2580,
										"src": "304:18:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/draft-IERC6093.sol",
							"file": "../../../../contracts/interfaces/draft-IERC6093.sol",
							"id": 1927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2535,
							"sourceUnit": 227,
							"src": "367:81:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1926,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 131,
										"src": "375:12:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "upgradeable/contracts/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2535,
							"sourceUnit": 1909,
							"src": "449:66:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1928,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1908,
										"src": "457:13:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1931,
										"name": "Initializable",
										"nameLocations": [
											"1313:13:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1908,
										"src": "1313:13:14"
									},
									"id": 1932,
									"nodeType": "InheritanceSpecifier",
									"src": "1313:13:14"
								},
								{
									"baseName": {
										"id": 1933,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1328:18:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2580,
										"src": "1328:18:14"
									},
									"id": 1934,
									"nodeType": "InheritanceSpecifier",
									"src": "1328:18:14"
								},
								{
									"baseName": {
										"id": 1935,
										"name": "IERC20",
										"nameLocations": [
											"1348:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 304,
										"src": "1348:6:14"
									},
									"id": 1936,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:14"
								},
								{
									"baseName": {
										"id": 1937,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1356:14:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 330,
										"src": "1356:14:14"
									},
									"id": 1938,
									"nodeType": "InheritanceSpecifier",
									"src": "1356:14:14"
								},
								{
									"baseName": {
										"id": 1939,
										"name": "IERC20Errors",
										"nameLocations": [
											"1372:12:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "1372:12:14"
									},
									"id": 1940,
									"nodeType": "InheritanceSpecifier",
									"src": "1372:12:14"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1930,
								"nodeType": "StructuredDocumentation",
								"src": "517:757:14",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 2534,
							"linearizedBaseContracts": [
								2534,
								131,
								330,
								304,
								2580,
								1908
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1293:16:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "1391:63:14",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 1958,
									"members": [
										{
											"constant": false,
											"id": 1945,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1525:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "1489:45:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1944,
												"keyName": "account",
												"keyNameLocation": "1505:7:14",
												"keyType": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1489:35:14",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1951,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1609:11:14",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "1545:75:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 1950,
												"keyName": "account",
												"keyNameLocation": "1561:7:14",
												"keyType": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1545:63:14",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1949,
													"keyName": "spender",
													"keyNameLocation": "1588:7:14",
													"keyType": {
														"id": 1947,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1580:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1572:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1948,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1599:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1953,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1639:12:14",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "1631:20:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1952,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1631:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1955,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1669:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "1662:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1954,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1662:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1957,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1691:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 1958,
											"src": "1684:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1956,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1684:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1466:12:14",
									"nodeType": "StructDefinition",
									"scope": 2534,
									"src": "1459:246:14",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1961,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1845:20:14",
									"nodeType": "VariableDeclaration",
									"scope": 2534,
									"src": "1820:114:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1959,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1820:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 1960,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1868:66:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "2015:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2034:54:14",
													"nodeType": "YulBlock",
													"src": "2034:54:14",
													"statements": [
														{
															"nativeSrc": "2048:30:14",
															"nodeType": "YulAssignment",
															"src": "2048:30:14",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2058:20:14",
																"nodeType": "YulIdentifier",
																"src": "2058:20:14"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2048:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1965,
														"isOffset": false,
														"isSlot": true,
														"src": "2048:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1961,
														"isOffset": false,
														"isSlot": false,
														"src": "2058:20:14",
														"valueSize": 1
													}
												],
												"id": 1967,
												"nodeType": "InlineAssembly",
												"src": "2025:63:14"
											}
										]
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1950:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1966:2:14"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2012:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "1991:22:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 1964,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1963,
														"name": "ERC20Storage",
														"nameLocations": [
															"1991:12:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1958,
														"src": "1991:12:14"
													},
													"referencedDeclaration": 1958,
													"src": "1991:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1990:24:14"
									},
									"scope": 2534,
									"src": "1941:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "2368:55:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1980,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "2401:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1981,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "2408:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1979,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2013,
														"src": "2378:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "2378:38:14"
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "2100:171:14",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1977,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1976,
												"name": "onlyInitializing",
												"nameLocations": [
													"2351:16:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "2351:16:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2351:16:14"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2285:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2312:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "2298:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1971,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2298:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2333:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "2319:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2319:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:44:14"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2368:0:14"
									},
									"scope": 2534,
									"src": "2276:147:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "2531:114:14",
										"statements": [
											{
												"assignments": [
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2562:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2012,
														"src": "2541:22:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1995,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1994,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2541:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "2541:12:14"
															},
															"referencedDeclaration": 1958,
															"src": "2541:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1999,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1997,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "2566:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1958_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2541:43:14"
											},
											{
												"expression": {
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2000,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "2594:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2596:5:14",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1955,
														"src": "2594:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2003,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "2604:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2594:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "2594:15:14"
											},
											{
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2006,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "2619:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2621:7:14",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1957,
														"src": "2619:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2009,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "2631:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2619:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "2619:19:14"
											}
										]
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1992,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1991,
												"name": "onlyInitializing",
												"nameLocations": [
													"2514:16:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "2514:16:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2514:16:14"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2438:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2475:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2461:19:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1986,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2461:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2496:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2482:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2482:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:44:14"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2531:0:14"
									},
									"scope": 2534,
									"src": "2429:216:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										317
									],
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "2770:84:14",
										"statements": [
											{
												"assignments": [
													2021
												],
												"declarations": [
													{
														"constant": false,
														"id": 2021,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2801:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2028,
														"src": "2780:22:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 2020,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2019,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2780:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "2780:12:14"
															},
															"referencedDeclaration": 1958,
															"src": "2780:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2024,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2022,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "2805:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1958_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2805:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2780:43:14"
											},
											{
												"expression": {
													"expression": {
														"id": 2025,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "2840:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2842:5:14",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1955,
													"src": "2840:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2018,
												"id": 2027,
												"nodeType": "Return",
												"src": "2833:14:14"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "2651:54:14",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2719:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2723:2:14"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "2755:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2016,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2755:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:15:14"
									},
									"scope": 2534,
									"src": "2710:144:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										323
									],
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "3029:86:14",
										"statements": [
											{
												"assignments": [
													2037
												],
												"declarations": [
													{
														"constant": false,
														"id": 2037,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3060:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2044,
														"src": "3039:22:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 2036,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2035,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3039:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "3039:12:14"
															},
															"referencedDeclaration": 1958,
															"src": "3039:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2040,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2038,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "3064:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1958_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3064:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3039:43:14"
											},
											{
												"expression": {
													"expression": {
														"id": 2041,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2037,
														"src": "3099:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3101:7:14",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1957,
													"src": "3099:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2034,
												"id": 2043,
												"nodeType": "Return",
												"src": "3092:16:14"
											}
										]
									},
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "2860:102:14",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2976:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2982:2:14"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3014:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2032,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3014:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3013:15:14"
									},
									"scope": 2534,
									"src": "2967:148:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										329
									],
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "3804:26:14",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3821:2:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 2050,
												"id": 2052,
												"nodeType": "Return",
												"src": "3814:9:14"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "3121:622:14",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3757:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:14"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "3797:5:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2048,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:7:14"
									},
									"scope": 2534,
									"src": "3748:82:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										253
									],
									"body": {
										"id": 2069,
										"nodeType": "Block",
										"src": "3951:91:14",
										"statements": [
											{
												"assignments": [
													2062
												],
												"declarations": [
													{
														"constant": false,
														"id": 2062,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3982:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2069,
														"src": "3961:22:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 2061,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2060,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3961:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "3961:12:14"
															},
															"referencedDeclaration": 1958,
															"src": "3961:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2065,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2063,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "3986:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1958_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3986:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3961:43:14"
											},
											{
												"expression": {
													"expression": {
														"id": 2066,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2062,
														"src": "4021:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4023:12:14",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1953,
													"src": "4021:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2059,
												"id": 2068,
												"nodeType": "Return",
												"src": "4014:21:14"
											}
										]
									},
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "3836:49:14",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 2070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3899:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3910:2:14"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "3942:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3941:9:14"
									},
									"scope": 2534,
									"src": "3890:152:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										261
									],
									"body": {
										"id": 2089,
										"nodeType": "Block",
										"src": "4174:97:14",
										"statements": [
											{
												"assignments": [
													2080
												],
												"declarations": [
													{
														"constant": false,
														"id": 2080,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4205:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2089,
														"src": "4184:22:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 2079,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2078,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4184:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "4184:12:14"
															},
															"referencedDeclaration": 1958,
															"src": "4184:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2083,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2081,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "4209:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1958_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4184:43:14"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 2084,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "4244:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 2085,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4246:9:14",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1945,
														"src": "4244:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2087,
													"indexExpression": {
														"id": 2086,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "4256:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4244:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2077,
												"id": 2088,
												"nodeType": "Return",
												"src": "4237:27:14"
											}
										]
									},
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "4048:47:14",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4109:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4127:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "4119:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4119:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4118:17:14"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "4165:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:9:14"
									},
									"scope": 2534,
									"src": "4100:171:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										271
									],
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "4541:103:14",
										"statements": [
											{
												"assignments": [
													2101
												],
												"declarations": [
													{
														"constant": false,
														"id": 2101,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4559:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2113,
														"src": "4551:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2100,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4551:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2104,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2102,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2562,
														"src": "4567:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:12:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4551:28:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2101,
															"src": "4599:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2107,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "4606:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2108,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "4610:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2105,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "4589:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4589:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "4589:27:14"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4633:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2099,
												"id": 2112,
												"nodeType": "Return",
												"src": "4626:11:14"
											}
										]
									},
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "4277:184:14",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4475:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4492:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "4484:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4484:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4504:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "4496:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4496:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4483:27:14"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "4535:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2097,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4535:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4534:6:14"
									},
									"scope": 2534,
									"src": "4466:178:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										281
									],
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "4791:106:14",
										"statements": [
											{
												"assignments": [
													2126
												],
												"declarations": [
													{
														"constant": false,
														"id": 2126,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4822:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2137,
														"src": "4801:22:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 2125,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2124,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4801:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "4801:12:14"
															},
															"referencedDeclaration": 1958,
															"src": "4801:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2129,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2127,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "4826:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1958_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4826:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4801:43:14"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 2130,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2126,
																"src": "4861:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4863:11:14",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1951,
															"src": "4861:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 2133,
														"indexExpression": {
															"id": 2132,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "4875:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4861:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2135,
													"indexExpression": {
														"id": 2134,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "4882:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4861:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2136,
												"nodeType": "Return",
												"src": "4854:36:14"
											}
										]
									},
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "4650:47:14",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4711:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4729:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "4721:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4721:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4744:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "4736:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4736:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4720:32:14"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "4782:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4782:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4781:9:14"
									},
									"scope": 2534,
									"src": "4702:195:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										291
									],
									"body": {
										"id": 2161,
										"nodeType": "Block",
										"src": "5283:107:14",
										"statements": [
											{
												"assignments": [
													2149
												],
												"declarations": [
													{
														"constant": false,
														"id": 2149,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5301:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2161,
														"src": "5293:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2148,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5293:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2152,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2150,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2562,
														"src": "5309:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5309:12:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:28:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2154,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "5340:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2155,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "5347:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2156,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "5356:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2153,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2417,
															2485
														],
														"referencedDeclaration": 2417,
														"src": "5331:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5331:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2158,
												"nodeType": "ExpressionStatement",
												"src": "5331:31:14"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5379:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2147,
												"id": 2160,
												"nodeType": "Return",
												"src": "5372:11:14"
											}
										]
									},
									"documentation": {
										"id": 2139,
										"nodeType": "StructuredDocumentation",
										"src": "4903:296:14",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 2162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5213:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5229:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "5221:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5221:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5246:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "5238:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5220:32:14"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "5277:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5277:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5276:6:14"
									},
									"scope": 2534,
									"src": "5204:186:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										303
									],
									"body": {
										"id": 2193,
										"nodeType": "Block",
										"src": "6075:151:14",
										"statements": [
											{
												"assignments": [
													2175
												],
												"declarations": [
													{
														"constant": false,
														"id": 2175,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6093:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2193,
														"src": "6085:15:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2174,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6085:7:14",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2178,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2176,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2562,
														"src": "6103:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6103:12:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6085:30:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2180,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "6141:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2181,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "6147:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2182,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "6156:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2179,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2533,
														"src": "6125:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2184,
												"nodeType": "ExpressionStatement",
												"src": "6125:37:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2186,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "6182:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2187,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "6188:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2188,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "6192:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2185,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "6172:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6172:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "6172:26:14"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6215:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2173,
												"id": 2192,
												"nodeType": "Return",
												"src": "6208:11:14"
											}
										]
									},
									"documentation": {
										"id": 2163,
										"nodeType": "StructuredDocumentation",
										"src": "5396:581:14",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 2194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5991:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6012:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "6004:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6004:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6026:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "6018:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6018:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6038:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "6030:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6030:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6003:41:14"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "6069:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6069:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6068:6:14"
									},
									"scope": 2534,
									"src": "5982:244:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2240,
										"nodeType": "Block",
										"src": "6668:231:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2204,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2197,
														"src": "6682:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6698:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6690:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6690:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6690:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6682:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2218,
												"nodeType": "IfStatement",
												"src": "6678:86:14",
												"trueBody": {
													"id": 2217,
													"nodeType": "Block",
													"src": "6702:62:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6750:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6742:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2211,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6742:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6742:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2210,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "6723:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6723:30:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2216,
															"nodeType": "RevertStatement",
															"src": "6716:37:14"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2219,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "6777:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6791:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6783:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2220,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6783:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6783:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6777:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2233,
												"nodeType": "IfStatement",
												"src": "6773:86:14",
												"trueBody": {
													"id": 2232,
													"nodeType": "Block",
													"src": "6795:64:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6845:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6837:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2226,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6837:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6837:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2225,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "6816:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6816:32:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2231,
															"nodeType": "RevertStatement",
															"src": "6809:39:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2235,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "6876:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2236,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "6882:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2237,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "6886:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2234,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2333,
														"src": "6868:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6868:24:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2239,
												"nodeType": "ExpressionStatement",
												"src": "6868:24:14"
											}
										]
									},
									"documentation": {
										"id": 2195,
										"nodeType": "StructuredDocumentation",
										"src": "6232:362:14",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 2241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6608:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6626:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "6618:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6618:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6640:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "6632:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6632:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6652:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "6644:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6644:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6617:41:14"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6668:0:14"
									},
									"scope": 2534,
									"src": "6599:300:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2332,
										"nodeType": "Block",
										"src": "7289:1095:14",
										"statements": [
											{
												"assignments": [
													2253
												],
												"declarations": [
													{
														"constant": false,
														"id": 2253,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7320:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2332,
														"src": "7299:22:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 2252,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2251,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7299:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "7299:12:14"
															},
															"referencedDeclaration": 1958,
															"src": "7299:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2256,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2254,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "7324:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1958_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7324:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7299:43:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2257,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2244,
														"src": "7356:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7372:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7364:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2258,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7364:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7364:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7356:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2299,
													"nodeType": "Block",
													"src": "7532:366:14",
													"statements": [
														{
															"assignments": [
																2271
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2271,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7554:11:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 2299,
																	"src": "7546:19:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2270,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7546:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2276,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 2272,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2253,
																		"src": "7568:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7570:9:14",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1945,
																	"src": "7568:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2275,
																"indexExpression": {
																	"id": 2274,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "7580:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7568:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7546:39:14"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2277,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "7603:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "7617:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7603:19:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2287,
															"nodeType": "IfStatement",
															"src": "7599:115:14",
															"trueBody": {
																"id": 2286,
																"nodeType": "Block",
																"src": "7624:90:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2281,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2244,
																					"src": "7674:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2282,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2271,
																					"src": "7680:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2283,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2248,
																					"src": "7693:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2280,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "7649:24:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7649:50:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2285,
																		"nodeType": "RevertStatement",
																		"src": "7642:57:14"
																	}
																]
															}
														},
														{
															"id": 2298,
															"nodeType": "UncheckedBlock",
															"src": "7727:161:14",
															"statements": [
																{
																	"expression": {
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 2288,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "7834:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 2291,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7836:9:14",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1945,
																				"src": "7834:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2292,
																			"indexExpression": {
																				"id": 2290,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2244,
																				"src": "7846:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7834:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2293,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2271,
																				"src": "7854:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2294,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2248,
																				"src": "7868:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7854:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7834:39:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2297,
																	"nodeType": "ExpressionStatement",
																	"src": "7834:39:14"
																}
															]
														}
													]
												},
												"id": 2300,
												"nodeType": "IfStatement",
												"src": "7352:546:14",
												"trueBody": {
													"id": 2269,
													"nodeType": "Block",
													"src": "7376:150:14",
													"statements": [
														{
															"expression": {
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2263,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2253,
																		"src": "7492:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7494:12:14",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1953,
																	"src": "7492:14:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2266,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "7510:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7492:23:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2268,
															"nodeType": "ExpressionStatement",
															"src": "7492:23:14"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2301,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "7912:2:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7926:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7918:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2302,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7918:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7918:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7912:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2324,
													"nodeType": "Block",
													"src": "8129:208:14",
													"statements": [
														{
															"id": 2323,
															"nodeType": "UncheckedBlock",
															"src": "8143:184:14",
															"statements": [
																{
																	"expression": {
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 2315,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "8288:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 2318,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8290:9:14",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1945,
																				"src": "8288:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2319,
																			"indexExpression": {
																				"id": 2317,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2246,
																				"src": "8300:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8288:15:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 2320,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "8307:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8288:24:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2322,
																	"nodeType": "ExpressionStatement",
																	"src": "8288:24:14"
																}
															]
														}
													]
												},
												"id": 2325,
												"nodeType": "IfStatement",
												"src": "7908:429:14",
												"trueBody": {
													"id": 2314,
													"nodeType": "Block",
													"src": "7930:193:14",
													"statements": [
														{
															"id": 2313,
															"nodeType": "UncheckedBlock",
															"src": "7944:169:14",
															"statements": [
																{
																	"expression": {
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 2307,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2253,
																				"src": "8075:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 2309,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8077:12:14",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1953,
																			"src": "8075:14:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 2310,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "8093:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:23:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2312,
																	"nodeType": "ExpressionStatement",
																	"src": "8075:23:14"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2327,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "8361:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "8367:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2329,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "8371:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2326,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "8352:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8352:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2331,
												"nodeType": "EmitStatement",
												"src": "8347:30:14"
											}
										]
									},
									"documentation": {
										"id": 2242,
										"nodeType": "StructuredDocumentation",
										"src": "6905:304:14",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 2333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7223:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7239:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "7231:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7231:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7253:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "7245:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7245:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7265:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "7257:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7257:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7230:41:14"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7289:0:14"
									},
									"scope": 2534,
									"src": "7214:1170:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2365,
										"nodeType": "Block",
										"src": "8783:152:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2341,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2336,
														"src": "8797:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8816:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8808:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2342,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8808:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8808:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8797:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2355,
												"nodeType": "IfStatement",
												"src": "8793:91:14",
												"trueBody": {
													"id": 2354,
													"nodeType": "Block",
													"src": "8820:64:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8870:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8862:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2348,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8862:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8862:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2347,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8841:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8841:32:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2353,
															"nodeType": "RevertStatement",
															"src": "8834:39:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8909:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8901:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2357,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8901:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8901:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2361,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "8913:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2362,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "8922:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2356,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2333,
														"src": "8893:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8893:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2364,
												"nodeType": "ExpressionStatement",
												"src": "8893:35:14"
											}
										]
									},
									"documentation": {
										"id": 2334,
										"nodeType": "StructuredDocumentation",
										"src": "8390:332:14",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 2366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8736:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8750:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8742:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8742:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8767:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "8759:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8741:32:14"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8783:0:14"
									},
									"scope": 2534,
									"src": "8727:208:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2398,
										"nodeType": "Block",
										"src": "9309:150:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2374,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "9323:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9342:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9334:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2375,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9334:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9334:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9323:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2388,
												"nodeType": "IfStatement",
												"src": "9319:89:14",
												"trueBody": {
													"id": 2387,
													"nodeType": "Block",
													"src": "9346:62:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9394:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9386:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2381,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9386:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9386:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2380,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9367:18:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9367:30:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2386,
															"nodeType": "RevertStatement",
															"src": "9360:37:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2390,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "9425:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9442:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9434:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2391,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9434:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9434:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2395,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "9446:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2389,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2333,
														"src": "9417:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9417:35:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "9417:35:14"
											}
										]
									},
									"documentation": {
										"id": 2367,
										"nodeType": "StructuredDocumentation",
										"src": "8941:307:14",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 2399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9262:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9276:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "9268:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9268:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9293:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "9285:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9285:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9267:32:14"
									},
									"returnParameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9309:0:14"
									},
									"scope": 2534,
									"src": "9253:206:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2416,
										"nodeType": "Block",
										"src": "10069:54:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2410,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "10088:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2411,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "10095:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "10104:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10111:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2409,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2417,
															2485
														],
														"referencedDeclaration": 2485,
														"src": "10079:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10079:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2415,
												"nodeType": "ExpressionStatement",
												"src": "10079:37:14"
											}
										]
									},
									"documentation": {
										"id": 2400,
										"nodeType": "StructuredDocumentation",
										"src": "9465:525:14",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10004:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10021:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "10013:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10013:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10036:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "10028:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10028:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10053:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "10045:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10045:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10012:47:14"
									},
									"returnParameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10069:0:14"
									},
									"scope": 2534,
									"src": "9995:128:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "11068:389:14",
										"statements": [
											{
												"assignments": [
													2431
												],
												"declarations": [
													{
														"constant": false,
														"id": 2431,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11099:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2484,
														"src": "11078:22:14",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 2430,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2429,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11078:12:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1958,
																"src": "11078:12:14"
															},
															"referencedDeclaration": 1958,
															"src": "11078:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2434,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2432,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "11103:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$1958_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11103:18:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11078:43:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2435,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2420,
														"src": "11135:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11152:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11144:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2436,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11144:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11144:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11135:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2449,
												"nodeType": "IfStatement",
												"src": "11131:89:14",
												"trueBody": {
													"id": 2448,
													"nodeType": "Block",
													"src": "11156:64:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11206:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11198:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2442,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11198:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11198:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2441,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "11177:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11177:32:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2447,
															"nodeType": "RevertStatement",
															"src": "11170:39:14"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2450,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2422,
														"src": "11233:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11252:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11244:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2451,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11244:7:14",
																"typeDescriptions": {}
															}
														},
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11244:10:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11233:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2464,
												"nodeType": "IfStatement",
												"src": "11229:90:14",
												"trueBody": {
													"id": 2463,
													"nodeType": "Block",
													"src": "11256:63:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11305:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11297:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2457,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11297:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11297:10:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2456,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "11277:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11277:31:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2462,
															"nodeType": "RevertStatement",
															"src": "11270:38:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 2465,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2431,
																	"src": "11328:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$1958_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 2469,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11330:11:14",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1951,
																"src": "11328:13:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2470,
															"indexExpression": {
																"id": 2467,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2420,
																"src": "11342:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11328:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2471,
														"indexExpression": {
															"id": 2468,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2422,
															"src": "11349:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11328:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2472,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2424,
														"src": "11360:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11328:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2474,
												"nodeType": "ExpressionStatement",
												"src": "11328:37:14"
											},
											{
												"condition": {
													"id": 2475,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2426,
													"src": "11379:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2483,
												"nodeType": "IfStatement",
												"src": "11375:76:14",
												"trueBody": {
													"id": 2482,
													"nodeType": "Block",
													"src": "11390:61:14",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2477,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2420,
																		"src": "11418:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2478,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2422,
																		"src": "11425:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2479,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2424,
																		"src": "11434:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2476,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "11409:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11409:31:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2481,
															"nodeType": "EmitStatement",
															"src": "11404:36:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2418,
										"nodeType": "StructuredDocumentation",
										"src": "10129:836:14",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10979:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10996:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "10988:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10988:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11011:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "11003:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11003:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11028:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "11020:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11020:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11040:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "11035:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11035:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10987:63:14"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11068:0:14"
									},
									"scope": 2534,
									"src": "10970:487:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "11828:388:14",
										"statements": [
											{
												"assignments": [
													2496
												],
												"declarations": [
													{
														"constant": false,
														"id": 2496,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11846:16:14",
														"nodeType": "VariableDeclaration",
														"scope": 2532,
														"src": "11838:24:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2495,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11838:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2501,
												"initialValue": {
													"arguments": [
														{
															"id": 2498,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "11875:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2499,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "11882:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2497,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "11865:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11865:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11838:52:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2502,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2496,
														"src": "11904:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11929:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2504,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11929:7:14",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 2503,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11924:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11924:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 2507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11938:3:14",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11924:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11904:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2531,
												"nodeType": "IfStatement",
												"src": "11900:310:14",
												"trueBody": {
													"id": 2530,
													"nodeType": "Block",
													"src": "11943:267:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2509,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2496,
																	"src": "11961:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "11980:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11961:24:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2519,
															"nodeType": "IfStatement",
															"src": "11957:130:14",
															"trueBody": {
																"id": 2518,
																"nodeType": "Block",
																"src": "11987:100:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2513,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2490,
																					"src": "12039:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2514,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2496,
																					"src": "12048:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2515,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "12066:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2512,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 120,
																				"src": "12012:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12012:60:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2517,
																		"nodeType": "RevertStatement",
																		"src": "12005:67:14"
																	}
																]
															}
														},
														{
															"id": 2529,
															"nodeType": "UncheckedBlock",
															"src": "12100:100:14",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2521,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "12137:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2522,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2490,
																				"src": "12144:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2523,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2496,
																					"src": "12153:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2524,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2492,
																					"src": "12172:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12153:24:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 2526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12179:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 2520,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				2417,
																				2485
																			],
																			"referencedDeclaration": 2485,
																			"src": "12128:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12128:57:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2528,
																	"nodeType": "ExpressionStatement",
																	"src": "12128:57:14"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2486,
										"nodeType": "StructuredDocumentation",
										"src": "11463:271:14",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11748:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11772:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "11764:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11764:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11787:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "11779:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11779:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11804:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "11796:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11796:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11763:47:14"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11828:0:14"
									},
									"scope": 2534,
									"src": "11739:477:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2535,
							"src": "1275:10943:14",
							"usedErrors": [
								101,
								106,
								111,
								120,
								125,
								130,
								1671,
								1674
							],
							"usedEvents": [
								238,
								247,
								1679
							]
						}
					],
					"src": "105:12114:14"
				},
				"id": 14
			},
			"upgradeable/contracts/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "upgradeable/contracts/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							2580
						],
						"Initializable": [
							1908
						]
					},
					"id": 2581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2536,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:15"
						},
						{
							"absolutePath": "upgradeable/contracts/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 2538,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2581,
							"sourceUnit": 1909,
							"src": "126:63:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2537,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1908,
										"src": "134:13:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2540,
										"name": "Initializable",
										"nameLocations": [
											"728:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1908,
										"src": "728:13:15"
									},
									"id": 2541,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:15"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2539,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:15",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2580,
							"linearizedBaseContracts": [
								2580,
								1908
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2546,
										"nodeType": "Block",
										"src": "800:7:15",
										"statements": []
									},
									"id": 2547,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2544,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2543,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "783:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:15"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:15"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:15"
									},
									"scope": 2580,
									"src": "748:59:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2552,
										"nodeType": "Block",
										"src": "875:7:15",
										"statements": []
									},
									"id": 2553,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2550,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2549,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1817,
												"src": "858:16:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:15"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:15"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:15"
									},
									"scope": 2580,
									"src": "813:69:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2561,
										"nodeType": "Block",
										"src": "949:34:15",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2558,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:15",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2557,
												"id": 2560,
												"nodeType": "Return",
												"src": "959:17:15"
											}
										]
									},
									"id": 2562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:15"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "940:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:15"
									},
									"scope": 2580,
									"src": "887:96:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2570,
										"nodeType": "Block",
										"src": "1056:32:15",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2567,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:15",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2566,
												"id": 2569,
												"nodeType": "Return",
												"src": "1066:15:15"
											}
										]
									},
									"id": 2571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:15"
									},
									"returnParameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "1040:14:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:15"
									},
									"scope": 2580,
									"src": "989:99:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "1166:25:15",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2575,
												"id": 2577,
												"nodeType": "Return",
												"src": "1176:8:15"
											}
										]
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:15"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "1157:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:15"
									},
									"scope": 2580,
									"src": "1094:97:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2581,
							"src": "688:505:15",
							"usedErrors": [
								1671,
								1674
							],
							"usedEvents": [
								1679
							]
						}
					],
					"src": "101:1093:15"
				},
				"id": 15
			}
		}
	}
}